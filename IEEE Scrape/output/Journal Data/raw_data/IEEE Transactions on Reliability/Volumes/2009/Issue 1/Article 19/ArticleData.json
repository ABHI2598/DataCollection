{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/4781593/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Application of a Failure Driven Test Profile in Random Testing", "doi": "10.1109/TR.2008.2011687", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "4781593", "endPage": "192", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/4797896/4781593", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "4797896", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "179", "standardTitle": "Application of a Failure Driven Test Profile in Random Testing", "publicationDate": "March 2009", "pdfPath": "/iel5/24/4797896/04781593.pdf", "mlTime": "PT0.118196S", "publicationNumber": "24", "copyrightYear": "2009", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Tsong Yueh Chen (M'03) is a Chair Professor of Software Engineering at the Faculty of Information and Communication Technologies in Swinburne University of Technology. He received his PhD degree in Computer Science from the University of Melbourne; MSc, and DIC in Computer Science from Imperial College of Science and Technology; and BSc., and MPhil. from The University of Hong Kong. His current research interests include software testing and debugging, software maintenance, and software design."]}, "affiliation": "Fac. of Inf. & Commun. Technol., Swinburne Univ. of Technol., Hawthorn, VIC", "name": "Tsong Yueh Chen"}, {"bio": {"p": ["Fei-Ching Kuo (M'06) is a Lecturer at the Faculty of Information and Communication Technologies in Swinburne University of Technology. She received her PhD degree in Software Engineering, and BSc. (Honors) in Computer Science, both from the Swinburne University of Technology. Her current research interests include software testing, debugging, and project management."]}, "affiliation": "Fac. of Inf. & Commun. Technol., Swinburne Univ. of Technol., Hawthorn, VIC", "name": "Fei-Ching Kuo"}, {"bio": {"p": ["Huai Liu is a PhD candidate, and a Research Associate at the Faculty of Information and Communication Technologies in Swinburne University of Technology. He received his MEng. in Communications and Information System, and BEng. in Physioelectronic Technology, both from Nankai University. His current research interests include software testing, and telecommunications."]}, "affiliation": "Fac. of Inf. & Commun. Technol., Swinburne Univ. of Technol., Hawthorn, VIC", "name": "Huai Liu"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-11-15T09:58:48", "abstract": "Random testing techniques have been extensively used in reliability assessment, as well as in debug testing. When used to assess software reliability, random testing selects test cases based on an operational profile; while in the context of debug testing, random testing often uses a uniform distribution. However, generally neither an operational profile nor a uniform distribution is chosen from the perspective of maximizing the effectiveness of failure detection. Adaptive random testing has been proposed to enhance the failure detection capability of random testing by evenly spreading test cases over the whole input domain. In this paper, we propose a new test profile, which is different from both the uniform distribution, and operational profiles. The aim of the new test profile is to maximize the effectiveness of failure detection. We integrate this new test profile with some existing adaptive random testing algorithms, and develop a family of new random testing algorithms. These new algorithms not only distribute test cases more evenly, but also have better failure detection capabilities than the corresponding original adaptive random testing algorithms. As a consequence, they perform better than the pure random testing.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "4781593", "xplore-issue": "4797896", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=4797896", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Application+of+a+Failure+Driven+Test+Profile+in+Random+Testing&isbn=&publicationDate=March+2009&author=Tsong+Yueh+Chen&ContentID=10.1109/TR.2008.2011687&orderBeanReset=true&startPage=179&endPage=192&volumeNum=58&issueNum=1", "citationCount": "10", "keywords": [{"kwd": ["Software testing", "Software reliability", "Computer bugs", "Application software", "Subspace constraints", "Probability distribution", "Software debugging", "Performance evaluation", "Power capacitors", "Probability density function"], "type": "IEEE Keywords"}, {"kwd": ["system recovery", "program debugging", "program testing", "software reliability"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["failure detection capability", "failure driven test profile", "random testing techniques", "reliability assessment", "software reliability", "debug testing", "uniform distribution"], "type": "INSPEC: Non-Controlled Indexing"}, {"kwd": ["uniform distribution", "Adaptive random testing", "operational profile", "random testing", "test profile"], "type": "Author Keywords "}], "issue": "1", "chronOrPublicationDate": "March 2009", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Application of a Failure Driven Test Profile in Random Testing", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "58", "accessionNumber": "10503047"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/4797896/4781593", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "Application of a Failure Driven Test Profile in Random Testing", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Adaptive random testing through test profiles", "displayText": "Huai Liu, Xiaodong Xie, Jing Yang, Yansheng Lu, Tsong Yueh Chen, \"Adaptive random testing through test profiles\", <em>Software Practice and Experience</em>, pp. n/a, 2011, ISSN 1097024X.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/spe.1067"}}, {"title": "Empirical evaluation of the fault detection effectiveness and test effort efficiency of the automated AOP testing approaches", "displayText": "Reza Meimandi Parizi, Abdul Azim Abdul Ghani, Rusli Abdullah, Rodziah Atan, \"Empirical evaluation of the fault detection effectiveness and test effort efficiency of the automated AOP testing approaches\", <em>Information and Software Technology</em>, vol. 53, pp. 1062, 2011, ISSN 09505849.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.infsof.2011.05.004"}}], "ieee": [{"title": "An Analysis of Failure-Based Test Profiles for Random Testing", "displayText": "Robert Merkel, Fei-Ching Kuo, Tsong Yueh Chen, \"An Analysis of Failure-Based Test Profiles for Random Testing\", <em>Computer Software and Applications Conference (COMPSAC) 2011 IEEE 35th Annual</em>, pp. 68-75, 2011, ISSN 0730-3157.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6032326", "pdfSize": "590KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6032326"}}, {"title": "Comparative analysis and development of new approach for random testing", "displayText": "Jaypal D. Rangari, Swapnili P. Karmore, \"Comparative analysis and development of new approach for random testing\", <em>Circuits Systems Communication and Information Technology Applications (CSCITA) 2014 International Conference on</em>, pp. 332-335, 2014.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6839282", "pdfSize": "388KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6839282"}}, {"title": "Adaptive Random Testing by Exclusion through Test Profile", "displayText": "Huai Liu, Xiaodong Xie, Jing Yang, Yansheng Lu, Tsong Yueh Chen, \"Adaptive Random Testing by Exclusion through Test Profile\", <em>Quality Software (QSIC) 2010 10th International Conference on</em>, pp. 92-101, 2010, ISSN 1550-6002.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5562948", "pdfSize": "337KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5562948"}}, {"title": "RELAI Testing: A Technique to Assess and Improve Software Reliability", "displayText": "Domenico Cotroneo, Roberto Pietrantuono, Stefano Russo, \"RELAI Testing: A Technique to Assess and Improve Software Reliability\", <em>Software Engineering IEEE Transactions on</em>, vol. 42, pp. 452-475, 2016, ISSN 0098-5589.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7299696", "pdfSize": "2274KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7299696"}}, {"title": "Combining Operational and Debug Testing for Improving Reliability", "displayText": "Domenico Cotroneo, Roberto Pietrantuono, Stefano Russo, \"Combining Operational and Debug Testing for Improving Reliability\", <em>Reliability IEEE Transactions on</em>, vol. 62, pp. 408-423, 2013, ISSN 0018-9529.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6497086", "pdfSize": "2697KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6497086"}}, {"title": "Randomized Quasi-Random Testing", "displayText": "Huai Liu, Tsong Yueh Chen, \"Randomized Quasi-Random Testing\", <em>Computers IEEE Transactions on</em>, vol. 65, pp. 1896-1909, 2016, ISSN 0018-9340.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7156100", "pdfSize": "2192KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7156100"}}, {"title": "Shortening the Cycle of Software Reliability Testing with Fuzzy Discrimination", "displayText": "Jun Ai, Feng Zheng, Jingwei Shang, \"Shortening the Cycle of Software Reliability Testing with Fuzzy Discrimination\", <em>Software Security and Reliability (SERE) 2013 IEEE 7th International Conference on</em>, pp. 21-29, 2013.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6571692", "pdfSize": "1333KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6571692"}}, {"title": "Enhancing Performance of Random Testing through Markov Chain Monte Carlo Methods", "displayText": "Bo Zhou, Hiroyuki Okamura, Tadashi Dohi, \"Enhancing Performance of Random Testing through Markov Chain Monte Carlo Methods\", <em>Computers IEEE Transactions on</em>, vol. 62, pp. 186-192, 2013, ISSN 0018-9340.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6060801", "pdfSize": "544KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6060801"}}]}, "mlTime": "PT0.116247S", "title": "Application of a Failure Driven Test Profile in Random Testing", "lastupdate": "2016-11-15T09:58:48", "ieeeCitationCount": "8", "nonIeeeCitationCount": "2"}, "references": [{"id": "ref1", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=2185", "pdfSize": "839KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Data diversity is described, and the results of a pilot study are presented. The regions of the input space that cause failure for certain experimental programs are discussed, and data reexpression, the way in which alternate input data sets can be obtained, is examined. A description is given of the retry block which is the data-diverse equivalent of the recovery block, and a model of the retry block, together with some empirical results is presented. N-copy programming which is the data-divers...", "documentLink": "/document/2185"}, "context": [{"sec": "sec1", "part": "1", "text": "Several studies [1], [2], [12], [25] have independently made a common observation that failure-causing inputs tend to cluster into contiguous regions (known as failure regions [1]) in the input domain."}], "title": "Data diversity: An approach\nto software fault tolerance", "order": "1", "text": "P. E. Ammann, J. C. Knight, \"Data diversity: An approach\nto software fault tolerance\", <em>IEEE Trans. Computers</em>, vol. 37, no. 4, pp. 418-425, 1988."}, {"id": "ref2", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=627312", "pdfSize": "902KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Experimental and theoretical evidence for the existence of contiguous failure regions in the program input space (blob defects) is provided. For real-time systems where successive input values tend to be similar, blob defects can have a major impact on the software survival time because the failure probability is not constant. For example, with a random walk input sequence, the probability of failure decreases as the time from the last failure increases. It is shown that the key factors affectin...", "documentLink": "/document/627312"}, "context": [{"sec": "sec1", "part": "1", "text": "Several studies [1], [2], [12], [25] have independently made a common observation that failure-causing inputs tend to cluster into contiguous regions (known as failure regions [1]) in the input domain."}], "title": "The variation of software survival\ntimes for different operational input profiles", "order": "2", "text": "P. G. Bishop, \"The variation of software survival\ntimes for different operational input profiles\", <em>Proceedings of the 23rd International Symposium on Fault-Tolerant Computing (FTCS-23)</em>, pp. 98-107, 1993."}, {"id": "ref3", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218194006002926"}, "context": [{"sec": "sec1", "part": "1", "text": " Various algorithms have been developed to implement the basic \u201ceven spread\u201d intuition of ART, such as fixed-sized-candidate-set ART (FSCS-ART) [7], restricted random testing (RRT) [3], and lattice-based ART [17]."}, {"sec": "sec1", "part": "1", "text": " We conduct investigations on two particular ART algorithms: FSCS-ART [7], and RRT [3]."}, {"sec": "sec2b", "part": "1", "text": "Restricted random testing (RRT) [3] creates an exclusion region around each element of \\$E\\$."}, {"sec": "sec2b", "part": "1", "text": " Some simulations [3] have shown that the failure detection capability of RRT improves with the increase of \\$R\\$."}, {"sec": "sec2b", "part": "1", "text": " In addition, we set the initial value of \\$R\\$ at 1, 1.7, 3.3, and 6.4 for RRT in 1D, 2D, 3D, and 4D spaces, respectively, as suggested in [3]."}], "title": "Restricted random testing: Adaptive random\ntesting by exclusion", "order": "3", "text": "K. P. Chan, T. Y. Chen, D. Towey, \"Restricted random testing: Adaptive random\ntesting by exclusion\", <em>International Journal of Software Engineering and Knowledge Engineering</em>, vol. 16, no. 4, pp. 553-584, 2006."}, {"id": "ref4", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2008.03.062"}, "context": [{"sec": "sec2c", "part": "1", "text": " Obviously, a theoretical analysis of \\$F_{ART}\\$ is extremely difficult, and thus previous studies of ART [4]\u2013[6] have estimated \\$F_{ART}\\$ via simulations, using the basic procedure as follows."}, {"sec": "sec2c", "part": "1", "text": "Previous studies [4], [6] showed that FSCS-ART, and RRT perform best when failure-causing inputs are well clustered into one single compact region."}, {"sec": "sec2d", "part": "1", "text": "Because the basic intuition of ART is the even spread of test cases, some research [4], [19] has been conducted to measure how evenly ART algorithms spread test cases from different perspectives."}, {"sec": "sec2d", "part": "1", "text": " [4], where some distribution metrics were employed to measure the evenness of test case distribution."}, {"sec": "sec2d", "part": "1", "text": " [4] found that all ART algorithms under their investigation exhibit various degrees of uneven test case distribution."}, {"sec": "sec3", "part": "1", "text": "FSCS-ART, and RRT have been found to have a bias of selecting test cases from certain parts of \\$I\\$ [4], [19]."}, {"sec": "sec3", "part": "1", "text": " However, neither the spatial distribution graphs in [19] nor the distribution metrics in [4] have given a precise measurement for the tc-bias."}, {"sec": "sec3d", "part": "1", "text": "We further investigate the test case distribution of ART-DNC algorithms by repeating the simulations in [4] on FSCS-ART-DNC, and RRT-DNC."}, {"sec": "sec3e", "part": "1", "text": " It has been shown in [4] that the test case distributions of the original algorithms are less even when either \\$\\theta\\$ or \\$N\\$ is higher."}], "title": "On test case distributions of adaptive random\ntesting", "order": "4", "text": "T. Y. Chen, F.-C. Kuo, H. Liu, \"On test case distributions of adaptive random\ntesting\", <em>Proceedings of the 19th International Conference on Software Engineering and Knowledge Engineering (SEKE 2007)</em>, pp. 141-144, 2007."}, {"id": "ref5", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2008.03.062"}, "context": [{"sec": "sec1", "part": "1", "text": " Therefore, some have attempted [5], [18] to make test cases more evenly spread."}, {"sec": "sec2b", "part": "1", "text": " [5] have proposed a mechanism to dynamically adjust \\$R\\$ to balance the computation time, and the performance."}, {"sec": "sec2c", "part": "1", "text": " Obviously, a theoretical analysis of \\$F_{ART}\\$ is extremely difficult, and thus previous studies of ART [4]\u2013[5][6] have estimated \\$F_{ART}\\$ via simulations, using the basic procedure as follows."}], "title": "Distributing test cases more evenly in adaptive\nrandom testing", "order": "5", "text": "T. Y. Chen, F.-C. Kuo, H. Liu, \"Distributing test cases more evenly in adaptive\nrandom testing\", <em>The Journal of Systems and Software</em>, vol. 81, no. 12, pp. 2146-2162, 2008."}, {"id": "ref6", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218194007003501"}, "context": [{"sec": "sec2c", "part": "1", "text": " Obviously, a theoretical analysis of \\$F_{ART}\\$ is extremely difficult, and thus previous studies of ART [4]\u2013[6] have estimated \\$F_{ART}\\$ via simulations, using the basic procedure as follows."}, {"sec": "sec2c", "part": "1", "text": "Previous studies [4], [6] showed that FSCS-ART, and RRT perform best when failure-causing inputs are well clustered into one single compact region."}, {"sec": "sec3e", "part": "1", "text": "Besides \\$N\\$ and \\$\\theta\\$, the performance of ART algorithms also depends on: a) the compactness of the failure region, b) the number of failure regions, and c) the size of any existing predominant failure region [6]."}, {"sec": "sec3e", "part": "1", "text": " As explained in [6], the larger \\$\\gamma\\$ is, the less compact the failure region is."}], "title": "On favorable conditions for\nadaptive random testing", "order": "6", "text": "T. Y. Chen, F.-C. Kuo, Z. Q. Zhou, \"On favorable conditions for\nadaptive random testing\", <em>International Journal of Software Engineering and Knowledge Engineering</em>, vol. 17, no. 6, pp. 805-825, 2007."}, {"id": "ref7", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " [7] have attempted to improve the effectiveness of RT by means of this characteristic of failure-causing inputs."}, {"sec": "sec1", "part": "1", "text": " Various algorithms have been developed to implement the basic \u201ceven spread\u201d intuition of ART, such as fixed-sized-candidate-set ART (FSCS-ART) [7], restricted random testing (RRT) [3], and lattice-based ART [17]."}, {"sec": "sec1", "part": "1", "text": " We conduct investigations on two particular ART algorithms: FSCS-ART [7], and RRT [3]."}, {"sec": "sec2a", "part": "1", "text": "Fixed-sized-candidate-set ART (FSCS-ART) [7] makes use of two sets of test cases: the executed set \\$E=\\{e_{1},e_{2},\\cdots,e_{n}\\}\\$, which contains the executed test cases; and the candidate set \\$C=\\{c_{1},c_{2},\\cdots,c_{k}\\}\\$, which contains \\$k\\$ randomly generated candidates."}, {"sec": "sec2a", "part": "1", "text": " The details of the FSCS-ART algorithm can be found in [7]."}, {"sec": "sec2a", "part": "1", "text": " Although the performance of FSCS-ART improves with the increase of \\$k\\$, any \\$k>10\\$ will not significantly improve the effectiveness of FSCS-ART [7]."}, {"sec": "sec2c", "part": "1", "text": " Such a process is repeated for a sufficiently large number \\$(S)\\$ of times to ensure that the average value of F-counts can be regarded as a reliable estimate for \\$F_{ART}\\$ within a specified confidence level, and an accuracy range (details of deciding \\$S\\$ can be found in [7])."}], "title": "Adaptive random testing", "order": "7", "text": "T. Y. Chen, H. Leung, I. K. Mak, \"Adaptive random testing\", <em>Proceedings of the 9th Asian Computing Science Conference</em>, vol. 3321, pp. 320-329, 2004."}, {"id": "ref8", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/1363102.1363107"}, "context": [{"sec": "sec2c", "part": "1", "text": " Readers may refer to [8] for an explanation for why the F-measure is more appropriate than other metrics in evaluating ART."}, {"sec": "sec2c", "part": "1", "text": " The number of test cases required to detect the first failure, referred to as the F-count [8], is recorded."}], "title": "An upper bound on software\ntesting effectiveness", "order": "8", "text": "T. Y. Chen, R. Merkel, \"An upper bound on software\ntesting effectiveness\", <em>ACM Trans. Software Engineering and Methodology</em>, vol. 17, no. 3, pp. 16:1-16:27, 2008."}, {"id": "ref9", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/1145735.1145744"}, "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}], "title": "Object distance and its application to adaptive random testing\nof object-oriented programs", "order": "9", "text": "I. Ciupa, A. Leitner, M. Oriol, B. Meyer, \"Object distance and its application to adaptive random testing\nof object-oriented programs\", <em>Proceedings of the First International Workshop on Random Testing (RT'06)</em>, pp. 55-63, 2006."}, {"id": "ref10", "refType": "biblio", "links": {"pdfSize": "365KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/1368088.1368099", "abstract": "Intuition is often not a good guide to know which testing strategies will work best. There is no substitute for experimental analysis based on objective criteria: how many faults a strategy finds, and how fast. \"Random\" testing is an example of an idea that intuitively seems simplistic or even dumb, but when assessed through such criteria can yield better results than seemingly smarter strategies. The efficiency of random testing is improved if the generated inputs are evenly spread across the i..."}, "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}], "title": "ARTOO: Adaptive random testing for object-oriented software", "order": "10", "text": "I. Ciupa, A. Leitner, M. Oriol, B. Meyer, \"ARTOO: Adaptive random testing for object-oriented software\", <em>Proceedings of the 30th International Conference on Software Engineering (ICSE'08)</em>, pp. 71-80, 2008."}, {"id": "ref11", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1383103", "pdfSize": "211KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper addresses the problem of selecting finite test sets and automating this selection. Among these methods, some are deterministic and some are statistical. The kind of statistical testing we consider has been inspired by the work of Thevenod-Fosse and Waeselynck. There, the choice of the distribution on the input domain is guided by the structure of the program or the form of its specification. In the present paper, we describe a new generic method for performing statistical testing acco...", "documentLink": "/document/1383103"}, "context": [{"sec": "sec3c", "part": "1", "text": " Note that there is a family of software testing methods, namely statistical testing [11], [24], which also randomly generates program inputs according to some non-uniform distributions, which are in turn based on some criteria of either the program structure or the functionality."}], "title": "A generic method for statistical\ntesting", "order": "11", "text": "A. Denise, M.-C. Gaudel, S.-D. Gouraud, \"A generic method for statistical\ntesting\", <em>Proceedings of the 15th International Symposium on Software Reliability Engineering (ISSRE04)</em>, pp. 25-34, 2004."}, {"id": "ref12", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/0951-8320(91)90052-9"}, "context": [{"sec": "sec1", "part": "1", "text": "Several studies [1], [2], [12], [25] have independently made a common observation that failure-causing inputs tend to cluster into contiguous regions (known as failure regions [1]) in the input domain."}], "title": "NASA software failure characterization\nexperiments", "order": "12", "text": "G. B. Finelli, \"NASA software failure characterization\nexperiments\", <em>Reliability Engineering and System Safety</em>, vol. 32, no. 1/2, pp. 155-169, 1991."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=707695", "pdfSize": "202KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "There are two main goals in testing software: (1) to achieve adequate quality (debug testing), where the objective is to probe the software for defects so that these can be removed, and (2) to assess existing quality (operational testing), where the objective is to gain confidence that the software is reliable. Debug methods tend to ignore random selection of test data from an operational profile, while for operational methods this selection is all-important. Debug methods are thought to be good...", "documentLink": "/document/707695"}, "context": [{"sec": "sec1", "part": "1", "text": " Another application of RT is debug testing, which aims at detecting software failures so that program bugs can be removed, and thus software reliability can be improved [13]."}], "title": "Evaluating testing methods\nby delivered reliability", "order": "13", "text": "P. G. Frankl, R. G. Hamlet, B. Littlewood, L. Strigini, \"Evaluating testing methods\nby delivered reliability\", <em>IEEE Trans. Software Engineering</em>, vol. 24, no. 8, pp. 586-601, 1998."}, {"id": "ref14", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " RT has been widely used for assessing software reliability [14], [23], where test cases are often selected according to an operational profile."}], "title": "A programming technique for software reliability", "order": "14", "text": "E. Girard, J. Rault, \"A programming technique for software reliability\", <em>Proceedings of 1973 IEEE Symposium on Computer Software Reliability</em>, pp. 44-50, 1973."}, {"id": "ref15", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Random testing (RT) is a standard software testing technique which simply generates test cases (that is, program inputs for testing) at random from the whole input domain (that is, the set of all possible inputs for the program under test) [15], [21]."}], "title": "Random testing", "order": "15", "text": "R. Hamlet, \"Random testing\" in Encyclopedia of Software Engineering, 2002, John Wiley & Sons."}, {"id": "ref16", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}], "title": "PhD Thesis", "order": "16", "text": "F.-C. Kuo, <em>PhD Thesis</em>, 2006, Swinburne University of Technology."}, {"id": "ref17", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/1101908.1101963"}, "context": [{"sec": "sec1", "part": "1", "text": " Various algorithms have been developed to implement the basic \u201ceven spread\u201d intuition of ART, such as fixed-sized-candidate-set ART (FSCS-ART) [7], restricted random testing (RRT) [3], and lattice-based ART [17]."}], "title": "Lattice-based adaptive random\ntesting", "order": "17", "text": "J. Mayer, \"Lattice-based adaptive random\ntesting\", <em>Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering (ASE 2005)</em>, pp. 333-336, 2005."}, {"id": "ref18", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4032292", "pdfSize": "213KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Adaptive random testing (ART) subsumes a family of random testing techniques that are designed to be more effective than pure random testing. These methods spread test cases more evenly within the input domain than a uniform distribution does. In the present paper, it is investigated why standard ART methods are less effective for higher failure rates. Therefore, the spatial distribution of the test cases generated by these methods is analyzed - also in higher dimensions - with a new approach. B...", "documentLink": "/document/4032292"}, "context": [{"sec": "sec1", "part": "1", "text": " Therefore, some have attempted [5], [18] to make test cases more evenly spread."}], "title": "Adaptive random testing with\nenlarged input domain", "order": "18", "text": "J. Mayer, C. Schneckenburger, \"Adaptive random testing with\nenlarged input domain\", <em>Proceedings of the 6th International Conference on Quality Software (QSIC 2006)</em>, pp. 251-258, 2006."}, {"id": "ref19", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}, {"sec": "sec2d", "part": "1", "text": "Because the basic intuition of ART is the even spread of test cases, some research [4], [19] has been conducted to measure how evenly ART algorithms spread test cases from different perspectives."}, {"sec": "sec2d", "part": "1", "text": " In [19], the test case distributions of various ART algorithms were coarsely described by some 2D spatial distribution graphs."}, {"sec": "sec3", "part": "1", "text": "FSCS-ART, and RRT have been found to have a bias of selecting test cases from certain parts of \\$I\\$ [4], [19]."}, {"sec": "sec3", "part": "1", "text": " However, neither the spatial distribution graphs in [19] nor the distribution metrics in [4] have given a precise measurement for the tc-bias."}], "title": "PhD Thesis", "order": "19", "text": "R. Merkel, <em>PhD Thesis</em>, 2005, Swinburne University of Technology."}, {"id": "ref20", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=199724", "pdfSize": "2140KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A systematic approach to organizing the process of determining the operational profile for guiding software development is presented. The operational profile is a quantitative characterization of how a system will be used that shows how to increase productivity and reliability and speed development by allocating development resources to function on the basis of use. Using an operational profile to guide testing ensures that if testing is terminated and the software is shipped because of schedule...", "documentLink": "/document/199724"}, "context": [{"sec": "sec1", "part": "1", "text": " The operational profile refers to a probability distribution, over the input domain, which characterizes how a program is operated by end-users [20]."}], "title": "Operational profiles in software-reliability\nengineering", "order": "20", "text": "J. D. Musa, \"Operational profiles in software-reliability\nengineering\", <em>IEEE Software</em>, vol. 10, no. 2, pp. 14-32, 1993."}, {"id": "ref21", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Random testing (RT) is a standard software testing technique which simply generates test cases (that is, program inputs for testing) at random from the whole input domain (that is, the set of all possible inputs for the program under test) [15], [21]."}, {"sec": "sec1", "part": "1", "text": " Some researchers [21] argued that RT is a poor debug testing method because it does not make use of any information to guide the selection of test cases."}], "title": "The Art of Software Testing", "order": "21", "text": "G. J. Myers, The Art of Software Testing, 2004, John Wiley and Sons."}, {"id": "ref22", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}], "title": "Massive stochastic testing\nof SQL", "order": "22", "text": "D. Slutz, \"Massive stochastic testing\nof SQL\", <em>Proceedings of the 24th International Conference on Very Large Databases (VLDB 98)</em>, pp. 618-622, 1998."}, {"id": "ref23", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " RT has been widely used for assessing software reliability [14], [23], where test cases are often selected according to an operational profile."}], "title": "Software Reliability", "order": "23", "text": "T. A. Thayer, M. Lipow, E. C. Nelson, Software Reliability, 1978, North-Holland Publishing Company."}, {"id": "ref24", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/stvr.4370010203"}, "context": [{"sec": "sec3c", "part": "1", "text": " Note that there is a family of software testing methods, namely statistical testing [11], [24], which also randomly generates program inputs according to some non-uniform distributions, which are in turn based on some criteria of either the program structure or the functionality."}], "title": "An investigation of software\nstatistical testing", "order": "24", "text": "P. Thvenod-Fosse, H. Waseselynck, \"An investigation of software\nstatistical testing\", <em>The Journal of Software Testing Verification and Reliability</em>, vol. 1, no. 2, pp. 5-26, 1991."}, {"id": "ref25", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1702726", "pdfSize": "3399KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a testing strategy desiged to detect errors in the control flow of a computer program, and the conditions under which this strategy is reliable are given and characterized. The control flow statements in a computer progam partition the input space into a set of mutually exclusive domains, each of which corresponds to a particular program path and consists of input data points which cause that path to be executed. The testing strategy generates test points to examine the bound...", "documentLink": "/document/1702726"}, "context": [{"sec": "sec1", "part": "1", "text": "Several studies [1], [2], [12], [25] have independently made a common observation that failure-causing inputs tend to cluster into contiguous regions (known as failure regions [1]) in the input domain."}], "title": "A domain strategy for computer\nprogram testing", "order": "25", "text": "L. J. White, E. I. Cohen, \"A domain strategy for computer\nprogram testing\", <em>IEEE Trans. Software Engineering</em>, vol. 6, no. 3, pp. 247-257, 1980."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1319081", "pdfSize": "266KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Java has been used widely, from servers to cellular phones. In order to test those Java runtime systems, many test tools have been provided. However these tools are not enough for Java JIT compilers. They should be tested by various executable bytecode sequences. Most test tools don't cover such kinds of a combination test. Therefore we developed a random test program generator and a Java JIT compiler test system. This test system automatically: 1) generates Java class files which are random, ex...", "documentLink": "/document/1319081"}, "context": [{"sec": "sec2", "part": "1", "text": " Applications of RT, and ART on non-numeric programs have been studied in [22], [26], and [9], [10], [16], [19], respectively."}], "title": "Random program generator for Java JIT compiler\ntest system", "order": "26", "text": "T. Yoshikawa, K. Shimura, T. Ozawa, \"Random program generator for Java JIT compiler\ntest system\", <em>Proceedings of the 3rd International Conference on Quality Software (QSIC 2003)</em>, pp. 20-24, 2003."}], "arnumber": "4781593"}