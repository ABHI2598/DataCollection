{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/4298229/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Exploring Genetic Programming and Boosting Techniques to Model Software Reliability", "doi": "10.1109/TR.2007.903269", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "4298229", "endPage": "434", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/4298224/4298229", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "4298224", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "422", "standardTitle": "Exploring Genetic Programming and Boosting Techniques to Model Software Reliability", "publicationDate": "Sept. 2007", "pdfPath": "/iel5/24/4298224/04298229.pdf", "mlTime": "PT0.198334S", "publicationNumber": "24", "copyrightYear": "2007", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Eduardo Oliveira Costa is a researcher at the Computer Science Department at Federal University of Paran\u00e1, Brazil, since 2006, supported by CNPq (National Council for Scientific and Technological Development, Brazil). He received a M.Sc. in Computer Science from Federal University of Paran\u00e1, Brazil, in 2006. Eduardo's research interests are in Evolutionary Computation, Genetic Programming, and Genetic Algorithms."]}, "affiliation": "Fed. Univ. of Parana, Curitiba", "name": "Eduardo Oliveira Costa"}, {"bio": {"p": ["Gustavo Alexandre de Souza received his BS in Electrical Engineering / Electronics (2002), and his MS in Computer Science (2004) from Federal University of Paran\u00e1, Brazil. He currently works at Siemens, Brazil. His interests are in Software Engineering, particularly software testing, and reliability."]}, "affiliation": "Fed. Univ. of Parana, Curitiba", "name": "Gustavo Alexandre de Souza"}, {"bio": {"p": ["Aurora Trinidad Ramirez Pozo is an associate professor at the Computer Science Department, and Numerical Methods for Engineering at Federal University of Paran\u00e1, Brazil, since 1997. She received a M.S. in Electrical Engineering from Federal University of Santa Catarina, Brazil, in 1991. She received a Ph.D. in Electrical Engineering from the Federal University of Santa Catarina, Brazil. Aurora's research interests are in Evolutionary Computation, Data Mining, and Complex Problems."]}, "affiliation": "Fed. Univ. of Parana, Curitiba", "name": "Aurora Trinidad Ramirez Pozo"}, {"bio": {"p": ["Silvia Regina Vergilio received the MS (1991), and DS (1997) degrees from the University of Campinas, UNICAMP, Brazil. She is currently in the Computer Science Department at the Federal University of Paran\u00e1, Brazil, where she has been a faculty member since 1993. She has been involved in several projects, and her research interests are in the areas of Genetic Programming, and Software Engineering, such as: software testing, software quality, and software metrics."]}, "affiliation": "Fed. Univ. of Parana, Curitiba", "name": "Silvia Regina Vergilio"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-11-14T23:13:36", "abstract": "Software reliability models are used to estimate the probability that a software fails at a given time. They are fundamental to plan test activities, and to ensure the quality of the software being developed. Each project has a different reliability growth behavior, and although several different models have been proposed to estimate the reliability growth, none has proven to perform well considering different project characteristics. Because of this, some authors have introduced the use of Machine Learning techniques, such as neural networks, to obtain software reliability models. Neural network-based models, however, are not easily interpreted, and other techniques could be explored. In this paper, we explore an approach based on genetic programming, and also propose the use of boosting techniques to improve performance. We conduct experiments with reliability models based on time, and on test coverage. The obtained results show some advantages of the introduced approach. The models adapt better to the reliability curve, and can be used in projects with different characteristics.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "4298229", "xplore-issue": "4298224", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=4298224", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Exploring+Genetic+Programming+and+Boosting+Techniques+to+Model+Software+Reliability&isbn=&publicationDate=Sept.+2007&author=Eduardo+Oliveira+Costa&ContentID=10.1109/TR.2007.903269&orderBeanReset=true&startPage=422&endPage=434&volumeNum=56&issueNum=3", "citationCount": "15", "keywords": [{"kwd": ["Genetic programming", "Boosting", "Software reliability", "Machine learning", "Software systems", "Neural networks", "Artificial neural networks", "Software testing", "Software quality", "Predictive models"], "type": "IEEE Keywords"}, {"kwd": ["software reliability", "genetic algorithms", "learning (artificial intelligence)", "neural nets", "software quality"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["neural networks", "genetic programming", "boosting techniques", "software reliability", "software quality", "reliability growth", "machine learning techniques"], "type": "INSPEC: Non-Controlled Indexing"}, {"kwd": ["software reliability models", "Fault prediction", "machine learning techniques"], "type": "Author Keywords "}], "issue": "3", "chronOrPublicationDate": "Sept. 2007", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Exploring Genetic Programming and Boosting Techniques to Model Software Reliability", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "56", "accessionNumber": "9618849"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/4298224/4298229", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "Exploring Genetic Programming and Boosting Techniques to Model Software Reliability", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Applying correlation to enhance boosting technique using genetic programming as base learner", "displayText": "Luzia Vidal de Souza, Aurora Pozo, Joel Mauricio Correa da\u00a0Rosa, Anselmo Chaves Neto, \"Applying correlation to enhance boosting technique using genetic programming as base learner\", <em>Applied Intelligence</em>, vol. 33, pp. 291, 2010, ISSN 0924-669X.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10489-009-0166-y"}}, {"title": "Meta-learning based selection of software reliability models", "displayText": "Rafael Caiuta, Aurora Pozo, Silvia Regina Vergilio, \"Meta-learning based selection of software reliability models\", <em>Automated Software Engineering</em>, pp. , 2016, ISSN 0928-8910.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10515-016-0195-9"}}, {"title": "Adaboosting-based dynamic weighted combination of software reliability growth models", "displayText": "Haifeng Li, Min Zeng, Minyan Lu, Xuan Hu, Zhen Li, \"Adaboosting-based dynamic weighted combination of software reliability growth models\", <em>Quality and Reliability Engineering International</em>, pp. n/a, 2011, ISSN 10991638.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/qre.1216"}}, {"title": "On the application of genetic programming for software engineering predictive modeling: A systematic review", "displayText": "Wasif Afzal, Richard Torkar, \"On the application of genetic programming for software engineering predictive modeling: A systematic review\", <em>Expert Systems with Applications</em>, pp. , 2011, ISSN 09574174.", "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.eswa.2011.03.041"}}, {"title": "An effective approach to estimating the parameters of software reliability growth models using a real-valued genetic algorithm", "displayText": "Taehyoun Kim, Kwangkyu Lee, Jongmoon Baik, \"An effective approach to estimating the parameters of software reliability growth models using a real-valued genetic algorithm\", <em>Journal of Systems and Software</em>, vol. 102, pp. 134, 2015, ISSN 01641212.", "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2015.01.001"}}], "ieee": [{"title": "Estimation of reliability parameters of software growth models using a variation of Particle Swarm Optimization", "displayText": "Karambir Bidhan, Adima Awasthi, \"Estimation of reliability parameters of software growth models using a variation of Particle Swarm Optimization\", <em>Confluence The Next Generation Information Technology Summit (Confluence) 2014 5th International Conference -</em>, pp. 800-805, 2014.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6949372", "pdfSize": "198KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6949372"}}, {"title": "Software reliability prediction modeling: A comparison of parametric and non-parametric modeling", "displayText": "Ankur Choudhary, Anurag Singh Baghel, Om Prakash Sangwan, \"Software reliability prediction modeling: A comparison of parametric and non-parametric modeling\", <em>Cloud System and Big Data Engineering (Confluence) 2016 6th International Conference</em>, pp. 649-653, 2016.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7508198", "pdfSize": "293KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7508198"}}, {"title": "Self-Organizing Migrating Strategies Applied to Reliability-Redundancy Optimization of Systems", "displayText": "Leandro dos Santos Coelho, \"Self-Organizing Migrating Strategies Applied to Reliability-Redundancy Optimization of Systems\", <em>Reliability IEEE Transactions on</em>, vol. 58, pp. 501-510, 2009, ISSN 0018-9529.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4967917", "pdfSize": "378KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4967917"}}, {"title": "Selecting software reliability models with a neural network meta classifier", "displayText": "Rafael Caiuta, Aurora Pozo, Leonardo Emmendorfer, Silvia Regina Vergilio, \"Selecting software reliability models with a neural network meta classifier\", <em>Neural Networks 2008. IJCNN 2008. (IEEE World Congress on Computational Intelligence). IEEE International Joint Conference on</em>, pp. 3747-3754, 2008, ISSN 1098-7576.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4634336", "pdfSize": "132KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4634336"}}, {"title": "Software reliability modeling based on SVM and virtual sample", "displayText": "Yumei Wu, Risheng Yang, \"Software reliability modeling based on SVM and virtual sample\", <em>Reliability and Maintainability Symposium (RAMS) 2013 Proceedings - Annual</em>, pp. 1-6, 2013, ISSN 0149-144X.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6517763", "pdfSize": "465KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6517763"}}, {"title": "A Genetic Programming Approach for Software Reliability Modeling", "displayText": "Eduardo Oliveira Costa, Aurora Trinidad Ramirez Pozo, Silvia Regina Vergilio, \"A Genetic Programming Approach for Software Reliability Modeling\", <em>Reliability IEEE Transactions on</em>, vol. 59, pp. 222-230, 2010, ISSN 0018-9529.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5409534", "pdfSize": "348KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5409534"}}, {"title": "A hybrid method for parameter estimation of software reliability growth model using Modified Genetic Swarm Optimization with the aid of logistic exponential testing effort function", "displayText": "K Mallikharjuna Rao, K. Anuradha, \"A hybrid method for parameter estimation of software reliability growth model using Modified Genetic Swarm Optimization with the aid of logistic exponential testing effort function\", <em>Research Advances in Integrated Navigation Systems (RAINS) International Conference on</em>, pp. 1-8, 2016.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7764400", "pdfSize": "910KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7764400"}}, {"title": "The design of a software fault prone application using evolutionary algorithm", "displayText": "Marshima Mohd Rosli, Noor Hasimah Ibrahim Teo, Nor Shahida Mohamad Yusop, Noor Shahriman Mohammad, \"The design of a software fault prone application using evolutionary algorithm\", <em>Open Systems (ICOS) 2011 IEEE Conference on</em>, pp. 338-343, 2011.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6079246", "pdfSize": "657KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6079246"}}, {"title": "A Modified Genetic Algorithm for Parameter Estimation of Software Reliability Growth Models", "displayText": "Chao-Jung Hsu, Chin-Yu Huang, Tsan-Yuan Chen, \"A Modified Genetic Algorithm for Parameter Estimation of Software Reliability Growth Models\", <em>Software Reliability Engineering 2008. ISSRE 2008. 19th International Symposium on</em>, pp. 281-282, 2008, ISSN 1071-9458.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4700336", "pdfSize": "196KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4700336"}}, {"title": "A Study on the Applicability of Modified Genetic Algorithms for the Parameter Estimation of Software Reliability Modeling", "displayText": "Chao-Jung Hsu, Chin-Yu Huang, \"A Study on the Applicability of Modified Genetic Algorithms for the Parameter Estimation of Software Reliability Modeling\", <em>Computer Software and Applications Conference (COMPSAC) 2010 IEEE 34th Annual</em>, pp. 531-540, 2010, ISSN 0730-3157.", "order": "10", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5676305", "pdfSize": "518KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5676305"}}]}, "mlTime": "PT0.133714S", "title": "Exploring Genetic Programming and Boosting Techniques to Model Software Reliability", "lastupdate": "2016-11-14T23:13:36", "ieeeCitationCount": "10", "nonIeeeCitationCount": "5"}, "references": [{"id": "ref1", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Unreliable software results in high costs for end-users, and bad reputation for developers [1]."}], "title": "Software engineering", "order": "1", "text": "I. Sommerville, Software engineering, 1996, Addison-Wesley."}, {"id": "ref2", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Software reliability is defined as the probability of failure-free operation of a computer program for a specified time in a certain environment [2]."}], "title": "Software engineering and managing software with reliability measures", "order": "2", "text": "J. Musa, A. Iannino, K. Okumoto, Software engineering and managing software with reliability measures, 1987, McGraw-Hill."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1688079", "pdfSize": "1127KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Over the past 30 years, many software reliability growth models (SRGM) have been proposed. Often, it is assumed that detected faults are immediately corrected when mathematical models are developed. This assumption may not be realistic in practice because the time to remove a detected fault depends on the complexity of the fault, the skill and experience of personnel, the size of debugging team, the technique(s) being used, and so on. During software testing, practical experiences show that mutu...", "documentLink": "/document/1688079"}, "context": [{"sec": "sec1", "part": "1", "text": "Software reliability models consider different elements of the software project, such as the specification & codification of the programs, or information about the fault detection & correction process [3]."}], "title": "Software reliability analysis by considering\nfault dependency and debugging time lag", "order": "3", "text": "C.-Y. Huang, C.-T. Lin, \"Software reliability analysis by considering\nfault dependency and debugging time lag\", <em>IEEE Trans. Reliability</em>, vol. 53, no. 3, pp. 436-450, 2006."}, {"id": "ref4", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Some of them are based on time [4]\u2013[6], that is, they consider the time between failures."}, {"sec": "sec3d", "part": "1", "text": "Two other well known traditional models were used: the Jelinski-Moranda model (JAM) [5], and the Geometric model (GEO) [4]."}], "title": "Predictions of software reliability during\ndebugging", "order": "4", "text": "P. Moranda, \"Predictions of software reliability during\ndebugging\", <em>Proceddings of the Annual Reliability Maintainability Symposium</em>, 1975."}, {"id": "ref5", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Some of them are based on time [4]\u2013[5][6], that is, they consider the time between failures."}, {"sec": "sec3d", "part": "1", "text": "Two other well known traditional models were used: the Jelinski-Moranda model (JAM) [5], and the Geometric model (GEO) [4]."}], "title": "Final Report on Software Reliability Study", "order": "5", "text": "P. Moranda, Z. Jelinski, <em>Final Report on Software Reliability Study</em>, 1972."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5220561", "pdfSize": "2168KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper investigates the validity of the execution-time theory of software reliability. The theory is outlined, along with appropriate background, definitions, assumptions, and mathematical relationships. Both the execution time and calendar time components are described. The important assumptions are discussed. Actual data are used to test the validity of most of the assumptions. Model and actual behavior are compared. The development projects and operational computation center software from...", "documentLink": "/document/5220561"}, "context": [{"sec": "sec1", "part": "1", "text": " Some of them are based on time [4]\u2013[6], that is, they consider the time between failures."}], "title": "A theory of software reliability and its application", "order": "6", "text": "J. Musa, \"A theory of software reliability and its application\", <em>IEEE Trans. Software Engineering</em>, pp. 312-327, 1975."}, {"id": "ref7", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=492450", "pdfSize": "778KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Existing time-domain models for software reliability often result in an overestimation, of such reliability because they do not take the nature of testing techniques into account. Since every testing technique has a limit to its ability to reveal faults in a given system, as a technique approaches its saturation region fewer faults are discovered and reliability growth phenomena are predicted from the models. When the software is turned over to field operation, significant overestimates of relia...", "documentLink": "/document/492450"}, "context": [{"sec": "sec1", "part": "1", "text": " Most recent works consider the coverage of a test criterion [7]\u2013[10]."}], "title": "An empirical study of the correlation between code coverage\nand reliability estimation", "order": "7", "text": "N. Chen, M. R. Lyu, W. E. Wong, \"An empirical study of the correlation between code coverage\nand reliability estimation\", <em>Third International Software Metrics Symposium</em>, pp. 133-141, 1996."}, {"id": "ref8", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Most recent works consider the coverage of a test criterion [7]\u2013[8][10]."}, {"sec": "sec4", "part": "1", "text": " The obtained models were compared with the Coverage Based Binomial model (CBB), proposed by Crespo in [8], and with ANN models."}, {"sec": "sec4", "part": "1", "text": " The methodology, datasets, evaluation measures, and results from [8], [16] were used, and described first."}, {"sec": "sec4a", "part": "1", "text": " Crespo [8] re-implanted the defects back into the program; and used it to evaluate test coverage methods, and to collect coverage data for his Coverage Based Binomial model (CBB)."}, {"sec": "sec4c", "part": "1", "text": "To evaluate GP, and GPB models based on time, we select the ANN model [16], and the non-parametric model proposed by Crespo [8] known as the Coverage Based Binomial model (CBB)."}], "title": "Modelos de confiabilidade de software baseados em cobertura de critrios estruturais de teste", "order": "8", "text": "A. N. Crespo, <em>Modelos de confiabilidade de software baseados em cobertura de critrios estruturais de teste</em>, 1997, State University of Campinas."}, {"id": "ref9", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1044339", "pdfSize": "416KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "\"Software test-coverage measures\" quantify the degree of thoroughness of testing. Tools are now available that measure test-coverage in terms of blocks, branches, computation-uses, predicate-uses, etc. that are covered. This paper models the relations among testing time, coverage, and reliability. An LE (logarithmic-exponential) model is presented that relates testing effort to test coverage (block, branch, computation-use, or predicate-use). The model is based on the hypothesis that the enumera...", "documentLink": "/document/1044339"}, "context": [{"sec": "sec1", "part": "1", "text": " Most recent works consider the coverage of a test criterion [7]\u2013[9][10]."}], "title": "Software reliability growth with test coverage", "order": "9", "text": "Y. K. Malaiya, M. N. Li, J. Bieman, R. Karcich, \"Software reliability growth with test coverage\", <em>IEEE Trans. Reliability</em>, vol. 51, no. 4, pp. 420-426, 2002."}, {"id": "ref10", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=556576", "pdfSize": "963KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper investigates: 1) the sensitivity of reliability-growth models to errors in the estimate of the operational profile (OP); and 2) the relation between this sensitivity and the testing accuracy for computer software. The investigation is based on the results of a case study in which several reliability-growth models are applied during the testing phase of a software system. The faults contained in the system are known in advance; this allows measurement of the software reliability-growth...", "documentLink": "/document/556576"}, "context": [{"sec": "sec1", "part": "1", "text": " Most recent works consider the coverage of a test criterion [7]\u2013[10]."}], "title": "Sensitivity of reliability growth models\nto operational profile errors vs. testing accuracy", "order": "10", "text": "A. Pasquine, A. N. Crespo, P. Matrella, \"Sensitivity of reliability growth models\nto operational profile errors vs. testing accuracy\", <em>IEEE Trans. Reliability</em>, vol. 45, no. 4, pp. 531-540, 1996."}, {"id": "ref11", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " A criterion can be viewed as a predicate to be satisfied in the test phase, and can be used to select & compare test sets [11], [12]."}, {"sec": "sec4a", "part": "1", "text": "The failure data consists of the number of defects discovered, the reliability of the software, and the coverage of the following structural testing criteria [11]: All-Nodes (AN), All-Edges (AE), All-Potential-Uses (PU), All-Potential-Uses/DU (PUDU), and All-Potential-DU-Paths (PDU)."}], "title": "Bridging the gap in the presence of infeasible paths: Potential\nuses testing criteria", "order": "11", "text": "J. Maldonado, M. Chaim, M. Jino, \"Bridging the gap in the presence of infeasible paths: Potential\nuses testing criteria\", <em>XII International Conference of the Chilean Science Computer Society</em>, pp. 323-340, 1992-October."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1702019", "pdfSize": "3282KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper defines a family of program test data selection criteria derived from data flow analysis techniques similar to those used in compiler optimization. It is argued that currently used path selection criteria, which examine only the control flow of a program, are inadequate quate. Our procedure associates with each point in a program at which a variable is defined, those points at which the value is used. Several test data selection criteria, differing in the type and number of these asso...", "documentLink": "/document/1702019"}, "context": [{"sec": "sec1", "part": "1", "text": " A criterion can be viewed as a predicate to be satisfied in the test phase, and can be used to select & compare test sets [11], [12]."}], "title": "Selecting software test data using data flow information", "order": "12", "text": "S. Rapps, E. Weyuker, \"Selecting software test data using data flow information\", <em>IEEE Trans. Software Engineering</em>, vol. SE-11, no. 4, pp. 367-375, April 1985."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=799900", "pdfSize": "694KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper compares empirically the predictive performance of two different methods of software reliability prediction: 'neural networks' and 'recalibration for parametric models'. Both methods were claimed to predict as good or better than the conventional parametric models that have been used-with limited results so far. Each method applied its own predictability measure, impeding a direct comparison. To be able to compare, this study uses a common predictability measure and common data-sets. ...", "documentLink": "/document/799900"}, "context": [{"sec": "sec1", "part": "1", "text": "However, some works have introduced other classification for the models [13]."}, {"sec": "sec1", "part": "1", "text": "A similar, complementary study was described by Sitte [13]."}], "title": "Comparison of software reliability growth predictions: Neural\nnetworks vs. parametric recalibration", "order": "13", "text": "R. Sitte, \"Comparison of software reliability growth predictions: Neural\nnetworks vs. parametric recalibration\", <em>IEEE Trans. Software Engineering</em>, vol. 48, no. 3, pp. 285-291, September 1999."}, {"id": "ref14", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=148475", "pdfSize": "1043KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The usefulness of connectionist models for software reliability growth prediction is illustrated. The applicability of the connectionist approach is explored using various network models, training regimes, and data representation methods. An empirical comparison is made between this approach and five well-known software reliability growth models using actual data sets from several different software projects. The results presented suggest that connectionist models may adapt well across different...", "documentLink": "/document/148475"}, "context": [{"sec": "sec1", "part": "1", "text": " [14]."}], "title": "Prediction of software reliability using\nconnectionist models", "order": "14", "text": "N. Karunanithi, D. Whitley, Y. K. Malaiya, \"Prediction of software reliability using\nconnectionist models\", <em>IEEE Trans. Software Engineering</em>, vol. 18, no. 7, pp. 563-574, July 1992."}, {"id": "ref15", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=934046", "pdfSize": "320KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, neural networks have been proposed as an alternative technique to build software reliability growth models. A feedforward neural network was used to predict the number of faults initially resident in a program at the beginning of a test/debug process. To evaluate the predictive capability of the developed model, data sets from various projects were used. A comparison between regression parametric models and neural network models is provided.", "documentLink": "/document/934046"}, "context": [{"sec": "sec1", "part": "1", "text": "Aljahdali et al. use ANN in their work [15] with a slightly different configuration from that proposed in previous models."}], "title": "Prediction of software reliability: A comparison between\nregression and neural network non-parametric models", "order": "15", "text": "S. H. Aljahdali, A. Sheta, D. Rine, \"Prediction of software reliability: A comparison between\nregression and neural network non-parametric models\", <em>ACS/IEEE International Conference on Computer Systems and Applications</em>, pp. 470-473, 2001."}, {"id": "ref16", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Souza & Vergilio [16] obtained ANN models for software reliability considering time, and coverage."}, {"sec": "sec1", "part": "1", "text": " To evaluate the use of GP, and GPB approaches, and to allow comparison with traditional and ANN models, we adopted the same methodology, and used some results described in [16], [28]."}, {"sec": "sec3", "part": "1", "text": " To do this, we use the same datasets, evaluation measures, and results described in [16], which are presented below."}, {"sec": "sec4", "part": "1", "text": " The methodology, datasets, evaluation measures, and results from [8], [16] were used, and described first."}, {"sec": "sec4c", "part": "1", "text": "To evaluate GP, and GPB models based on time, we select the ANN model [16], and the non-parametric model proposed by Crespo [8] known as the Coverage Based Binomial model (CBB)."}], "title": "Modeling software reliability growth with\nartificial neural networks", "order": "16", "text": "G. A. Souza, S. R. Vergilio, \"Modeling software reliability growth with\nartificial neural networks\", <em>IEEE Latin American Test Workshop</em>, pp. 165-170, 2006-March."}, {"id": "ref17", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Genetic Programming was introduced by John Koza [17], based on the idea of Genetic Algorithms presented by John Holland [18]."}, {"sec": "sec1", "part": "1", "text": " GP extends the principles of genetic algorithms, and evolutionary computation to structured search spaces [17]."}, {"sec": "sec2b", "part": "1", "text": "GP was introduced by John Koza [17], based on the idea of Genetic Algorithms presented by John Holland [18]."}, {"sec": "sec2b", "part": "1", "text": " Today, GP is acknowledged as an effective research paradigm in Artificial Intelligence, and Machine Learning [17], [34], [35]; and has been found in the most diverse areas of knowledge, such as digital circuits, data mining, molecular biology, optimization tasks, and many others."}, {"sec": "sec2b", "part": "1", "text": "In GP, the genetic algorithm works in a population of computational programs which diversify by form, and size [17]."}, {"sec": "sec3e", "part": "1", "text": " LIL-GP is implemented according to Koza's GP [17]. for each problem to be solved by the tool, it is necessary to provide configuration files, standard GP parameters, functions and variables to be used for discovering the equation, input and output files (training set), and the fitness function."}], "title": "Genetic programming: On the programming of computers by means of natural selection", "order": "17", "text": "J. Koza, Genetic programming: On the programming of computers by means of natural selection, 1992, MIT Press."}, {"id": "ref18", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Genetic Programming was introduced by John Koza [17], based on the idea of Genetic Algorithms presented by John Holland [18]."}, {"sec": "sec2b", "part": "1", "text": "GP was introduced by John Koza [17], based on the idea of Genetic Algorithms presented by John Holland [18]."}], "title": "Adaptation in natural and artificial systems", "order": "18", "text": "J. Holland, Adaptation in natural and artificial systems, 1975, MIT Press."}, {"id": "ref19", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1331687", "pdfSize": "443KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The determination of optimal Surveillance Test Intervals (STI) is a matter of great importance in risk-informed applications, due both to the implications that maintenance actions have on the safety of the risky plants such as the nuclear ones, and to the important amount of resources invested in maintenance operations by the industrial organizations. The common approach to determining the optimal STI uses a simplified system-availability model relying on a set of parameters at the component lev...", "documentLink": "/document/1331687"}, "context": [{"sec": "sec1", "part": "1", "text": " Genetic Algorithms have been recently explored in the reliability field as a reliability optimization algorithm to maximize the availability of safety systems under uncertainties [19]."}], "title": "Optimal reliability/availability of uncertain systems via\nmulti-objective genetic algorithms", "order": "19", "text": "M. Marseguerra, E. Zio, L. Podofillini, \"Optimal reliability/availability of uncertain systems via\nmulti-objective genetic algorithms\", <em>IEEE Trans. Reliability</em>, vol. 53, no. 3, pp. 424-434, 2004."}, {"id": "ref20", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S1568-4946(01)00009-6"}, "context": [{"sec": "sec1", "part": "1", "text": " However, the goal of our work is non-parametric modeling, where major breakthroughs have been achieved by Genetic Programming (GP) [20]."}], "title": "Grammar-guided genetic programming and dimensional consistency:\nApplication to non-parametric identification in mechanics", "order": "20", "text": "A. Ratle, M. Sebag, \"Grammar-guided genetic programming and dimensional consistency:\nApplication to non-parametric identification in mechanics\", <em>Applied Software Computing</em>, vol. 1, pp. 105-118, 2001."}, {"id": "ref21", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1023/A:1023772729494"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[27]."}], "title": "Selection and evaluation of test data based on genetic programming", "order": "21", "text": "M. Emer, \"Selection and evaluation of test data based on genetic programming\", <em>Software Quality Journal</em>, vol. 11, pp. 167-186, July 2003."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=988709", "pdfSize": "811KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper discusses the use of genetic algorithms (GAs) for automatic software test data generation. This research extends previous work on dynamic test data generation where the problem of test data generation is reduced to one of minimizing a function. In our work, the function is minimized by using one of two genetic algorithms in place of the local minimization techniques used in earlier research. We describe the implementation of our GA-based system and examine the effectiveness of this ap...", "documentLink": "/document/988709"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[22][23], software planning, and cost estimations [24]\u2013[27]."}], "title": "Generating software test data by evolution", "order": "22", "text": "C. Michael, G. McGraw, M. Schatz, \"Generating software test data by evolution\", <em>IEEE Trans. Software Engineering</em>, vol. 27, no. 12, pp. 1085-1110, December 2001."}, {"id": "ref23", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0950-5849(01)00190-2"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[27]."}], "title": "Evolutionary test environment for automatic\nstructural testing", "order": "23", "text": "J. Wegener, A. Baresel, H. Sthamer, \"Evolutionary test environment for automatic\nstructural testing\", <em>Information and Software Technology</em>, vol. 43, pp. 841-854, 2001."}, {"id": "ref24", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0950-5849(01)00193-8"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[27]."}], "title": "An evolutionary approach to estimating software development\nprojects", "order": "24", "text": "J. Aguilar-Ruiz, I. Ramos, J. Riquelme, M. Toro, \"An evolutionary approach to estimating software development\nprojects\", <em>Information and Software Technology</em>, vol. 43, pp. 875-882, 2001."}, {"id": "ref25", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0950-5849(01)00192-6"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[25][27]."}], "title": "Can genetic programming improve software\neffort estimation? A comparative evaluation", "order": "25", "text": "C. Burgess, M. Lefley, \"Can genetic programming improve software\neffort estimation? A comparative evaluation\", <em>Information and Software Technology</em>, vol. 43, pp. 863-873, 2001."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=879821", "pdfSize": "488KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Estimation of software size is a crucial activity among the tasks of software management. Work planning and subsequent estimations of the effort required are made based on the estimate of the size of the software product. Software size can be measured in several ways: lines of code (LOC) is a common measure and is usually one of the independent variables in equations for estimating several methods for estimating the final LOC count of a software system in the early stages. We report the results ...", "documentLink": "/document/879821"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[26][27]."}], "title": "A validation of the component-based method\nfor software size estimation", "order": "26", "text": "J. Dolado, \"A validation of the component-based method\nfor software size estimation\", <em>IEEE Trans. Software Engineering</em>, vol. 25, no. 10, pp. 1006-1021, 2000."}, {"id": "ref27", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1245453", "pdfSize": "293KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Prediction models are fundamental in the early stages of the software development when many times, decisions must be taken without the required information. A typical information that is not available in these stages is software size metrics, such as lines of code (LOC). Models for LOC estimation are obtained from historical data and statistical regression methods are usually applied. These characteristics make this estimation problem especially interesting for the application of machine learnin...", "documentLink": "/document/1245453"}, "context": [{"sec": "sec1", "part": "1", "text": " Examples of GP applications in software engineering include software testing [21]\u2013[23], software planning, and cost estimations [24]\u2013[27]."}], "title": "Exploring machine learning techniques for software size\nestimation", "order": "27", "text": "G. A. Souza, E. Regolin, A. Pozo, S. Vergilio, \"Exploring machine learning techniques for software size\nestimation\", <em>XII International Conference of the Chilean Computer Science Society</em>, pp. 130-136, 2003-November."}, {"id": "ref28", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1544732", "pdfSize": "221KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reliability models are very useful to estimate the probability of the software fail along the time. Several different models have been proposed to estimate the reliability growth, however, none of them has proven to perform well considering different project characteristics. In this work, we explore genetic programming (GP) as an alternative approach to derive these models. GP is a powerful machine learning technique based on the idea of genetic algorithms and has been acknowledged as a very sui...", "documentLink": "/document/1544732"}, "context": [{"sec": "sec1", "part": "1", "text": "In a previous work, we introduced the use of GP to obtain reliability models [28]."}, {"sec": "sec1", "part": "1", "text": " To evaluate the use of GP, and GPB approaches, and to allow comparison with traditional and ANN models, we adopted the same methodology, and used some results described in [16], [28]."}], "title": "Modeling software reliability growth with genetic programming", "order": "28", "text": "E. O. Costa, S. R. Vergilio, A. Pozo, G. A. Souza, \"Modeling software reliability growth with genetic programming\", <em>XVI International Symposium of Software Reliability Engineering</em>, 2005-November."}, {"id": "ref29", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " To overcome this limitation, and improve the performance of GP models, in [29] we introduced the use of Boosting techniques with GP (GPB technique)."}], "title": "Using boosting techniques to improve software reliability\nmodels based on genetic programming", "order": "29", "text": "E. O. Costa, A. Pozo, S. R. Vergilio, \"Using boosting techniques to improve software reliability\nmodels based on genetic programming\", <em>XVIII International Conference on Tools on Artificial Intelligence</em>, pp. 643-650, 2006-November."}, {"id": "ref30", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Boosting techniques have been successfully used to improve performance of other known methods from the ML field [30], such as ANN, and GP."}, {"sec": "sec1", "part": "1", "text": " A GPBoost algorithm [30] was used to perform the experiments."}, {"sec": "sec1", "part": "1", "text": " The results were combined using two techniques of merging, proposed in [30], and [31]."}, {"sec": "sec2c", "part": "1", "text": " Boosting is a technique which consists in getting several hypotheses in different distributions of the examples in the training set, and merging them to get a better final hypothesis [30]."}, {"sec": "sec2c", "part": "1", "text": " According to [30], this makes implementation easier, but the precision of weights is somewhat lost in the process."}, {"sec": "sec2c", "part": "1", "text": " [30] proposed a Boosting method that retains the precision of weights, and operates on the whole set of examples for every round of Boosting."}, {"sec": "sec2c", "part": "1", "text": " This can be done in different forms. in our work, we used GPBoost [30], and AdaBoost."}], "title": "Applying boosting techniques to genetic programming", "order": "30", "text": "G. Paris, D. Robiliard, C. Fonlupt, \"Applying boosting techniques to genetic programming\", <em>IEEE International Joint Conference on Neural Networks</em>, pp. 1163-1168, 2004."}, {"id": "ref31", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1380102", "pdfSize": "462KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A boosting algorithm, AdaBoost.RT, is proposed for regression problems. The idea is to filter out examples with a relative estimation error that is higher than the pre-set threshold value, and then follow the AdaBoost procedure. Thus it requires to select the sub-optimal value of relative error threshold to demarcate predictions from the predictor as correct or incorrect. Some experimental results using the M5 model tree as a weak learning machine for benchmark data sets and for hydrological mod...", "documentLink": "/document/1380102"}, "context": [{"sec": "sec1", "part": "1", "text": " The results were combined using two techniques of merging, proposed in [30], and [31]."}, {"sec": "sec2c", "part": "1", "text": "R2) [31], represented respectively in (1) and (2)."}], "title": "Adaboost-rt: A boosting algorithm for regression\nproblems", "order": "31", "text": "D. Solomatine, D. Shrestha, \"Adaboost-rt: A boosting algorithm for regression\nproblems\", <em>Intelligent Artificial Evolution</em>, pp. 312-326, 2001."}, {"id": "ref32", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": "The field of Machine Learning (ML) is devoted to develop computational methods that implement various forms of learning, in particular mechanisms capable of inducing knowledge from examples or data [32]."}], "title": "Machine learning and data mining. Methods and applications", "order": "32", "text": "R. Michalski, I. Bratko, M. Kubat, Machine learning and data mining. Methods and applications, 1999, John Wiley & Sons Ltd."}, {"id": "ref33", "refType": "biblio", "context": [{"sec": "sec2a", "part": "1", "text": "Topology: a typical topology for structuring the neurons is a multi-layer neural network [33]."}, {"sec": "sec2a", "part": "1", "text": "Learning algorithm: there are different learning algorithms; the most known is the back-propagation learning algorithm [33]."}], "title": "Understanding neural networks and fuzzy logic: Basic concepts and applications", "order": "33", "text": "S. Kartalopoulos, Understanding neural networks and fuzzy logic: Basic concepts and applications, 1996, IEEE Press."}, {"id": "ref34", "refType": "biblio", "context": [{"sec": "sec2b", "part": "1", "text": " Today, GP is acknowledged as an effective research paradigm in Artificial Intelligence, and Machine Learning [17], [34], [35]; and has been found in the most diverse areas of knowledge, such as digital circuits, data mining, molecular biology, optimization tasks, and many others."}], "title": "Genetic programming: An introduction", "order": "34", "text": "F. Banzhaf, W. Nordin, P. Keller, F. D. Francone, Genetic programming: An introduction, 1998, Morgan Kaufmann."}, {"id": "ref35", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1023/A:1008768404046"}, "context": [{"sec": "sec2b", "part": "1", "text": " Today, GP is acknowledged as an effective research paradigm in Artificial Intelligence, and Machine Learning [17], [34], [35]; and has been found in the most diverse areas of knowledge, such as digital circuits, data mining, molecular biology, optimization tasks, and many others."}], "title": "Genetic programming prediction on stock\nprices", "order": "35", "text": "M. A. Kaboudan, \"Genetic programming prediction on stock\nprices\", <em>Journal Computational Economics</em>, vol. 16, pp. 207-236, 2000."}, {"id": "ref36", "refType": "biblio", "context": [{"sec": "sec2c", "part": "1", "text": " The first motivation to use the ensemble of predictors was given by Schapire [36]."}, {"sec": "sec2c", "part": "1", "text": " To solve regression problems, Freund & Schapire [36] extended the AdaBoost."}], "title": "The boosting approach to machine learning:\nAn overview", "order": "36", "text": "R. E. Schapire, \"The boosting approach to machine learning:\nAn overview\", <em>MSRI Workshop on Nonlinear Estimation and Classification</em>, 2002-March."}, {"id": "ref37", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1006/jcss.1997.1504"}, "context": [{"sec": "sec2c", "part": "1", "text": " Then, it was extended [37] to a multi-class case."}], "title": "A decision-theoretic generalization of on-line\nlearning and an application to boosting", "order": "37", "text": "Y. Freund, R. E. Schapire, \"A decision-theoretic generalization of on-line\nlearning and an application to boosting\", <em>Journal of Computer and System Sciences</em>, vol. 55, pp. 119-139, 1997."}, {"id": "ref38", "refType": "biblio", "context": [{"sec": "sec2c", "part": "1", "text": " Drucker [38] developed AdaBoost."}], "title": "Improving regressor using boosting", "order": "38", "text": "H. Drucker, \"Improving regressor using boosting\", <em>Proceedings of the 14th International Conference on Machine Learning</em>, pp. 107-115, 1997."}, {"id": "ref39", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-7091-0646-4_4"}, "context": [{"sec": "sec2c", "part": "1", "text": " [39] adapted a Boosting algorithm to the problem of predicting future values of time series using neural networks as base learners."}], "title": "Boosting\nrecurrent neural networks for times series prediction", "order": "39", "text": "R. Bon, M. Assad, M. Crucianu, \"Boosting\nrecurrent neural networks for times series prediction\", <em>Proceedings of the International Conference in Roanne</em>, pp. 18-22, 2003."}, {"id": "ref40", "refType": "biblio", "context": [{"sec": "sec2c", "part": "1", "text": " Iba [40] proposed a version of AdaBoost for GP, and regression. in his work, the distribution was implemented, picking up examples to generate a new learning set for each Boosting round."}], "title": "Bagging, boosting, and bloating in genetic programming", "order": "40", "text": "H. Iba, \"Bagging boosting and bloating in genetic programming\", <em>BDE 99</em>, pp. 1053-1060, 1999."}, {"id": "ref41", "refType": "biblio", "context": [{"sec": "sec3a", "part": "1", "text": "The datasets contain failure data gathered by John Musa at Bell Telephone Laboratories [41]."}], "title": "Software reliability data", "order": "41", "text": "J. Musa, \"Software reliability data\", <em>Data & Analysis Center for Software</em>, January 1980."}, {"id": "ref42", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=249581", "pdfSize": "722KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A two-component predictability measure that characterizes the long-term predictive capability of a model is presented. One component, average error, measures how well a model predicts throughout the testing phase. The other component, average bias, measures the general tendency to overestimate or underestimate the number of faults. Data sets for both large and small projects from diverse sources with various initial fault density ranges have been analyzed. The results show that: (i) the logarith...", "documentLink": "/document/249581"}, "context": [{"sec": "sec3c", "part": "1", "text": "Average Bias [42]: measures the general tendency to overestimate, or underestimate the number of faults."}, {"sec": "sec3c", "part": "1", "text": "Average Error [42]: measures how well a model predicts throughout the testing phase."}], "title": "Predictability of software reliability models", "order": "42", "text": "N. Karunanithi, P. Verma, Y. Malaiya, \"Predictability of software reliability models\", <em>IEEE Trans. Reliability</em>, vol. 41, no. 4, pp. 539-546, December 1992."}, {"id": "ref43", "refType": "biblio", "context": [{"sec": "sec3d", "part": "1", "text": " These models were obtained using a tool named SMERFS (Statistical Modeling and Estimation of Reliability Functions for Software) [43]."}], "title": "Statistical Modeling and Estimation of Reliability Functions for Software (Smerfs) User's Guide", "order": "43", "text": "W. H. Farr, O. Smith, <em>Statistical Modeling and Estimation of Reliability Functions for Software (Smerfs) User's Guide</em>, 1993."}, {"id": "ref44", "refType": "biblio", "context": [{"sec": "sec3d", "part": "1", "text": " The output layer has 1 neuron with a linear transfer function \\$f_{s}\\$ [44]."}], "title": "Neural network toolbox User's Guide", "order": "44", "text": "H. Demuth, M. Beale, Neural network toolbox User's Guide, March 2001, Mathworks, Inc."}, {"id": "ref45", "refType": "biblio", "context": [{"sec": "sec3e", "part": "1", "text": "To apply GP, and GPB, we choose LIL-GP [45], a free, easily configurable software tool."}], "title": "Lil-GP 1.0 User's Manual", "order": "45", "text": "D. Zongker, B. Punch, Lil-GP 1.0 User's Manual, July 1995, Michigan State University."}, {"id": "ref46", "refType": "biblio", "context": [{"sec": "sec4b", "part": "1", "text": " Thus, data collected in one occasion can be compared with data collected in another one, or compared with data obtained with a mathematical model, aiming to verify if the two samples follow the same distribution. in an affirmative case, it can be said that the two samples are from the same population, and conclude that they can represent the same reality [46]."}, {"sec": "sec4e", "part": "1", "text": "In a sample with size 28, and a significance level \\$\\alpha=0.01\\$, the hypothesis \\$H_{0}\\$ (that the observed, and estimated reliability are not the same) is rejected for \\$KD\\geq 13\\$ [46]. \\$H_{0}\\$ is rejected for all models."}], "title": "Probability and Statistics With Reliability Queuing and Computer Science Applications", "order": "46", "text": "K. S. Trivedi, Probability and Statistics With Reliability Queuing and Computer Science Applications, 2001, Wiley."}], "arnumber": "4298229"}