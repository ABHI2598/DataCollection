{"arnumber": "4220788", "details": {"title": "A Multi-Objective Software Quality Classification Model Using Genetic Programming", "volume": "56", "keywords": [{"type": "IEEE Keywords", "kwd": ["Software quality", "Genetic programming", "Costs", "Resource management", "Decision trees", "Classification tree analysis", "Software reliability", "Predictive models", "Context modeling", "Logistics"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["software reliability", "decision trees", "genetic algorithms", "software metrics", "software quality"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["software metrics", "multiobjective software quality classification model", "genetic programming-based decision tree model", "software reliability", "risk-based software quality prediction", "software quality assurance", "software fault-prone module", "software quality-improvement"]}, {"type": "Author Keywords ", "kwd": ["software quality estimation", "Cost of misclassification", "genetic programming", "multi-objective optimization", "software faults", "software metrics"]}], "issue": "2", "link": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "authors": [{"affiliation": "Dept. of Comput. Sci. & Eng., Florida Atlantic Univ., Boca Raton, FL", "bio": {"p": ["Taghi M. Khoshgoftaar is a professor of the Department of Computer Science and Engineering, Florida Atlantic University, and the Director of the Empirical Software Engineering Laboratory, and the Data Mining and Machine Learning Laboratory. His research interests are in software engineering, software metrics, software reliability and quality engineering, computational intelligence, computer performance evaluation, data mining, machine learning, and statistical modeling. He has published more than 300 refereed papers in these areas. He is a member of the IEEE, IEEE Computer Society, and IEEE Reliability Society. He was the program chair, and General Chair of the IEEE International Conference on Tools with Artificial Intelligence in 2004, and 2005 respectively. He has served on technical program committees of various international conferences, symposia, and workshops. Also, he has served as North American Editor of the Software Quality Journal, and is on the editorial boards of the journals Software Quality, and Fuzzy systems."]}, "name": "Taghi M. Khoshgoftaar"}, {"bio": {"p": ["Yi Liu received the Ph.D. degree in Computer Science from the Department of Computer Science and Engineering at Florida Atlantic University in 2003. She is currently an assistant professor in the Department of Mathematics and Computer Science at Georgia College and State University. Her research interests include software engineering, software metrics, software reliability and quality engineering, computer performance modeling, genetic programming, and data mining."]}, "name": "Yi Liu"}], "publisher": "IEEE", "doi": "10.1109/TR.2007.896763", "abstract": "A key factor in the success of a software project is achieving the best-possible software reliability within the allotted time &amp; budget. Classification models which provide a risk-based software quality prediction, such as fault-prone &amp; not fault-prone, are effective in providing a focused software quality assurance endeavor. However, their usefulness largely depends on whether all the predicted fault-prone modules can be inspected or improved by the allocated software quality-improvement resources, and on the project-specific costs of misclassifications. Therefore, a practical goal of calibrating classification models is to lower the expected cost of misclassification while providing a cost-effective use of the available software quality-improvement resources. This paper presents a genetic programming-based decision tree model which facilitates a multi-objective optimization in the context of the software quality classification problem. The first objective is to minimize the \"Modified Expected Cost of Misclassification\", which is our recently proposed goal-oriented measure for selecting &amp; evaluating classification models. The second objective is to optimize the number of predicted fault-prone modules such that it is equal to the number of modules which can be inspected by the allocated resources. Some commonly used classification techniques, such as logistic regression, decision trees, and analogy-based reasoning, are not suited for directly optimizing multi-objective criteria. In contrast, genetic programming is particularly suited for the multi-objective optimization problem. An empirical case study of a real-world industrial software system demonstrates the promising results, and the usefulness of the proposed model"}, "references": [{"title": "Body of knowledge for software quality measurement", "context": [{"text": " A logical approach for achieving cost-effective software quality improvement is a risk-based targeting of software modules depending on their predicted quality [1].", "sec": "sec1", "part": "1"}], "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Measuring quality is the key to developing high-quality software. The author describes two approaches that help to identify the body of knowledge software engineers need to achieve this goal. The first approach derives knowledge requirements from a set of issues identified during two standards efforts: the IEEE Std. 1061-1998 for a Software Quality Metrics Methodology and the American National Standard Recommended Practice for Software Reliability (ANSI/AIAA R-013-1992). The second approach ties...", "documentLink": "/document/982919", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=982919", "pdfSize": "131KB"}, "id": "ref1", "text": "N. F. Schneidewind, \"Body of knowledge for software quality measurement\", <em>IEEE Computer</em>, vol. 35, no. 2, pp. 77-83, February 2002.", "refType": "biblio"}, {"title": "Assessing the applicability of fault-proneness models across\nobject-oriented software projects", "context": [{"text": " Software metrics-based quality classification models have proven their usefulness for timely software quality improvements [2]\u2013[4].", "sec": "sec1", "part": "1"}], "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A number of papers have investigated the relationships between design metrics and the detection of faults in object-oriented software. Several of these studies have shown that such models can be accurate in predicting faulty classes within one particular software product. In practice, however, prediction models are built on certain products to be used on subsequent software development projects. How accurate can these models be, considering the inevitable differences that may exist across projec...", "documentLink": "/document/1019484", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1019484", "pdfSize": "1493KB"}, "id": "ref2", "text": "L. C. Briand, W. L. Melo, J. Wust, \"Assessing the applicability of fault-proneness models across\nobject-oriented software projects\", <em>IEEE Trans. Software Engineering</em>, vol. 28, no. 7, pp. 706-720, July 2002.", "refType": "biblio"}, {"title": "Predicting\nfault-proneness using OO metrics: An industrial case study", "context": [{"text": " Software metrics-based quality classification models have proven their usefulness for timely software quality improvements [2]\u2013[3][4].", "sec": "sec1", "part": "1"}], "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software quality is an important external software attribute that is difficult to measure objectively. In this case study, we empirically validate a set of object-oriented metrics in terms of their usefulness in predicting fault-proneness, an important software quality indicator We use a set of ten software product metrics that relate to the following software attributes: the size of the software, coupling, cohesion, inheritance, and reuse. Eight hypotheses on the correlations of the metrics wit...", "documentLink": "/document/995794", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=995794", "pdfSize": "325KB"}, "id": "ref3", "text": "Y. Ping, T. Systa, H. Muller, \"Predicting\nfault-proneness using OO metrics: An industrial case study\", <em>Proceedings: 6th European Conference on Software Maintenance and Reengineering</em>, pp. 99-107, 2002-March.", "refType": "biblio"}, {"title": "A classification scheme for studies on fault-prone\ncomponents", "context": [{"text": " Software metrics-based quality classification models have proven their usefulness for timely software quality improvements [2]\u2013[4].", "sec": "sec1", "part": "1"}], "order": "4", "links": {"crossRefLink": "http://dx.doi.org/10.1007/3-540-44813-6_29", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref4", "text": "P. Runeson, M. C. Ohlsson, C. Wohlin, \"A classification scheme for studies on fault-prone\ncomponents\", <em>Lecture Notes in Computer Science</em>, vol. 2188, pp. 341-355, 2001.", "refType": "biblio"}, {"title": "Controlling overfitting in software quality models: Experiments\nwith regression trees and classification", "context": [{"text": "Typically, software modules are categorized by a classification model into two risk-based groups, such as fault-prone (fp), and not fault-prone (nfp) [5], [6].", "sec": "sec1", "part": "1"}, {"text": " However, commonly used classification techniques, such as logistic regression [8] & decision trees [5], cannot simultaneously attain a multi-objective optimization during their modeling process.", "sec": "sec1", "part": "1"}, {"text": "The application of ecm [20] in software quality classification modeling was initially introduced by our research team in the context of controlling the overfitting tendencies of classification trees [5].", "sec": "sec2", "part": "1"}], "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In these days of \"faster, cheaper, better\" release cycles, software developers must focus enhancement efforts on those modules that need improvement the most. Predictions of which modules are likely to have faults during operations is an important tool to guide such improvement efforts during maintenance. Tree-based models are attractive because they readily model nonmonotonic relationships between a response variable and its predictors. However, tree-based models are vulnerable to overfitting, ...", "documentLink": "/document/915528", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=915528", "pdfSize": "791KB"}, "id": "ref5", "text": "T. M. Khoshgoftaar, E. B. Allen, J. Deng, \"Controlling overfitting in software quality models: Experiments\nwith regression trees and classification\", <em>Proceedings: 7th International Software Metrics Symposium</em>, pp. 190-198, 2001-April.", "refType": "biblio"}, {"title": "Using regression trees to classify fault-prone software\nmodules", "context": [{"text": "Typically, software modules are categorized by a classification model into two risk-based groups, such as fault-prone (fp), and not fault-prone (nfp) [5], [6].", "sec": "sec1", "part": "1"}], "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software faults are defects in software modules that might cause failures. Software developers tend to focus on faults, because they are closely related to the amount of rework necessary to prevent future operational software failures. The goal of this paper is to predict which modules are fault-prone and to do it early enough in the life cycle to be useful to developers. A regression tree is an algorithm represented by an abstract tree, where the response variable is a real quantity. Software m...", "documentLink": "/document/1044344", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1044344", "pdfSize": "486KB"}, "id": "ref6", "text": "T. M. Khoshgoftaar, E. B. Allen, J. Deng, \"Using regression trees to classify fault-prone software\nmodules\", <em>IEEE Trans. Reliability</em>, vol. 51, no. 4, pp. 455-462, December 2002.", "refType": "biblio"}, {"title": "A practical classification rule for software\nquality models", "context": [{"text": " Moreover, because it is unrealistic to obtain a model which yields perfect classification, i.e., all predicted fp modules are actually fp, a classification technique should aim to minimize the expected cost of misclassification in the context of the software system & application domain [7].", "sec": "sec1", "part": "1"}], "order": "7", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A practical classification rule for a SQ (software quality) model considers the needs of the project to use a model to guide targeting software RE (reliability enhancement) efforts, such as extra reviews early in development. Such a rule is often more useful than alternative rules. This paper discusses several classification rules for SQ models, and recommends a generalized classification rule, where the effectiveness and efficiency of the model for guiding software RE efforts can be explicitly ...", "documentLink": "/document/877340", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=877340", "pdfSize": "147KB"}, "id": "ref7", "text": "T. M. Khoshgoftaar, E. B. Allen, \"A practical classification rule for software\nquality models\", <em>IEEE Trans. Reliability</em>, vol. 49, no. 2, pp. 209-216, Jun. 2000.", "refType": "biblio"}, {"title": "Investigation of logistic regression as\na discriminant of software quality", "context": [{"text": " However, commonly used classification techniques, such as logistic regression [8] & decision trees [5], cannot simultaneously attain a multi-objective optimization during their modeling process.", "sec": "sec1", "part": "1"}], "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Investigates the possibility that logistic regression functions (LRFs), when used in combination with Boolean discriminant functions (BDFs), which we had previously developed, would improve the quality classification ability of BDFs when used alone; this was found to be the case. When the union of a BDF and LRF was used to classify quality, the predictive accuracy of quality and inspection cost was improved over that of using either function alone for the Space Shuttle. Also, the LRFs proved use...", "documentLink": "/document/915540", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=915540", "pdfSize": "746KB"}, "id": "ref8", "text": "N. F. Schneidewind, \"Investigation of logistic regression as\na discriminant of software quality\", <em>Proceedings: 7th International Software Metrics Symposium</em>, pp. 328-337, 2001-April.", "refType": "biblio"}, {"title": "Multicriteria Design Optimization: Procedures and Applications", "context": [{"text": " Modeling complicated engineering problems, such as software quality prediction, with traditional mathematical optimization methods, is practically unfeasible [9].", "sec": "sec1", "part": "1"}, {"text": " A method based on gp for finding the solutions in the Pareto set [9] is proposed when building the classification model.", "sec": "sec1", "part": "1"}, {"text": "A multi-objective optimization solution usually aims at obtaining a set of Pareto-optima [9], which represents feasible solutions where a solution to a single objective cannot be improved without sacrificing the solution for some (or more) other criteria.", "sec": "sec3a", "part": "1"}], "order": "9", "links": {"crossRefLink": "http://dx.doi.org/10.1007/978-3-642-48697-5", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref9", "text": "H. Eschenauer, J. Koski, A. Osyczka, Multicriteria Design Optimization: Procedures and Applications, 1990, Springer-Verlag.", "refType": "biblio"}, {"title": "Genetic Programming: An Introduction On the Automatic Evolution of Computer Programs and Its Application", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}, {"text": "An inherent advantage of gp is that it can evolve a solution automatically from the training data [10], and does not require an assumption regarding the mathematical model of the structure or the size of the decision tree-based solution.", "sec": "sec3", "part": "1"}, {"text": " However, some key elements of gp are briefly explained [10]. gp uses the basic unit of the associated problem to assemble each individual.", "sec": "sec3", "part": "1"}], "order": "10", "id": "ref10", "text": "W. Banzhaf, P. Nordin, R. E. Keller, F. D. Francone, Genetic Programming: An Introduction On the Automatic Evolution of Computer Programs and Its Application, 1998, PWS Publishing Company.", "refType": "biblio"}, {"title": "Adaptation in Natural and Artificial Systems", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[11][13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}], "order": "11", "id": "ref11", "text": "J. Holland, Adaptation in Natural and Artificial Systems, 1992, University of Michigan Press.", "refType": "biblio"}, {"title": "Genetic programming using a minimum description length principle", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[12][13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}], "order": "12", "id": "ref12", "text": "H. Iba, H. de Garis, T. Sato, \"Genetic programming using a minimum description length principle\" in Advances in Genetic Programming, 1996, MIT Press.", "refType": "biblio"}, {"title": "Advances in Genetic Programming", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}], "order": "13", "id": "ref13", "text": "P. Sngeline, K. E. Kinner, Advances in Genetic Programming, vol. II, 1996, MIT Press.", "refType": "biblio"}, {"title": "Evolutionary algorithms for constrained\nengineering problems", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}, {"text": " The most frequently used methods for generating Pareto-optima are based on the notion of replacing the multi-objective problem with a parameterized scalar problem [14].", "sec": "sec3a", "part": "1"}], "order": "14", "links": {"crossRefLink": "http://dx.doi.org/10.1016/0360-8352(96)00037-X", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref14", "text": "Z. Michalewicz, D. Dasgupta, R. G. L. Riche, M. Schoenauer, \"Evolutionary algorithms for constrained\nengineering problems\", <em>Computers and Industrial Engineering</em>, vol. 30, pp. 851-870, 1996.", "refType": "biblio"}, {"title": "Evolutionary Algorithms for Single and Multicriteria Design Optimization", "context": [{"text": " As a member of the evolutionary computational methods [10]\u2013[13], gp has been explored to solve some multi-optimization problems [14], [15].", "sec": "sec1", "part": "1"}], "order": "15", "id": "ref15", "text": "A. Osyczka, Evolutionary Algorithms for Single and Multicriteria Design Optimization, 2002, Physica Verlag Heidelberg.", "refType": "biblio"}, {"title": "Genetic programming-based decision trees for software quality\nclassification", "context": [{"text": " This study is a continuation of our recent research efforts with gp-based software quality classification models [16], [17], and focuses on the simultaneous optimization of decision trees with respect to the following two factors:\n\n1)\n\u201cModified Expected Cost of Misclassification\u201d (mecm) [18] (see Section\u00a0II-A), and\n\n2)\nnumber of predicted fp modules, such that it is equal to the number which can be inspected by the allocated software quality improvement resources.", "sec": "sec1", "part": "1"}, {"text": " This study is a continuation of our previous efforts [16], [17] in which an approach for building gp-based decision tree models for classifying software modules either as fp or nfp was presented.", "sec": "sec3", "part": "1"}], "order": "16", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The knowledge of the likely problematic areas of a software system is very useful for improving its overall quality. Based on such information, a more focused software testing and inspection plan can be devised. Decision trees are attractive for a software quality classification problem which predicts the quality of program modules in terms of risk-based classes. They provide a comprehensible classification model which can be directly interpreted by observing the tree-structure. A simultaneous o...", "documentLink": "/document/1250214", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1250214", "pdfSize": "274KB"}, "id": "ref16", "text": "T. M. Khoshgoftaar, Y. Liu, N. Seliya, \"Genetic programming-based decision trees for software quality\nclassification\", <em>Proceedings of the 15th International Conference on Tools with Artificial Intelligence</em>, pp. 374-383, 2003-November.", "refType": "biblio"}, {"title": "Genetic programming model for software quality prediction", "context": [{"text": " This study is a continuation of our recent research efforts with gp-based software quality classification models [16], [17], and focuses on the simultaneous optimization of decision trees with respect to the following two factors:\n\n1)\n\u201cModified Expected Cost of Misclassification\u201d (mecm) [18] (see Section\u00a0II-A), and\n\n2)\nnumber of predicted fp modules, such that it is equal to the number which can be inspected by the allocated software quality improvement resources.", "sec": "sec1", "part": "1"}, {"text": " This study is a continuation of our previous efforts [16], [17] in which an approach for building gp-based decision tree models for classifying software modules either as fp or nfp was presented.", "sec": "sec3", "part": "1"}], "order": "17", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "We apply genetic programming techniques to build a software quality classification model based on the metrics of software modules. The model we built attempts to distinguish the fault-prone modules from non-fault-prone modules using genetic programming (GP). These GP experiments were conducted with a random subset selection for GP in order to avoid overfitting. We then use the whole fit data set as the validation data set to select the best model. We demonstrate through two case studies that the...", "documentLink": "/document/966814", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=966814", "pdfSize": "320KB"}, "id": "ref17", "text": "Y. Liu, T. M. Khoshgoftaar, \"Genetic programming model for software quality prediction\", <em>Proceedings: 6th International High Assurance Systems Engineering Symposium</em>, pp. 127-136, 2001-October.", "refType": "biblio"}, {"title": "Resource-oriented software quality classification\nmodels", "context": [{"text": "\u201cModified Expected Cost of Misclassification\u201d (mecm) [18] (see Section\u00a0II-A), and.", "sec": "sec1", "part": "1"}, {"text": " To overcome this limitation of ecm, in a recent study we proposed an improved version called mecm [18], which facilitates achieving resource-based sqc models for a given resource allocation.", "sec": "sec1", "part": "1"}, {"text": " Depending on the likely resource-availability scenario, the appropriate value of mecm can be computed as shown by the following cases [18].", "sec": "sec2a", "part": "1"}], "order": "18", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.jss.2004.04.027", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref18", "text": "T. M. Khoshgoftaar, N. Seliya, A. Herzberg, \"Resource-oriented software quality classification\nmodels\", <em>The Journal of Systems and Software</em>, vol. 76, no. 2, pp. 111-126, 2005.", "refType": "biblio"}, {"title": "Comparative assessment of software quality\nclassification techniques: An empirical case study", "context": [{"text": " In an earlier study [19], we have investigated the application of the \u201cExpected Cost of Misclassification\u201d (ecm) as a singular unified model-evaluation measure which can be used to incorporate the project-specific misclassification costs.", "sec": "sec1", "part": "1"}], "order": "19", "links": {"crossRefLink": "http://dx.doi.org/10.1023/B:EMSE.0000027781.18360.9b", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref19", "text": "T. M. Khoshgoftaar, N. Seliya, \"Comparative assessment of software quality\nclassification techniques: An empirical case study\", <em>Empirical Software Engineering Journal</em>, vol. 9, no. 3, pp. 229-257, 2004.", "refType": "biblio"}, {"title": "Applied Multivariate Statistical Analysis", "context": [{"text": "The application of ecm [20] in software quality classification modeling was initially introduced by our research team in the context of controlling the overfitting tendencies of classification trees [5].", "sec": "sec2", "part": "1"}], "order": "20", "id": "ref20", "text": "R. A. Johnson, D. W. Wichern, Applied Multivariate Statistical Analysis, 1992, Prentice Hall.", "refType": "biblio"}, {"title": "Machine Learning and Data Mining: Methods and Applications", "context": [{"text": "Decision tree-based classification models have been recognized as useful tools for data mining purposes [21].", "sec": "sec3", "part": "1"}], "order": "21", "id": "ref21", "text": "R. S. Michalski, I. Bratko, M. Kubat, Machine Learning and Data Mining: Methods and Applications, 1998, John Wiley and Sons.", "refType": "biblio"}, {"title": "Genetic Programming", "context": [{"text": " The commonly used standard-gp requires that the function set, and the terminal set have closure properties, i.e., all functions in the function set must accept all kinds of data types & data values as function arguments [22].", "sec": "sec3", "part": "1"}, {"text": " Koza [22].", "sec": "sec4b", "part": "1"}], "order": "22", "id": "ref22", "text": "J. R. Koza, Genetic Programming, vol. I, 1992, MIT Press.", "refType": "biblio"}, {"title": "Strongly typed genetic programming", "context": [{"text": "Montana recognized this problem, and proposed the \u201cStrongly Typed Genetic Programming\u201d (stgp) approach [23].", "sec": "sec3", "part": "1"}, {"text": " More specifically, given a precise description of the permissible data types for function arguments, stgp will only generate individuals based on the constraint that \u201cthe arguments of all functions are of the correct type\u201d [23].", "sec": "sec3", "part": "1"}], "order": "23", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "We investigate the problem of scheduling the move of a large amount of military equipment from a fort or depot to a port. This problem differs from traditional distribution scheduling problems in a number of ways including: (i) the trucks need to be grouped into convoys, (ii) there is a single source location and a single destination, and (iii) there are potentially so many trucks traveling the same set of roads that the effects on other traffic must be considered. We have divided the problem in...", "documentLink": "/document/782548", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=782548", "pdfSize": "602KB"}, "id": "ref23", "text": "D. J. Montana, \"Strongly typed genetic programming\" in Evolutionary Computation, pp. 199-230, 1995.", "refType": "biblio"}, {"title": "Multiobjective optimization using non-dominated sorting\nin genetic algorithms", "context": [{"text": "The optimization method adopted in our study is based on the Non-dominated Sorting Genetic Algorithm, as proposed by Srinivas and Deb [24].", "sec": "sec3a", "part": "1"}], "order": "24", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In trying to solve multiobjective optimization problems, many traditional methods scalarize the objective vector into a single objective. In those cases, the obtained solution is highly sensitive to the weight vector used in the scalarization process and demands that the user have knowledge about the underlying problem. Moreover, in solving multiobjective problems, designers may be interested in a set of Pareto-optimal points, instead of a single point. Since genetic algorithms (GAs) work with a...", "documentLink": "/document/6791727", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6791727", "pdfSize": "1254KB"}, "id": "ref24", "text": "N. Srinivas, K. Deb, \"Multiobjective optimization using non-dominated sorting\nin genetic algorithms\", <em>Evolutionary Computation</em>, vol. 2, pp. 221-248, 1994.", "refType": "biblio"}], "citations": {"paperCitations": {"nonIeee": [{"title": "The use of vicinal-risk minimization for training decision trees", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.asoc.2015.02.043", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Yilong Cao, Peter I. Rockett, \"The use of vicinal-risk minimization for training decision trees\", <em>Applied Soft Computing</em>, vol. 31, pp. 185, 2015, ISSN 15684946.", "order": "1"}, {"title": "Effective Multi-Objective Na\u00efve Bayes Learning for Cross-Project Defect Prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.asoc.2016.04.009", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Duksan Ryu, Jongmoon Baik, \"Effective Multi-Objective Na\u00efve Bayes Learning for Cross-Project Defect Prediction\", <em>Applied Soft Computing</em>, pp. , 2016, ISSN 15684946.", "order": "2"}, {"title": "A novel steady-state genetic algorithm approach to the reliability optimization design problem of computer networks", "links": {"crossRefLink": "http://dx.doi.org/10.1002/nem.687", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "A. M. Mutawa, H. M. K. Alazemi, Ammar Rayes, \"A novel steady-state genetic algorithm approach to the reliability optimization design problem of computer networks\", <em>International Journal of Network Management</em>, vol. 19, pp. 39, 2009, ISSN 10991190.", "order": "3"}, {"title": "On the Application of Search-based Techniques for Software Engineering Predictive Modeling: A Systematic Review and Future Directions", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.swevo.2016.10.002", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Ruchika Malhotra, Megha Khanna, Rajeev R. Raje, \"On the Application of Search-based Techniques for Software Engineering Predictive Modeling: A Systematic Review and Future Directions\", <em>Swarm and Evolutionary Computation</em>, pp. , 2016, ISSN 22106502.", "order": "4"}, {"title": "Software quality assessment using a multi-strategy classifier", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.ins.2010.11.028", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Taghi M. Khoshgoftaar, Yudong Xiao, Kehan Gao, \"Software quality assessment using a multi-strategy classifier\", <em>Information Sciences</em>, vol. 259, pp. 555, 2014, ISSN 00200255.", "order": "5"}, {"title": "On the application of genetic programming for software engineering predictive modeling: A systematic review", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.eswa.2011.03.041", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Wasif Afzal, Richard Torkar, \"On the application of genetic programming for software engineering predictive modeling: A systematic review\", <em>Expert Systems with Applications</em>, pp. , 2011, ISSN 09574174.", "order": "6"}, {"title": "Modified imperialist competitive algorithm based on attraction and repulsion concepts for reliability-redundancy optimization", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.eswa.2012.12.093", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Leonardo Dallegrave Afonso, Viviana Cocco Mariani, Leandro dos Santos Coelho, \"Modified imperialist competitive algorithm based on attraction and repulsion concepts for reliability-redundancy optimization\", <em>Expert Systems with Applications</em>, pp. , 2012, ISSN 09574174.", "order": "7"}], "ieee": [{"title": "Empirical Evaluation of Mixed-Project Defect Prediction Models", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6068375", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6068375", "pdfSize": "426KB"}, "displayText": "Burak Turhan, Ayse Tosun, Ayse Bener, \"Empirical Evaluation of Mixed-Project Defect Prediction Models\", <em>Software Engineering and Advanced Applications (SEAA) 2011 37th EUROMICRO Conference on</em>, pp. 396-403, 2011.", "order": "1"}, {"title": "Using Faults-Slip-Through Metric as a Predictor of Fault-Proneness", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5693218", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5693218", "pdfSize": "412KB"}, "displayText": "Wasif Afzal, \"Using Faults-Slip-Through Metric as a Predictor of Fault-Proneness\", <em>Software Engineering Conference (APSEC) 2010 17th Asia Pacific</em>, pp. 414-422, 2010, ISSN 1530-1362.", "order": "2"}, {"title": "Pareto-optimal search-based software engineering (POSBSE): A literature survey", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6615200", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6615200", "pdfSize": "794KB"}, "displayText": "Abdel Salam Sayyad, Hany Ammar, \"Pareto-optimal search-based software engineering (POSBSE): A literature survey\", <em>Realizing Artificial Intelligence Synergies in Software Engineering (RAISE) 2013 2nd International Workshop on</em>, pp. 21-27, 2013.", "order": "3"}, {"title": "Self-Organizing Migrating Strategies Applied to Reliability-Redundancy Optimization of Systems", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4967917", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4967917", "pdfSize": "378KB"}, "displayText": "Leandro dos Santos Coelho, \"Self-Organizing Migrating Strategies Applied to Reliability-Redundancy Optimization of Systems\", <em>Reliability IEEE Transactions on</em>, vol. 58, pp. 501-510, 2009, ISSN 0018-9529.", "order": "4"}, {"title": "Evaluating Stratification Alternatives to Improve Software Defect Prediction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6156808", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6156808", "pdfSize": "297KB"}, "displayText": "L. Pelayo, S. Dick, \"Evaluating Stratification Alternatives to Improve Software Defect Prediction\", <em>Reliability IEEE Transactions on</em>, vol. 61, pp. 516-525, 2012, ISSN 0018-9529.", "order": "5"}, {"title": "Two-Stage Cost-Sensitive Learning for Software Defect Prediction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6803085", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6803085", "pdfSize": "1482KB"}, "displayText": "Mingxia Liu, Linsong Miao, Daoqiang Zhang, \"Two-Stage Cost-Sensitive Learning for Software Defect Prediction\", <em>Reliability IEEE Transactions on</em>, vol. 63, pp. 676-686, 2014, ISSN 0018-9529.", "order": "6"}, {"title": "Comparison between Genetic Programming and full model selection on classification problems", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7036349", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7036349", "pdfSize": "177KB"}, "displayText": "Jos&#x00E9; Mar&#x00ED;a Valencia-Ram&#x00ED;rez, Julio A. Raya, Jos&#x00E9; R. Cede&#x00F1;o, Ranyart R. Su&#x00E1;rez, Hugo Jair Escalante, Mario Graff, \"Comparison between Genetic Programming and full model selection on classification problems\", <em>Power Electronics and Computing (ROPEC) 2014 IEEE International Autumn Meeting on</em>, pp. 1-6, 2014.", "order": "7"}, {"title": "A Multiobjective Genetic Programming-Based Ensemble for Simultaneous Feature Selection and Classification", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7055929", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7055929", "pdfSize": "1091KB"}, "displayText": "Kaustuv Nag, Nikhil R. Pal, \"A Multiobjective Genetic Programming-Based Ensemble for Simultaneous Feature Selection and Classification\", <em>Cybernetics IEEE Transactions on</em>, vol. 46, pp. 499-510, 2016, ISSN 2168-2267.", "order": "8"}, {"title": "Evolutionary Optimization of Software Quality Modeling with Multiple Repositories", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5467094", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5467094", "pdfSize": "2478KB"}, "displayText": "Yi Liu, Taghi M. Khoshgoftaar, Naeem Seliya, \"Evolutionary Optimization of Software Quality Modeling with Multiple Repositories\", <em>Software Engineering IEEE Transactions on</em>, vol. 36, pp. 852-864, 2010, ISSN 0098-5589.", "order": "9"}, {"title": "Interactive, Evolutionary Search in Upstream Object-Oriented Class Design", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5432223", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5432223", "pdfSize": "5175KB"}, "displayText": "Christopher L. Simons, Ian C. Parmee, Rhys Gwynllyw, \"Interactive Evolutionary Search in Upstream Object-Oriented Class Design\", <em>Software Engineering IEEE Transactions on</em>, vol. 36, pp. 798-816, 2010, ISSN 0098-5589.", "order": "10"}, {"title": "A Survey of Evolutionary Algorithms for Decision-Tree Induction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5928432", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5928432", "pdfSize": "796KB"}, "displayText": "Rodrigo Coelho Barros, M&#x00E1;rcio Porto Basgalupp, Andr&#x00E9; C. P. L. F. de Carvalho, Alex A. Freitas, \"A Survey of Evolutionary Algorithms for Decision-Tree Induction\", <em>Systems Man and Cybernetics Part C: Applications and Reviews IEEE Transactions on</em>, vol. 42, pp. 291-312, 2012, ISSN 1094-6977.", "order": "11"}, {"title": "A Survey on the Application of Genetic Programming to Classification", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5340522", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5340522", "pdfSize": "514KB"}, "displayText": "Pedro G. Espejo, Sebasti\u00e1n Ventura, Francisco Herrera, \"A Survey on the Application of Genetic Programming to Classification\", <em>Systems Man and Cybernetics Part C: Applications and Reviews IEEE Transactions on</em>, vol. 40, pp. 121-144, 2010, ISSN 1094-6977.", "order": "12"}]}, "patentCitationCount": "0", "contentType": "periodicals", "isEarlyAccess": false, "lastupdate": "2016-11-12T01:54:08", "publisher": "IEEE", "title": "A Multi-Objective Software Quality Classification Model Using Genetic Programming", "nonIeeeCitationCount": "7", "publicationNumber": "24", "formulaStrippedArticleTitle": "A Multi-Objective Software Quality Classification Model Using Genetic Programming", "mediaPath": "/mediastore/IEEE/content/media/24/4220773/4220788", "mlTime": "PT0.144499S", "ieeeCitationCount": "12"}}