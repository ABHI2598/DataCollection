{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/1546565/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Optimal release time for software systems considering cost, testing-effort, and test efficiency", "doi": "10.1109/TR.2005.859230", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "1546565", "endPage": "591", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/33008/1546565", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "33008", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "583", "standardTitle": "Optimal release time for software systems considering cost, testing-effort, and test efficiency", "publicationDate": "Dec. 2005", "pdfPath": "/iel5/24/33008/01546565.pdf", "mlTime": "PT0.129891S", "publicationNumber": "24", "copyrightYear": "2005", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Chin-Yu Huang is currently an Assistant Professor in the Department of Computer Science at National Tsing Hua University, Hsinchu, Taiwan. He received the MS (1994), and the Ph.D. (2000) in Electrical Engineering from National Taiwan University, Taipei. He was with the Bank of Taiwan from 1994 to 1999, and was a senior software engineer at Taiwan Semiconductor Manufacturing Company from 1999 to 2000. Before joining NTHU in 2003, he was a division chief of the Central Bank of China, Taipei. His research interests are software reliability engineering, software testing, software metrics, software testability, fault tree analysis, and system safety assessment, etc. He is a member of IEEE."]}, "affiliation": "Dept. of Comput. Sci., Nat. Tsing Hua Univ., Hsinchu, Taiwan", "name": " Chin-Yu Huang"}, {"bio": {"p": ["Michael R. Lyu received the B.S. (1981) in electrical engineering from the National Taiwan University; the M.S. (1985) in computer engineering from the University of California, Santa Barbara; and the Ph.D. (1988) in computer science from the University of California, Los Angeles. He is a Professor in the Computer Science and Engineering Department of the Chinese University of Hong Kong. He worked at the Jet Propulsion Laboratory, Bellcore, and Bell Labs; and taught at the University of Iowa. His research interests include software reliability engineering, software fault tolerance, distributed systems, image & video processing, multimedia technologies, and mobile networks. He has published over 200 papers in these areas. He has participated in more than 30 industrial projects, and helped to develop many commercial systems & software tools. Professor Lyu was frequently invited as a keynote or tutorial speaker to conferences & workshops in U.S., Europe, and Asia. He initiated the International Symposium on Software Reliability Engineering (ISSRE), and was Program Chair for ISSRE 1996, Program Co-Chair for WWW10 & SRDS 2005, and General Chair for ISSRE 2001 & PRDC 2005. He also received Best Paper Awards in ISSRE 98, and in ISSRE 2003. He is the editor-in-chief for two book volumes: Software Fault Tolerance (Wiley, 1995), and the Handbook of Software Reliability Engineering (IEEE & McGraw-Hill, 1996). He has been an Associate Editor of IEEE TRANSACTIONS ON RELIABILITY, IEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING, and Journal of Information Science and Engineering. Professor Lyu is an IEEE Fellow."]}, "name": "M.R. Lyu"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-11-14T22:44:10", "abstract": "In this paper, we study the impact of software testing effort & efficiency on the modeling of software reliability, including the cost for optimal release time. This paper presents two important issues in software reliability modeling & software reliability economics: testing effort, and efficiency. First, we propose a generalized logistic testing-effort function that enjoys the advantage of relating work profile more directly to the natural flow of software development, and can be used to describe the possible testing-effort patterns. Furthermore, we incorporate the generalized logistic testing-effort function into software reliability modeling, and evaluate its fault-prediction capability through several numerical experiments based on real data. Secondly, we address the effects of new testing techniques or tools for increasing the efficiency of software testing. Based on the proposed software reliability model, we present a software cost model to reflect the effectiveness of introducing new technologies. Numerical examples & related data analyzes are presented in detail. From the experimental results, we obtain a software economic policy which provides a comprehensive analysis of software based on cost & test efficiency. Moreover, the policy can also help project managers determine when to stop testing for market release at the right time.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "1546565", "xplore-issue": "33008", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=33008", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Optimal+release+time+for+software+systems+considering+cost%2C+testing-effort%2C+and+test+efficiency&isbn=&publicationDate=Dec.+2005&author=+Chin-Yu+Huang&ContentID=10.1109/TR.2005.859230&orderBeanReset=true&startPage=583&endPage=591&volumeNum=54&issueNum=4", "citationCount": "50", "keywords": [{"kwd": ["Software testing", "System testing", "Software systems", "Cost function", "Automatic testing", "Life testing", "Software reliability", "Logistics", "Fault detection", "Programming"], "type": "IEEE Keywords"}, {"kwd": ["stochastic processes", "program testing", "software cost estimation", "software fault tolerance"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["software fault", "optimal release time", "software system", "software testing effort", "software reliability modeling", "software reliability economics", "logistic testing-effort function", "software development", "fault-prediction capability", "numerical analysis", "software cost model", "software economic policy", "nonhomogenous Poisson process"], "type": "INSPEC: Non-Controlled Indexing"}, {"kwd": ["testing-effort", "Non-homogenous Poisson process", "optimal release time", "software cost model", "software reliability"], "type": "Author Keywords "}], "issue": "4", "chronOrPublicationDate": "Dec. 2005", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Optimal release time for software systems considering cost, testing-effort, and test efficiency", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "54", "accessionNumber": "8675633"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/33008/1546565", "publisher": "IEEE", "patentCitationCount": "1", "publicationNumber": "24", "contentType": "periodicals", "patentCitations": [{"grantDate": "01 February 2012", "inventors": "Kamenz, Torsten; Kemmler, Andreas", "order": "1", "patentNumber": "EP2413242", "title": "System and method for test strategy optimization", "assignees": ["SAP AG"], "patentLink": "http://worldwide.espacenet.com/publicationDetails/biblio?CC=EP&NR=2413242&KC=&locale=en_EP&FT=E", "filingDate": "18 July 2011", "id": "EP2413242", "patentAbstract": "A test strategy optimizer for minimizing the impact of software update correctness testing is provided for software having several processes. Each process may have a criticality level associated with it and a test effort level associated with it. An update analyzer may determine what functions are modified and a dependency analyzer may determine what processes are connected to modifications, and thus require testing. User input may specify global test parameters related to test time, test completeness per criticality level, test iterations, etc. The test strategy optimizer will then take the process parameters, process dependencies, and user criteria to calculate the most efficient test procedure and provide information about the same. The test strategy optimizer may also provide adjustment tools, so users may modify parameters, based on the resulting information.<img id=\"iaf01\" file=\"imgaf001.tif\" wi=\"146\" he=\"74\" img-content=\"drawing\" img-format=\"tif\"/></p>", "ipcClassList": "G06F0113600000", "ipcClasses": ["G06F0113600000"], "appNum": "EP11005876"}], "formulaStrippedArticleTitle": "Optimal release time for software systems considering cost, testing-effort, and test efficiency", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Economic Impact of Software Patching and Optimal Release Scheduling", "displayText": "Adarsh Anand, Mohini Agarwal, Yoshinobu Tamura, Shigeru Yamada, \"Economic Impact of Software Patching and Optimal Release Scheduling\", <em>Quality and Reliability Engineering International</em>, pp. , 2016, ISSN 07488017.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/qre.1997"}}, {"title": "Optimal release policy under fuzzy environment", "displayText": "P. K. Kapur, Hoang Pham, Anshu Gupta, P. C. Jha, \"Optimal release policy under fuzzy environment\", <em>International Journal of Systems Assurance Engineering and Management</em>, pp. , 2011, ISSN 09764348.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s13198-011-0057-6"}}, {"title": "A Software Release Policy with Testing Time and the Number of Corrected Errors", "displayText": " Youngkwan Yoo, \"A Software Release Policy with Testing Time and the Number of Corrected Errors\", <em>Asia-Pacific Journal of Business Venturing and Entrepreneurship</em>, vol. 7, pp. 49, 2012, ISSN 1975-7557.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.16972/apjbve.7.4.201212.49"}}, {"title": "SOFTWARE FAILURE INTENSITY, RELIABILITY AND OPTIMAL STOPPING TIME INCORPORATING REPAIR POLICIES", "displayText": "SWAPNA S. GOKHALE, \"SOFTWARE FAILURE INTENSITY RELIABILITY AND OPTIMAL STOPPING TIME INCORPORATING REPAIR POLICIES\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 13, pp. 455, 2006, ISSN 0218-5393.", "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539306002379"}}, {"title": "A systematic literature review of software quality cost research", "displayText": "Lars M. Karg, Michael Grottke, Arne Beckhaus, \"A systematic literature review of software quality cost research\", <em>Journal of Systems and Software</em>, vol. 84, pp. 415, 2011, ISSN 01641212.", "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2010.11.904"}}, {"title": "Risk-based software release policy under parameter uncertainty", "displayText": "M Xie, X Li, S H Ng, \"Risk-based software release policy under parameter uncertainty\", <em>Proceedings of the Institution of Mechanical Engineers Part O Journal of Risk and Reliability</em>, vol. 225, pp. 42, 2011, ISSN 17480078.", "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1177/1748006XJRR286"}}, {"title": "Optimal Stopping With Exact Confidence on Remaining Defects", "displayText": "S. R Dalal, C. L Mallows, \"Optimal Stopping With Exact Confidence on Remaining Defects\", <em>Technometrics</em>, vol. 50, pp. 397, 2008, ISSN 0040-1706.", "order": "7", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1198/004017008000000145"}}, {"title": "A risk-reduction approach for optimal software release time determination with the delay incurred cost", "displayText": "Rui Peng, Yan-Fu Li, Jun-Guang Zhang, Xiang Li, \"A risk-reduction approach for optimal software release time determination with the delay incurred cost\", <em>International Journal of Systems Science</em>, vol. 46, pp. 1628, 2015, ISSN 0020-7721.", "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/00207721.2013.827261"}}, {"title": "Defect analysis in mission-critical software systems: a detailed investigation", "displayText": "Gabriella Carrozza, Roberto Pietrantuono, Stefano Russo, \"Defect analysis in mission-critical software systems: a detailed investigation\", <em>Journal of Software: Evolution and Process</em>, vol. 27, pp. 22, 2015, ISSN 20477473.", "order": "9", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/smr.1699"}}, {"title": "Modeling and analysis of reliability of multi-release open source software incorporating both fault detection and correction processes", "displayText": "Jianfeng Yang, Yu Liu, Min Xie, Ming Zhao, \"Modeling and analysis of reliability of multi-release open source software incorporating both fault detection and correction processes\", <em>Journal of Systems and Software</em>, vol. 115, pp. 102, 2016, ISSN 01641212.", "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2016.01.025"}}, {"title": "A neural network approach for optimal software testing and maintenance", "displayText": "Arash Zaryabi, A. Ben Hamza, \"A neural network approach for optimal software testing and maintenance\", <em>Neural Computing and Applications</em>, vol. 24, pp. 453, 2014, ISSN 0941-0643.", "order": "11", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s00521-012-1251-4"}}, {"title": "Designing and Reporting on Computational Experiments of Multi-objective Component Selection Algorithm", "displayText": "Zhiqiao Wu, Jiafu Tang, \"Designing and Reporting on Computational Experiments of Multi-objective Component Selection Algorithm\", <em>International Journal of Information Technology & Decision Making</em>, vol. 14, pp. 375, 2015, ISSN 0219-6220.", "order": "12", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0219622015500066"}}, {"title": "A study of the modeling and analysis of software fault-detection and fault-correction processes", "displayText": "M. Xie, Q. P. Hu, Y. P. Wu, S. H. Ng, \"A study of the modeling and analysis of software fault-detection and fault-correction processes\", <em>Quality and Reliability Engineering International</em>, vol. 23, pp. 459, 2007, ISSN 07488017.", "order": "13", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/qre.827"}}, {"title": "A robust optimization approach to the next release problem in the presence of uncertainties", "displayText": "Matheus Paixao, Jerffeson Souza, \"A robust optimization approach to the next release problem in the presence of uncertainties\", <em>Journal of Systems and Software</em>, vol. 103, pp. 281, 2015, ISSN 01641212.", "order": "14", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2014.09.039"}}, {"title": "Modeling of Software Fault Detection and Correction Processes Based on the Correction Lag", "displayText": "Yanjun Shu, Hongwei Liu, Zhibo Wu, Xiaozong Yang, \"Modeling of Software Fault Detection and Correction Processes Based on the Correction Lag\", <em>Information Technology Journal</em>, vol. 8, pp. 735, 2009, ISSN 18125638.", "order": "15", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.3923/itj.2009.735.742"}}, {"title": "When to stop testing: a study from the perspective of software reliability models", "displayText": "M. Garg, R. Lai, S. Jen Huang, \"When to stop testing: a study from the perspective of software reliability models\", <em>IET Software</em>, vol. 5, pp. 263, 2011, ISSN 17518806.", "order": "16", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1049/iet-sen.2010.0007"}}, {"title": "Statistical Certification of Software Systems", "displayText": "Alessandro Di Bucchianico, Jan Friso Groote, Kees Van Hee, Ronald Kruidhof, \"Statistical Certification of Software Systems\", <em>Communications in Statistics - Simulation and Computation</em>, vol. 37, pp. 346, 2008, ISSN 0361-0918.", "order": "17", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/03610910701790517"}}, {"title": "When to Release and Stop Testing of a Software", "displayText": "P. K. Kapur, A. K. Shrivastava, Ompal Singh, \"When to Release and Stop Testing of a Software\", <em>Journal of the Indian Society for Probability and Statistics</em>, pp. , 2016, ISSN 2364-9569.", "order": "18", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s41096-016-0012-6"}}, {"title": "Orchestrating End-User Perspectives in the Software Release Process: An Integrated Release Management Framework", "displayText": "Simon Cleveland, Timothy J. Ellis, \"Orchestrating End-User Perspectives in the Software Release Process: An Integrated Release Management Framework\", <em>Advances in Human-Computer Interaction</em>, vol. 2014, pp. 1, 2014, ISSN 1687-5893.", "order": "19", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1155/2014/805307"}}, {"title": "The Assessment and Foundation of Bell-Shaped  Testability Growth Effort Functions Dependent System  Testability Growth Models Based on NHPP", "displayText": "Tian-Mei Li, Cong-Qi Xu, Jing Qiu, Guan-Jun Liu, Qi Zhang, \"The Assessment and Foundation of Bell-Shaped  Testability Growth Effort Functions Dependent System  Testability Growth Models Based on NHPP\", <em>Mathematical Problems in Engineering</em>, vol. 2015, pp. 1, 2015, ISSN 1024-123X.", "order": "20", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1155/2015/613170"}}, {"title": "Software Reliability Growth Model Based on Half Logistic Distribution", "displayText": "M. R. Mitchell, R. E. Link, B. Srinivasa Rao, B. Vara Prasad Rao, R. R. L. Kantam, \"Software Reliability Growth Model Based on Half Logistic Distribution\", <em>Journal of Testing and Evaluation</em>, vol. 39, pp. 103270, 2011, ISSN 00903973.", "order": "21", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1520/JTE103270"}}, {"title": "Reliability growth modeling and optimal release policy under fuzzy environment of an N-version programming system incorporating the effect of fault removal efficiency", "displayText": "P. K. Kapur, Anshu Gupta, P. C. Jha, \"Reliability growth modeling and optimal release policy under fuzzy environment of an N-version programming system incorporating the effect of fault removal efficiency\", <em>International Journal of Automation and Computing</em>, vol. 4, pp. 369, 2007, ISSN 1476-8186.", "order": "22", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s11633-007-0369-9"}}, {"title": "A Unified and Flexible Framework of Imperfect Debugging Dependent SRGMs with Testing-Effort", "displayText": "Ce Zhang, Gang Cui, Hongwei Liu, Fanchao Meng, Shixiong Wu, \"A Unified and Flexible Framework of Imperfect Debugging Dependent SRGMs with Testing-Effort\", <em>Journal of Multimedia</em>, vol. 9, pp. , 2014, ISSN 1796-2048.", "order": "23", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.4304/jmm.9.2.310-317"}}, {"title": "Estimation of reliability and cost relationship for architecture-based software", "displayText": "Hui Guan, Wei-Ru Chen, Ning Huang, Hong-Ji Yang, \"Estimation of reliability and cost relationship for architecture-based software\", <em>International Journal of Automation and Computing</em>, vol. 7, pp. 603, 2010, ISSN 17518520.", "order": "24", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s11633-010-0546-0"}}, {"title": "Encyclopedia of Statistics in Quality and Reliability", "displayText": "Min Xie, Bo Yang, pp. , 2008, ISBN 9780470018613.", "order": "25", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/9780470061572.eqr059"}}, {"title": "Sensitivity analysis of release time of software reliability models incorporating testing effort with multiple change-points", "displayText": "Xiang Li, Min Xie, Szu Hui Ng, \"Sensitivity analysis of release time of software reliability models incorporating testing effort with multiple change-points\", <em>Applied Mathematical Modelling</em>, vol. 34, pp. 3560, 2010, ISSN 0307904X.", "order": "26", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.apm.2010.03.006"}}, {"title": "MULTI-OBJECTIVE OPTIMIZATION APPROACHES TO SOFTWARE RELEASE TIME DETERMINATION", "displayText": "XIANG LI, MIN XIE, SZU HUI NG, \"MULTI-OBJECTIVE OPTIMIZATION APPROACHES TO SOFTWARE RELEASE TIME DETERMINATION\", <em>Asia-Pacific Journal of Operational Research</em>, vol. 29, pp. 1240019, 2012, ISSN 0217-5959.", "order": "27", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0217595912400192"}}, {"title": "Design and analysis of GUI test-case prioritization using weight-based methods", "displayText": "Chin-Yu Huang, Jun-Ru Chang, Yung-Hsin Chang, \"Design and analysis of GUI test-case prioritization using weight-based methods\", <em>Journal of Systems and Software</em>, vol. 83, pp. 646, 2010, ISSN 01641212.", "order": "28", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2009.11.703"}}, {"title": "Process Improvement and CMMI\u00ae for Systems and Software", "displayText": "pp. 191, 2010, ISBN 978-1-4200-6050-8.", "order": "29", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1201/9781420060515-c6"}}, {"title": "Testing effort based modeling to determine optimal release and patching time of software", "displayText": "Anshul Tickoo, P. K. Kapur, A. K. Shrivastava, Sunil K. Khatri, \"Testing effort based modeling to determine optimal release and patching time of software\", <em>International Journal of System Assurance Engineering and Management</em>, pp. , 2016, ISSN 0975-6809.", "order": "30", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s13198-016-0470-y"}}], "ieee": [{"title": "Software Release Time Management: How to Use Reliability Growth Models to Make Better Decisions", "displayText": "Chu-ti Lin, Chin-yu Huang, \"Software Release Time Management: How to Use Reliability Growth Models to Make Better Decisions\", <em>Management of Innovation and Technology 2006 IEEE International Conference on</em>, vol. 2, pp. 658-662, 2006.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4037099", "pdfSize": "364KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4037099"}}, {"title": "Parameter estimation for software reliability models considering failure correlation", "displayText": "Bo Yang, Suchang Guo, Ning Ning, Hong-Zhong Huang, \"Parameter estimation for software reliability models considering failure correlation\", <em>Reliability and Maintainability Symposium 2008. RAMS 2008. Annual</em>, pp. 405-410, 2008, ISSN 0149-144X.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4925830", "pdfSize": "340KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4925830"}}, {"title": "Modeling and Analysis of Software Fault Detection and Correction Process by Considering Time Dependency", "displayText": "Y. P. Wu, Q. P. Hu, M. Xie, S. H. Ng, \"Modeling and Analysis of Software Fault Detection and Correction Process by Considering Time Dependency\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 629-642, 2007, ISSN 0018-9529.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4378411", "pdfSize": "697KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4378411"}}, {"title": "Two Dimensional Multi-Release Software Reliability Modeling and Optimal Release Planning", "displayText": "P. K. Kapur, H. Pham, Anu G. Aggarwal, Gurjeet Kaur, \"Two Dimensional Multi-Release Software Reliability Modeling and Optimal Release Planning\", <em>Reliability IEEE Transactions on</em>, vol. 61, pp. 758-768, 2012, ISSN 0018-9529.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6239639", "pdfSize": "2166KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6239639"}}, {"title": "Software reliability modelling and optimization for multi-release software development processes", "displayText": "Q.P. Hu, R. Peng, M. Xie, S.H. Ng, G. Levitin, \"Software reliability modelling and optimization for multi-release software development processes\", <em>Industrial Engineering and Engineering Management (IEEM) 2011 IEEE International Conference on</em>, pp. 1534-1538, 2011, ISSN 2157-362X.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6118174", "pdfSize": "591KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6118174"}}, {"title": "Software Reliability Engineering: A Roadmap", "displayText": "Michael R. Lyu, \"Software Reliability Engineering: A Roadmap\", <em>Future of Software Engineering 2007. FOSE '07</em>, pp. 153-170, 2007.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4221618", "pdfSize": "255KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4221618"}}, {"title": "Release and testing stop time of a software: A new insight", "displayText": "P.K. Kapur, A.K. Shrivastava, \"Release and testing stop time of a software: A new insight\", <em>Reliability Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions) 2015 4th International Conference on</em>, pp. 1-7, 2015.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7359202", "pdfSize": "1197KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7359202"}}, {"title": "Software Reliability and Testing Time Allocation: An Architecture-Based Approach", "displayText": "Roberto Pietrantuono, Stefano Russo, Kishor S. Trivedi, \"Software Reliability and Testing Time Allocation: An Architecture-Based Approach\", <em>Software Engineering IEEE Transactions on</em>, vol. 36, pp. 323-337, 2010, ISSN 0098-5589.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5383374", "pdfSize": "2325KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5383374"}}, {"title": "Software Reliability Analysis by Considering Fault Dependency and Debugging Time Lag", "displayText": "C.-Y. Huang, C.-T. Lin, \"Software Reliability Analysis by Considering Fault Dependency and Debugging Time Lag\", <em>Reliability IEEE Transactions on</em>, vol. 55, pp. 436-450, 2006, ISSN 0018-9529.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1688079", "pdfSize": "1127KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1688079"}}, {"title": "Optimal software release time determination with risk constraint", "displayText": "Bo Yang, Huajun Hu, Jun Zhou, \"Optimal software release time determination with risk constraint\", <em>Reliability and Maintainability Symposium 2008. RAMS 2008. Annual</em>, pp. 393-398, 2008, ISSN 0149-144X.", "order": "10", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4925828", "pdfSize": "429KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4925828"}}, {"title": "A Study of Uncertainty in Software Cost and Its Impact on Optimal Software Release Time", "displayText": "Bo Yang, Huajun Hu, Lixin Jia, \"A Study of Uncertainty in Software Cost and Its Impact on Optimal Software Release Time\", <em>Software Engineering IEEE Transactions on</em>, vol. 34, pp. 813-825, 2008, ISSN 0098-5589.", "order": "11", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4553721", "pdfSize": "1579KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4553721"}}, {"title": "An Architecture-Based Multi-Objective Optimization Approach to Testing Resource Allocation", "displayText": "Bo Yang, Yanmei Hu, Chin-Yu Huang, \"An Architecture-Based Multi-Objective Optimization Approach to Testing Resource Allocation\", <em>Reliability IEEE Transactions on</em>, vol. 64, pp. 497-515, 2015, ISSN 0018-9529.", "order": "12", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6975258", "pdfSize": "2289KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6975258"}}, {"title": "Analysis of Software Reliability Modeling Considering Testing Compression Factor and Failure-to-Fault Relationship", "displayText": "Chin-Yu Huang, Chu-Ti Lin, \"Analysis of Software Reliability Modeling Considering Testing Compression Factor and Failure-to-Fault Relationship\", <em>Computers IEEE Transactions on</em>, vol. 59, 2010, ISSN 0018-9340.", "order": "13", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5372166", "pdfSize": "2332KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5372166"}}, {"title": "Software reliability modeling with the generalized logistic test coverage function", "displayText": "Bo Zhou, Hang Lei, Wensheng Guo, \"Software reliability modeling with the generalized logistic test coverage function\", <em>Software Engineering and Service Science (ICSESS) 2015 6th IEEE International Conference on</em>, pp. 106-109, 2015, ISSN 2327-0594.", "order": "14", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7339015", "pdfSize": "87KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7339015"}}, {"title": "An investigation into whether the NHPP framework is suitable for software reliability prediction and estimation", "displayText": "Chu-Ti Lin, Kai-Wei Tang, Jun-Ru Chang, Chin-Yu Huang, \"An investigation into whether the NHPP framework is suitable for software reliability prediction and estimation\", <em>Industrial Engineering and Engineering Management (IEEM) 2010 IEEE International Conference on</em>, pp. 626-630, 2010, ISSN 2157-362X.", "order": "15", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5674524", "pdfSize": "633KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5674524"}}, {"title": "Quasi-Renewal Time-Delay Fault-Removal Consideration in Software Reliability Modeling", "displayText": "Seheon Hwang, Hoang Pham, \"Quasi-Renewal Time-Delay Fault-Removal Consideration in Software Reliability Modeling\", <em>Systems Man and Cybernetics Part A: Systems and Humans IEEE Transactions on</em>, vol. 39, pp. 200-209, 2009, ISSN 1083-4427.", "order": "16", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4694128", "pdfSize": "251KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4694128"}}, {"title": "Agents learn from human experts: An approach to test reconfigurable systems", "displayText": "Asem Eltaher, Markus Maurer, Thomas Form, Mohamed Ayeb, \"Agents learn from human experts: An approach to test reconfigurable systems\", <em>Systems Man and Cybernetics 2009. SMC 2009. IEEE International Conference on</em>, pp. 2251-2258, 2009, ISSN 1062-922X.", "order": "17", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5345947", "pdfSize": "786KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5345947"}}, {"title": "Optimal Allocation of Testing Effort Considering Software Architecture", "displayText": "Lance Fiondella, Swapna S. Gokhale, \"Optimal Allocation of Testing Effort Considering Software Architecture\", <em>Reliability IEEE Transactions on</em>, vol. 61, pp. 580-589, 2012, ISSN 0018-9529.", "order": "18", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6179570", "pdfSize": "839KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6179570"}}]}, "mlTime": "PT0.22155S", "title": "Optimal release time for software systems considering cost, testing-effort, and test efficiency", "lastupdate": "2016-11-14T22:44:10", "ieeeCitationCount": "18", "nonIeeeCitationCount": "32"}, "references": [{"id": "ref1", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " According to the ANSI definition [1], software reliability is defined as the probability of failure-free software operation for a specified period of time under a specified environment."}, {"sec": "sec1", "part": "1", "text": " Since the early 1970s, a number of Software Reliability Growth Models (SRGM) have been proposed for the estimation of reliability growth of products during software development (SD) processes [1] [2] [3]."}, {"sec": "sec1", "part": "1", "text": " Among these models, Goel and Okumoto [1] used a NHPP as the stochastic process to describe the fault process."}, {"sec": "sec1", "part": "1", "text": " It was shown that we could get the optimal software release time based on a cost criterion when minimizing the total expected cost [1], [6]."}, {"sec": "sec3d2", "part": "1", "text": " Finally, because a good SRGM should be able to predict the behavior of future failures well, Fig. 2(d) shows a \\$u\\$-plot analysis of predictions from the selected models on DS2 [1]."}], "title": "Handbook of Software Reliability Engineering", "order": "1", "text": "M. R. Lyu, Handbook of Software Reliability Engineering, 1996, McGraw Hill."}, {"id": "ref2", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Since the early 1970s, a number of Software Reliability Growth Models (SRGM) have been proposed for the estimation of reliability growth of products during software development (SD) processes [1] [2] [3]."}, {"sec": "sec3a", "part": "1", "text": " The second data set in this paper is the System T1 data of the Rome Air Development Center (RADC) projects in [2], [3]."}, {"sec": "sec3c", "part": "1", "text": " Two popular estimation techniques are MLE, and LSE [2]."}], "title": "Software Reliability, Measurement, Prediction and Application", "order": "2", "text": "J. D. Musa, A. Iannino, K. Okumoto, Software Reliability Measurement Prediction and Application, 1987, McGraw Hill."}, {"id": "ref3", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " Since the early 1970s, a number of Software Reliability Growth Models (SRGM) have been proposed for the estimation of reliability growth of products during software development (SD) processes [1] [2] [3]."}, {"sec": "sec3a", "part": "1", "text": " The second data set in this paper is the System T1 data of the Rome Air Development Center (RADC) projects in [2], [3]."}], "title": "Software Reliability Engineering: More Reliable Software, Faster Development and Testing", "order": "3", "text": "J. D. Musa, Software Reliability Engineering: More Reliable Software Faster Development and Testing, 1987, McGraw-Hill."}, {"id": "ref4", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=210278", "pdfSize": "607KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software reliability measurement during the testing phase is essential for examining the degree of quality or reliability of a developed software system. A software-reliability growth model incorporating the amount of test effort expended during the software testing phase is developed. The time-dependent behavior of test-effort expenditures is described by a Weibull curve. Assuming that the error detection rate to the amount of test effort spent during the testing phase is proportional to the cu...", "documentLink": "/document/210278"}, "context": [{"sec": "sec1", "part": "1", "text": " [4] [5] [6] modified the Goel-Okumoto model, and incorporated the concept of testing-effort (TE) into an NHPP model to get a better description of the software fault phenomenon."}, {"sec": "sec2a", "part": "1", "text": " From the past studies in [4]\u2013[6], [19], several TE expressions, such as Exponential, Rayleigh, and Weibull-type curves, etc, can be applied."}, {"sec": "sec3b", "part": "1", "text": "The Accuracy of Estimation (AE) is defined [4]\u2013[6] as For practical purposes, \\$M_{a}\\$ is obtained from software fault tracking after software testing."}], "title": "Software reliability growth model with Weibull testing effort: a model and application", "order": "4", "text": "S. Yamada, J. Hishitani, S. Osaki, \"Software reliability growth model with Weibull testing effort: a model and application\", <em>IEEE Trans. Rel.</em>, vol. R-42, pp. 100-105, 1993."}, {"id": "ref5", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4335332", "pdfSize": "761KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Many software reliability growth models have been proposed in the past decade. Those models tacitly assume that testing-effort expenditures are constant throughout software testing. This paper develops realistic software reliability growth models incorporating the effect of testing-effort. The software error detection phenomenon in software testing is modeled by a nonhomogeneous Poisson process. The software reliability assessment measures and the estimation methods of parameters are investigate...", "documentLink": "/document/4335332"}, "context": [{"sec": "sec1", "part": "1", "text": " Yamada et al. [4] [5] [6] modified the Goel-Okumoto model, and incorporated the concept of testing-effort (TE) into an NHPP model to get a better description of the software fault phenomenon."}, {"sec": "sec2a", "part": "1", "text": " From the past studies in [4]\u2013[5][6], [19], several TE expressions, such as Exponential, Rayleigh, and Weibull-type curves, etc, can be applied."}, {"sec": "sec3b", "part": "1", "text": "The Accuracy of Estimation (AE) is defined [4]\u2013[5][6] as For practical purposes, \\$M_{a}\\$ is obtained from software fault tracking after software testing."}, {"sec": "sec4", "part": "1", "text": " For example, we can control the modified consumption rate of TE expenditures, and detect more faults in a prescribed time interval [5], [8]."}], "title": "Software reliability growth models with testing effort", "order": "5", "text": "S. Yamada, H. Ohtera, H. Narihisa, \"Software reliability growth models with testing effort\", <em>IEEE Trans. Rel.</em>, vol. R-35, no. 1, pp. 19-23, Apr. 1986."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5222222", "pdfSize": "421KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper extends an optimal software release problem to both cost and reliability requirements. The optimum software release time is determined both by minimizing a total average software cost and satisfying a software reliability requirement. The underlying model is software reliability growth described by a nonhomogeneous Poisson process.", "documentLink": "/document/5222222"}, "context": [{"sec": "sec1", "part": "1", "text": " Yamada et al. [4] [5] [6] modified the Goel-Okumoto model, and incorporated the concept of testing-effort (TE) into an NHPP model to get a better description of the software fault phenomenon."}, {"sec": "sec1", "part": "1", "text": " It was shown that we could get the optimal software release time based on a cost criterion when minimizing the total expected cost [1], [6]."}, {"sec": "sec2a", "part": "1", "text": " From the past studies in [4]\u2013[6], [19], several TE expressions, such as Exponential, Rayleigh, and Weibull-type curves, etc, can be applied."}, {"sec": "sec3b", "part": "1", "text": "The Accuracy of Estimation (AE) is defined [4]\u2013[6] as For practical purposes, \\$M_{a}\\$ is obtained from software fault tracking after software testing."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}], "title": "Cost-reliability optimal release policies for software systems", "order": "6", "text": "S. Yamada, S. Osaki, \"Cost-reliability optimal release policies for software systems\", <em>IEEE Trans. Rel.</em>, vol. 34, no. 5, pp. 422-424, 1985."}, {"id": "ref7", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1183936", "pdfSize": "310KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, we describe how several existing software reliability growth models based on Nonhomogeneous Poisson processes (NHPPs) can be comprehensively derived by applying the concept of weighted arithmetic, weighted geometric, or weighted harmonic mean. Furthermore, based on these three weighted means, we thus propose a more general NHPP model from the quasi arithmetic viewpoint. In addition to the above three means, we formulate a more general transformation that includes a parametric fami...", "documentLink": "/document/1183936"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, we [7] [8]\u2013[11] proposed a new SRGM with a logistic testing-effort function (TEF)."}, {"sec": "sec2a", "part": "1", "text": "Recently, we [7]\u2013[9] proposed a logistic TEF to describe the possible TE patterns, in which the current TE consumption is expressed as  Because we obtainThe current TE \\$w(t)\\$ reaches its maximum value at time [7], [8] ."}, {"sec": "sec2b", "part": "1", "text": "From previous studies [7] [8] [9], we know that the logistic TEF (i.e. the Parr model [20]) can be used to describe the work profile of SD."}], "title": "A unified scheme of some nonhomogenous Poisson process models for software reliability estimation", "order": "7", "text": "C. Y. Huang, M. R. Lyu, S. Y. Kuo, \"A unified scheme of some nonhomogenous Poisson process models for software reliability estimation\", <em>IEEE Trans. on Software Engineering</em>, vol. 29, no. 3, pp. 261-269, Mar. 2003."}, {"id": "ref8", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1028398", "pdfSize": "389KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper investigates a SRGM (software reliability growth model) based on the NHPP (nonhomogeneous Poisson process) which incorporates a logistic testing-effort function. SRGM proposed in the literature consider the amount of testing-effort spent on software testing which can be depicted as an exponential curve, a Rayleigh curve, or a Weibull curve. However, it might not be appropriate to represent the consumption curve for testing-effort by one of those curves in some software development env...", "documentLink": "/document/1028398"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, we [7] [8]\u2013[11] proposed a new SRGM with a logistic testing-effort function (TEF)."}, {"sec": "sec2a", "part": "1", "text": "Therefore, we first describe the SRGM based on TEF as follow [8]\u2013[11]:  Note that (1) includes two components which influence the number of faults detected: the TE function \\$w(t)\\$, and the fault detection rate \\$r\\$."}, {"sec": "sec2a", "part": "1", "text": "Recently, we [7]\u2013[8][9] proposed a logistic TEF to describe the possible TE patterns, in which the current TE consumption is expressed as  Because we obtainThe current TE \\$w(t)\\$ reaches its maximum value at time [7], [8] ."}, {"sec": "sec2b", "part": "1", "text": "From previous studies [7] [8] [9], we know that the logistic TEF (i.e. the Parr model [20]) can be used to describe the work profile of SD."}, {"sec": "sec3b", "part": "1", "text": "Long-term predictions: the Mean Square Error (MSE) is defined as [8], [9], [24] In our quantitative comparisons, we use MSE because we believe that it is easier to understand."}, {"sec": "sec4", "part": "1", "text": " For example, we can control the modified consumption rate of TE expenditures, and detect more faults in a prescribed time interval [5], [8]."}], "title": "Analysis and assessment of incorporating logistic testing effort function into software reliability modeling", "order": "8", "text": "C. Y. Huang, S. Y. Kuo, \"Analysis and assessment of incorporating logistic testing effort function into software reliability modeling\", <em>IEEE Trans. Rel.</em>, vol. 51, no. 3, pp. 261-270, Sep. 2002."}, {"id": "ref9", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=974129", "pdfSize": "247KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper proposes a new scheme for constructing software reliability growth models (SRGM) based on a nonhomogeneous Poisson process (NHPP). The main focus is to provide an efficient parametric decomposition method for software reliability modeling, which considers both testing efforts and fault detection rates (FDR). In general, the software fault detection/removal mechanisms depend on previously detected/removed faults and on how testing efforts are used. From practical field studies, it is l...", "documentLink": "/document/974129"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, we [7] [8]\u2013[9][11] proposed a new SRGM with a logistic testing-effort function (TEF)."}, {"sec": "sec2a", "part": "1", "text": "Therefore, we first describe the SRGM based on TEF as follow [8]\u2013[9][11]:  Note that (1) includes two components which influence the number of faults detected: the TE function \\$w(t)\\$, and the fault detection rate \\$r\\$."}, {"sec": "sec2a", "part": "1", "text": "Recently, we [7]\u2013[9] proposed a logistic TEF to describe the possible TE patterns, in which the current TE consumption is expressed as  Because we obtainThe current TE \\$w(t)\\$ reaches its maximum value at time [7], [8] ."}, {"sec": "sec2b", "part": "1", "text": "From previous studies [7] [8] [9], we know that the logistic TEF (i.e. the Parr model [20]) can be used to describe the work profile of SD."}, {"sec": "sec3b", "part": "1", "text": "Long-term predictions: the Mean Square Error (MSE) is defined as [8], [9], [24] In our quantitative comparisons, we use MSE because we believe that it is easier to understand."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}], "title": "Framework for modeling software reliability, using various testing-efforts and fault-detection rates", "order": "9", "text": "S. Y. Kuo, C. Y. Huang, M. R. Lyu, \"Framework for modeling software reliability using various testing-efforts and fault-detection rates\", <em>IEEE Trans. Rel.</em>, vol. 50, no. 3, pp. 310-320, Sep. 2001."}, {"id": "ref10", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=814328", "pdfSize": "586KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "We study the optimal software release problem considering cost, reliability and testing efficiency. We first propose a generalized logistic testing effort function that can be used to describe the actual consumption of resources during the software development process. We then address the problem of how to decide when to stop testing and when to release software for use. In addressing the optimal release time, we consider cost and reliability factors. Moreover, we introduce the concept of testin...", "documentLink": "/document/814328"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, we [7] [8]\u2013[10][11] proposed a new SRGM with a logistic testing-effort function (TEF)."}, {"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[16]."}, {"sec": "sec2a", "part": "1", "text": "Therefore, we first describe the SRGM based on TEF as follow [8]\u2013[10][11]:  Note that (1) includes two components which influence the number of faults detected: the TE function \\$w(t)\\$, and the fault detection rate \\$r\\$."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}], "title": "Optimal software release policy based on cost, reliability and testing efficiency", "order": "10", "text": "C. Y. Huang, S. Y. Kuo, M. R. Lyu, \"Optimal software release policy based on cost reliability and testing efficiency\", <em>Proceedings of the 23rd Annual International Computer Software and Applications Conference (COMPSAC'99)</em>, pp. 468-473, 1999-Oct.-27&#82129."}, {"id": "ref11", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=809311", "pdfSize": "295KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Many studies have been performed on the subject of software reliability but few have explicitly considered the impact of software testing on the reliability process. This paper presents two important issues on software reliability modeling and software reliability economics: testing effort and efficiency. First, we discuss on how to extend the logistic testing-effort function into a general form. The generalized logistic testing-effort function has the advantage of relating the work profile more...", "documentLink": "/document/809311"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, we [7] [8]\u2013[11] proposed a new SRGM with a logistic testing-effort function (TEF)."}, {"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[16]."}, {"sec": "sec2a", "part": "1", "text": "Therefore, we first describe the SRGM based on TEF as follow [8]\u2013[11]:  Note that (1) includes two components which influence the number of faults detected: the TE function \\$w(t)\\$, and the fault detection rate \\$r\\$."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[11][16], [29]\u2013[35]."}], "title": "Software reliability modeling and cost estimation incorporating testing-effort and efficiency", "order": "11", "text": "C. Y. Huang, J. H. Lo, S. Y. Kuo, M. R. Lyu, \"Software reliability modeling and cost estimation incorporating testing-effort and efficiency\", <em>Proceedings of the 10th International Symposium on Software Reliability Engineering (ISSRE'99)</em>, pp. 62-72, 1999-Nov.-1&#8214."}, {"id": "ref12", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/01621459.1988.10478676"}, "context": [{"sec": "sec1", "part": "1", "text": " To avoid this phenomenon, we need to know when to stop testing [12]."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[12][16], [29]\u2013[35]."}], "title": "When should one stop testing software", "order": "12", "text": "S. R. Dalal, C. L. Mallows, \"When should one stop testing software\", <em>Journal of the American Statistical Association</em>, vol. 83, no. 403, pp. 872-879, Sep. 1988."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=565602", "pdfSize": "105KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The Hyper-Geometric Distribution software reliability growth Model (HGDM) was developed to estimate the number of remaining software faults after completing the test/debug phase. An important problem in the software development process is to determine when to stop testing and release the software to the users. In this paper, the cost optimal release policy, which minimizes the total expected software cost, is discussed. The total expected software cost here includes the penalty cost, which shoul...", "documentLink": "/document/565602"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[16]."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[13][16], [29]\u2013[35]."}], "title": "Optimal release times for software systems with scheduled delivery time based on HGDM", "order": "13", "text": "R. H. Huo, S. Y. Kuo, Y. P. Chang, \"Optimal release times for software systems with scheduled delivery time based on HGDM\", <em>IEEE Trans. on Computers</em>, vol. 46, no. 2, pp. 216-221, Feb. 1997."}, {"id": "ref14", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=556588", "pdfSize": "479KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The hyper-geometric distribution software-reliability growth model (HGDM) can estimate the number of initial faults in a software program. An important problem in software development is to determine when to stop testing and then release the software. This paper mainly investigates the optimal software release policies which minimize the mean total software cost and satisfy the software-reliability requirement based on the HGDM. The optimal software release times are determined and shown to be f...", "documentLink": "/document/556588"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[14][16]."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[14][16], [29]\u2013[35]."}], "title": "Optimal release policy for hyper-geometric distribution software reliability growth model", "order": "14", "text": "R. H. Huo, S. Y. Kuo, Y. P. Chang, \"Optimal release policy for hyper-geometric distribution software reliability growth model\", <em>IEEE Trans. Rel.</em>, vol. 45, no. 4, pp. 646-651, Dec. 1996."}, {"id": "ref15", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/0164-1212(92)90112-W"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[15][16]."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[15][16], [29]\u2013[35]."}], "title": "Optimum software release time with a given budget", "order": "15", "text": "Y. W. Leung, \"Optimum software release time with a given budget\", <em>J. Syst. Softw.</em>, vol. 17, pp. 233-242, 1992."}, {"id": "ref16", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/00207728408926610"}, "context": [{"sec": "sec1", "part": "1", "text": " Recently, many papers have discussed the optimal software release time problem considering cost & reliability [10], [11], [13]\u2013[16]."}, {"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}], "title": "Optimum release policies for a software system with a scheduled delivery time", "order": "16", "text": "S. Yamada, H. Narihisa, S. Osaki, \"Optimum release policies for a software system with a scheduled delivery time\", <em>Int. J. of Syst. Sci.</em>, vol. 15, pp. 905-914, 1984."}, {"id": "ref17", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0377-2217(02)00181-9"}, "context": [{"sec": "sec1", "part": "1", "text": " As time progresses, they can detect additional faults, which reduces the expenses of correcting faults during the operational phase [17], [18]."}, {"sec": "sec4", "part": "1", "text": " In addition to controlling the TE expenditures, we can achieve a given operational quality at a specified time by introducing new automated testing tools & techniques to find those faults not easily exposed during the earlier manual testing phase [17], [18]."}], "title": "NHPP software reliability and cost models with testing coverage", "order": "17", "text": "H. Pham, X. Zhang, \"NHPP software reliability and cost models with testing coverage\", <em>Eur. J. Oper. Res.</em>, vol. 145, no. 2, pp. 443-454, Mar. 2003."}, {"id": "ref18", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0263-7863(99)00024-1"}, "context": [{"sec": "sec1", "part": "1", "text": " As time progresses, they can detect additional faults, which reduces the expenses of correcting faults during the operational phase [17], [18]."}, {"sec": "sec4", "part": "1", "text": " In addition to controlling the TE expenditures, we can achieve a given operational quality at a specified time by introducing new automated testing tools & techniques to find those faults not easily exposed during the earlier manual testing phase [17], [18]."}], "title": "Testing in the software development life-cycle: now or later", "order": "18", "text": "F. Huq, \"Testing in the software development life-cycle: now or later\", <em>Int. J. Project Management</em>, vol. 18, pp. 243-250, 2000."}, {"id": "ref19", "refType": "biblio", "context": [{"sec": "sec2a", "part": "1", "text": " From the past studies in [4]\u2013[6], [19], several TE expressions, such as Exponential, Rayleigh, and Weibull-type curves, etc, can be applied."}], "title": "Software Engineering: A Practitioner's Approach", "order": "19", "text": "R. S. Pressman, Software Engineering: A Practitioner's Approach, 2001, McGraw-Hill."}, {"id": "ref20", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1702731", "pdfSize": "2014KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A new model of the software development process is presented and used to derive the form of the resource consumption curve of a project over its life cycle. The function obtained differs in detail from the Rayleigh curve previously used in fitting actual project data. The main advantage of the new model is that it relates the rate of progress which can be achieved in developing software to the structure of the system being developed. This leads to a more testable theory, and it also becomes poss...", "documentLink": "/document/1702731"}, "context": [{"sec": "sec2b", "part": "1", "text": "From previous studies [7] [8] [9], we know that the logistic TEF (i.e. the Parr model [20]) can be used to describe the work profile of SD."}], "title": "An alternative to the Rayleigh curve for software development effort", "order": "20", "text": "F. N. Parr, \"An alternative to the Rayleigh curve for software development effort\", <em>IEEE Trans. on Software Engineering</em>, vol. SE-6, pp. 291-296, 1980."}, {"id": "ref21", "refType": "biblio", "context": [{"sec": "sec2b", "part": "1", "text": " DeMarco [21] also reported that this function was found to be fairly accurate by the Yourdon 1978\u20131980 project survey."}], "title": "Controlling Software Projects: Management, Measurement and Estimation", "order": "21", "text": "T. DeMarco, Controlling Software Projects: Management Measurement and Estimation, 1982, Prentice-Hall."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5390352", "pdfSize": "1535KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper discusses improvements to conventional software reliability analysis models by making the assumptions on which they are based more realistic. In an actual project environment, sometimes no more information is available than reliability data obtained from a test report. The models described here are designed to resolve the problems caused by this constraint on the availability of reliability data. By utilizing the technical knowledge about a program, a test, and test data, we can selec...", "documentLink": "/document/5390352"}, "context": [{"sec": "sec3a", "part": "1", "text": " The first set of real data is from a study by [22]."}], "title": "Software reliability analysis models", "order": "22", "text": "M. Ohba, \"Software reliability analysis models\", <em>IBM Journal of Research and Development</em>, vol. 28, no. 4, pp. 428-443, 1984."}, {"id": "ref23", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/0026-2714(94)00054-R"}, "context": [{"sec": "sec3a", "part": "1", "text": " The total cumulative number of detected faults after a long time of testing is 358 [23]."}, {"sec": "sec3a", "part": "1", "text": " The number of faults removed after 3.5 years of test is 188 [23]."}], "title": "Software reliability growth model with error dependency", "order": "23", "text": "P. K. Kapur, S. Younes, \"Software reliability growth model with error dependency\", <em>Microelectronics and Reliability</em>, vol. 35, no. 2, pp. 273-278, 1995."}, {"id": "ref24", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=143104", "pdfSize": "1271KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A set of linear combination software reliability models that combine the results of single, or component, models is presented. It is shown that, as measured by statistical methods for determining a model's applicability to a set of failure data, a combination model tends to have more accurate short-term and long-term predictions than a component model. These models were evaluated using both historical data sets and data from recent Jet Propulsion Laboratory projects. The computer-aided software ...", "documentLink": "/document/143104"}, "context": [{"sec": "sec3b", "part": "1", "text": "Long-term predictions: the Mean Square Error (MSE) is defined as [8], [9], [24] In our quantitative comparisons, we use MSE because we believe that it is easier to understand."}], "title": "Applying software reliability models more effectively", "order": "24", "text": "M. R. Lyu, A. Nikora, \"Applying software reliability models more effectively\", <em>IEEE Software</em>, pp. 43-52, Jul. 1992."}, {"id": "ref25", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=637387", "pdfSize": "343KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Accurate project effort prediction is an important goal for the software engineering community. To date most work has focused upon building algorithmic models of effort, for example COCOMO. These can be calibrated to local environments. We describe an alternative approach to estimation based upon the use of analogies. The underlying principle is to characterize projects in terms of features (for example, the number of interfaces, the development method or the size of the functional requirements ...", "documentLink": "/document/637387"}, "context": [{"sec": "sec3b", "part": "1", "text": "Besides, to check the performance of the generalized logistic TEF, and to make a fair comparison with other TEF we also select some comparison criteria [25] [26]\u2013[28]:."}], "title": "Estimating software project effort using analogies", "order": "25", "text": "M. Shepperd, C. Schofield, \"Estimating software project effort using analogies\", <em>IEEE Trans. on Software Engineering</em>, vol. 23, pp. 736-743, 1997."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=345828", "pdfSize": "1335KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Accurate estimation of software development effort is critical in software engineering. Underestimates lead to time pressures that may compromise full functional development and thorough testing of software. In contrast, overestimates can result in noncompetitive contract bids and/or over allocation of development resources and personnel. As a result, many models for estimating software development effort have been proposed. This article describes two methods of machine learning, which we use to...", "documentLink": "/document/345828"}, "context": [{"sec": "sec3b", "part": "1", "text": "Besides, to check the performance of the generalized logistic TEF, and to make a fair comparison with other TEF we also select some comparison criteria [25] [26]\u2013[28]:."}], "title": "Machine learning approaches to estimating software development effort", "order": "26", "text": "K. Srinivasan, D. Fisher, \"Machine learning approaches to estimating software development effort\", <em>IEEE Trans. on Software Engineering</em>, vol. 21, no. 2, pp. 126-136, 1995."}, {"id": "ref27", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=624305", "pdfSize": "493KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Several algorithmic models have been proposed to estimate software costs and other management parameters. Early prediction of completion time is absolutely essential for proper advance planning and aversion of the possible ruin of a project. L.H. Putnam's (1978) SLIM (Software LIfecycle Management) model offers a fairly reliable method that is used extensively to predict project completion times and manpower requirements as the project evolves. However, the nature of the Norden/Rayleigh curve us...", "documentLink": "/document/624305"}, "context": [{"sec": "sec3b", "part": "1", "text": "Besides, to check the performance of the generalized logistic TEF, and to make a fair comparison with other TEF we also select some comparison criteria [25] [26]\u2013[27][28]:."}], "title": "A model for software development effort and cost estimation", "order": "27", "text": "K. Pillai, V. S. Sukumaran Nair, \"A model for software development effort and cost estimation\", <em>IEEE Trans. on Software Engineering</em>, vol. 23, no. 8, pp. 485-497, Aug. 1997."}, {"id": "ref28", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=345828", "pdfSize": "1335KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Accurate estimation of software development effort is critical in software engineering. Underestimates lead to time pressures that may compromise full functional development and thorough testing of software. In contrast, overestimates can result in noncompetitive contract bids and/or over allocation of development resources and personnel. As a result, many models for estimating software development effort have been proposed. This article describes two methods of machine learning, which we use to...", "documentLink": "/document/345828"}, "context": [{"sec": "sec3b", "part": "1", "text": "Besides, to check the performance of the generalized logistic TEF, and to make a fair comparison with other TEF we also select some comparison criteria [25] [26]\u2013[28]:."}], "title": "Machine learning approaches to estimating software development effort", "order": "28", "text": "K. Srinivasan, D. Fisher, \"Machine learning approaches to estimating software development effort\", <em>IEEE Trans. on Software Engineering</em>, vol. 21, no. 2, pp. 126-136, 1995."}, {"id": "ref29", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/0164-1212(79)90033-5"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}, {"sec": "sec4a", "part": "1", "text": " Okumoto and Goel [29] first discussed the optimal software release policy from the cost-benefit viewpoint."}], "title": "Optimum release time for software systems based on reliability and cost criteria", "order": "29", "text": "K. Okumoto, A. L. Goel, \"Optimum release time for software systems based on reliability and cost criteria\", <em>J. System Software</em>, vol. 1, pp. 315-318, 1980."}, {"id": "ref30", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=565602", "pdfSize": "105KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The Hyper-Geometric Distribution software reliability growth Model (HGDM) was developed to estimate the number of remaining software faults after completing the test/debug phase. An important problem in the software development process is to determine when to stop testing and release the software to the users. In this paper, the cost optimal release policy, which minimizes the total expected software cost, is discussed. The total expected software cost here includes the penalty cost, which shoul...", "documentLink": "/document/565602"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[30][35]."}, {"sec": "sec4a", "part": "1", "text": " Usually, appropriate automated tools or techniques are selected depending on how thoroughly failure data are collected, and faults are categorized [30], [31]."}], "title": "Optimal release times for software systems with scheduled delivery time based on HGDM", "order": "30", "text": "R. H. Hou, S. Y. Kuo, Y. P. Chang, \"Optimal release times for software systems with scheduled delivery time based on HGDM\", <em>IEEE Trans. on Computers</em>, vol. 46, no. 2, pp. 216-221, Feb. 1997."}, {"id": "ref31", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=556588", "pdfSize": "479KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The hyper-geometric distribution software-reliability growth model (HGDM) can estimate the number of initial faults in a software program. An important problem in software development is to determine when to stop testing and then release the software. This paper mainly investigates the optimal software release policies which minimize the mean total software cost and satisfy the software-reliability requirement based on the HGDM. The optimal software release times are determined and shown to be f...", "documentLink": "/document/556588"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[31][35]."}, {"sec": "sec4a", "part": "1", "text": " Usually, appropriate automated tools or techniques are selected depending on how thoroughly failure data are collected, and faults are categorized [30], [31]."}], "title": "Optimal release policy for hyper-geometric distribution software reliability growth model", "order": "31", "text": "R. H. Hou, S. Y. Kuo, Y. P. Chang, \"Optimal release policy for hyper-geometric distribution software reliability growth model\", <em>IEEE Trans. Rel.</em>, vol. 45, no. 4, pp. 646-651, Dec. 1996."}, {"id": "ref32", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1199075", "pdfSize": "565KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "It is widely recognized that the debugging processes are usually imperfect. Software faults are not completely removed because of the difficulty in locating them or because new faults might be introduced. Hence, it is of great importance to investigate the effect of the imperfect debugging on software development cost, which, in turn, might affect the optimal software release time or operational budget. In this paper, a commonly used cost model is extended to the case of imperfect debugging. Bas...", "documentLink": "/document/1199075"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[32][35]."}], "title": "A study of the effect of imperfect debugging on software development cost", "order": "32", "text": "M. Xie, B. Yang, \"A study of the effect of imperfect debugging on software development cost\", <em>IEEE Trans. on Software Engineering</em>, vol. 29, no. 5, pp. 471-473, May 2003."}, {"id": "ref33", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1023/A:1004609901828"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[33][35]."}], "title": "Software release games", "order": "33", "text": "T. Dohi, \"Software release games\", <em>J. Optim. Theory Appl.</em>, vol. 105, no. 2, pp. 325-346, May 2000."}, {"id": "ref34", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/01621459.1988.10478676"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[34][35]."}], "title": "When should one stop testing software", "order": "34", "text": "S. R. Dalal, C. L. Mallows, \"When should one stop testing software\", <em>Journal of the American Statistical Association</em>, vol. 83, no. 403, pp. 872-879, Sep. 1988."}, {"id": "ref35", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/07408170208928867"}, "context": [{"sec": "sec4a", "part": "1", "text": " In recent years, the problem of optimal software release time has been analyzed & discussed by many papers [6], [9] [10]\u2013[16], [29]\u2013[35]."}], "title": "Dynamic release policies for software systems with a reliability constraint", "order": "35", "text": "S. Zheng, \"Dynamic release policies for software systems with a reliability constraint\", <em>IIE Transactions</em>, vol. 34, no. 3, pp. 253-262, Mar. 2002."}, {"id": "ref36", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/1390"}, "context": [{"sec": "sec4a", "part": "1", "text": " The total cost of TE expenditures at time \\$T, C\\hbox{1}(T)\\$, can be expressed as [36]where \\$C_{1}\\$ is the cost of correcting an error during testing, \\$C_{2}\\$ is the cost of correcting an error during operation, and \\$C_{3}\\$ is the cost of testing per unit TE expenditures."}], "title": "Software Reliability Modeling", "order": "36", "text": "M. Xie, Software Reliability Modeling, 1991, World Scientific Publishing Company."}, {"id": "ref37", "refType": "biblio", "context": [{"sec": "sec4a", "part": "1", "text": " From the work by Boehm [37], [38], we know \\$C_{2}\\$ is usually an order of magnitude greater than \\$C_{1}\\$."}], "title": "Software Engineering Economics", "order": "37", "text": "B. Boehm, Software Engineering Economics, 1981, Prentice-Hall."}, {"id": "ref38", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1023/A:1018991717352"}, "context": [{"sec": "sec4a", "part": "1", "text": " From the work by Boehm [37], [38], we know \\$C_{2}\\$ is usually an order of magnitude greater than \\$C_{1}\\$."}], "title": "Software development cost estimation approaches&#821a survey", "order": "38", "text": "B. Boehm, C. Abts, S. Chulani, \"Software development cost estimation approaches&#821a survey\", <em>Annals of Software Engineering</em>, vol. 10, no. 1&#8214, pp. 177-205, 2000."}, {"id": "ref39", "refType": "biblio", "context": [{"sec": "sec4a", "part": "1", "text": " Sometimes creating these tools is not expensive because they need to hire some engineers, or consider outsourcing [39]."}, {"sec": "sec4a", "part": "1", "text": " Sometimes test tool vendors offer various types of support, such as software upgrades, patches, or maintenance supports, etc. with different fees [39]."}], "title": "The Drawbacks of Developing Your Own Test Tools", "order": "39", "text": "J. Fajardo, <em>The Drawbacks of Developing Your Own Test Tools</em>,  [online]  Available: ."}], "arnumber": "1546565"}