{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/1435730/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Identify unrepairability to speed-up spare allocation for repairing memories", "doi": "10.1109/TR.2005.847248", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "1435730", "endPage": "365", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/30936/1435730", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "30936", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "358", "standardTitle": "Identify unrepairability to speed-up spare allocation for repairing memories", "publicationDate": "June 2005", "pdfPath": "/iel5/24/30936/01435730.pdf", "mlTime": "PT0.137066S", "publicationNumber": "24", "copyrightYear": "2005", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Hsing-Chung Liang received his B.S., M.S., and Ph.D. degrees in Electronic Engineering from National Chiao Tung University, Taiwan, R.O.C., in 1989, 1991, and 1997, respectively. He served in the Department of Electronic Engineering, Van Nung Institute of Technology (present Vanung University), Taiwan, from 1997 to 1999. He has been an Assistant Professor with the Department of Electronic Engineering, Chang Gung University since 1999. His research interests include memory reconfiguration, built-in self-repair, system-on-a-chip testing, design for testability, and test generation algorithms. He is a member of IEEE."]}, "affiliation": "Dept. of Electron. Eng., Chang Gung Univ., Tao-Yuan, Taiwan", "name": " Hsing-Chung Liang"}, {"bio": {"p": ["Wen-Chin Ho received his M.S. degrees in Semiconductor Technology from Chang Gung University, Taiwan, R.O.C. in 2002. He starts serving as a product engineer in Winbond Electronics Corporation, Taiwan since 2004. He works on product verification, product characteristics analysis, yield improvement, and cost reduction for testing process."]}, "name": " Wen-Chin Ho"}, {"bio": {"p": ["Ming-Chieh Cheng received his M.S. degrees in Semiconductor Technology from Chang Gung University, Taiwan, R.O.C. in 2003. Since then he serves as a test engineer in Ardentec Corporation, Taiwan. He is working on test program development, and redundancy analysis for semiconductor memories."]}, "name": " Ming-Chieh Cheng"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-12-18T04:00:49", "abstract": "In this paper, we discuss some strategies for identifying unrepairable memories, and from that to introduce a novel theorem that can make more precise identification. A new algorithm for searching repair solutions is also proposed, which characterizes the rows, and columns of defective memory cells with revised effective coefficients. We have simulated it on many generated example maps, and compared it with the previous algorithms to verify its efficiency. It's combined with those arranged strategies of judging unrepairability to generate a complete flow. The complete algorithm has also been run on many examples with various memory sizes, defect numbers, and distribution types. The simulation results further show that identifying unrepairability in advance can help the reconfiguration procedure run much faster than searching solutions directly.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "1435730", "xplore-issue": "30936", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=30936", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Identify+unrepairability+to+speed-up+spare+allocation+for+repairing+memories&isbn=&publicationDate=June+2005&author=+Hsing-Chung+Liang&ContentID=10.1109/TR.2005.847248&orderBeanReset=true&startPage=358&endPage=365&volumeNum=54&issueNum=2", "citationCount": "4", "keywords": [{"kwd": ["Fault diagnosis", "Testing", "Redundancy", "Lead", "Councils", "Production", "Bipartite graph", "Cost function", "Clustering algorithms", "Fault detection"], "type": "IEEE Keywords"}, {"kwd": ["redundancy", "digital storage", "reliability theory", "maintenance engineering", "identification", "fault diagnosis"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["memory redundancy", "unrepairability identification", "speed-up spare allocation", "repairing memories", "unrepairable memories", "precise identification", "repair solution searching", "defective memory cell", "judging unrepairability", "memory sizes", "defect number", "distribution type"], "type": "INSPEC: Non-Controlled Indexing"}, {"kwd": ["spare allocation", "Memory redundancy", "reconfiguration", "repairability", "repair solution"], "type": "Author Keywords "}], "issue": "2", "chronOrPublicationDate": "June 2005", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Identify unrepairability to speed-up spare allocation for repairing memories", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "54", "accessionNumber": "8449759"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/30936/1435730", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "Identify unrepairability to speed-up spare allocation for repairing memories", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Optimal cutting design and analysis for fault-tolerant scheme of redundant memories", "displayText": "Chin-Yu Huang, Yung-Ruei Chang, Kuan-Tung Fang, \"Optimal cutting design and analysis for fault-tolerant scheme of redundant memories\", <em>International Journal of Systems Science</em>, vol. 41, pp. 1085, 2010, ISSN 0020-7721.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/00207720903230021"}}, {"title": "Cost-driven repair optimization of reconfigurable nanowire crossbar systems with clustered defects", "displayText": "Yadunandana Yellambalase, Minsu Choi, \"Cost-driven repair optimization of reconfigurable nanowire crossbar systems with clustered defects\", <em>Journal of Systems Architecture</em>, vol. 54, pp. 729, 2008, ISSN 13837621.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.sysarc.2008.01.001"}}, {"title": "IMPROVED REPRESENTATIVES FOR JUDGING UNREPAIRABILITY AND DECIDING ECONOMIC REPAIR SOLUTIONS OF MEMORIES", "displayText": "HSING-CHUNG LIANG, \"IMPROVED REPRESENTATIVES FOR JUDGING UNREPAIRABILITY AND DECIDING ECONOMIC REPAIR SOLUTIONS OF MEMORIES\", <em>Journal of Circuits Systems and Computers</em>, vol. 18, pp. 81, 2009, ISSN 0218-1266.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218126609004946"}}], "ieee": [{"title": "Improved representatives for unrepairability judging and economic repair solutions of memories", "displayText": "Hsing-Chung Liang, Le-Quen Tzeng, \"Improved representatives for unrepairability judging and economic repair solutions of memories\", <em>Memory Technology Design and Testing 2006. MTDT '06. 2006 IEEE International Workshop on</em>, pp. 6 pp.-15, 2006, ISSN 1087-4852.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1654575", "pdfSize": "221KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1654575"}}]}, "mlTime": "PT0.064601S", "title": "Identify unrepairability to speed-up spare allocation for repairing memories", "lastupdate": "2016-12-18T04:00:49", "ieeeCitationCount": "1", "nonIeeeCitationCount": "3"}, "references": [{"id": "ref1", "refType": "biblio", "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[29]."}, {"sec": "sec2a", "part": "1", "text": " The following gives an old strategy for identifying unrepairability [1], [3], [4], [15]."}, {"sec": "sec2a1", "part": "1", "text": " The following represents another strategy for unrepairabilitiy identification, which was initially judged for diagonal faulty cells [1]\u2013[3], and later was classified as an early-abort criterion [9], [14]."}], "title": "Testing repairable RAM's and mostly good memories", "order": "1", "text": "R. C. Evans, \"Testing repairable RAM's and mostly good memories\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 49-55, 1981."}, {"id": "ref2", "refType": "biblio", "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[29]."}, {"sec": "sec2a1", "part": "1", "text": " The following represents another strategy for unrepairabilitiy identification, which was initially judged for diagonal faulty cells [1]\u2013[2][3], and later was classified as an early-abort criterion [9], [14]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}, {"sec": "sec2a2", "part": "1", "text": " The following strategy can therefore be applied to identify the unrepairable fault maps [2], [3], [9], [14]."}], "title": "Defect analysis system speeds test and repair of redundant memories", "order": "2", "text": "M. Tarr, D. Boudreau, R. Murphy, \"Defect analysis system speeds test and repair of redundant memories\", <em>Electronics</em>, pp. 175-179, Jan. 1984."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4069585", "pdfSize": "9207KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This article describes a fault-driven algorithm that generates all possible repair solutions for a given bit failure pattern in a redundant RAM. Benefits of this approach include the ability to select repair solutions based on userdefined preferences (for example, fewest total elements invoked or fewest rows invoked). Perhaps the greatest advantage of this algorithm is its ability to generate solutions for any theoretically repairable die that would be deemed unrepairable by existing algorithms.", "documentLink": "/document/4069585"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[3][29]."}, {"sec": "sec2a", "part": "1", "text": " The following gives an old strategy for identifying unrepairability [1], [3], [4], [15]."}, {"sec": "sec2a1", "part": "1", "text": " The following represents another strategy for unrepairabilitiy identification, which was initially judged for diagonal faulty cells [1]\u2013[3], and later was classified as an early-abort criterion [9], [14]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}, {"sec": "sec2a2", "part": "1", "text": " The following strategy can therefore be applied to identify the unrepairable fault maps [2], [3], [9], [14]."}], "title": "A fault-driven comprehensive redundancy algorithm", "order": "3", "text": "J. Day, \"A fault-driven comprehensive redundancy algorithm\", vol. 2, no. 3, pp. 35-44, June 1985."}, {"id": "ref4", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4069930", "pdfSize": "8023KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Yield degradation from physical failures in large memories and processor arrays is of significant concern to semiconductor manufacturers. One method of increasing the yield for iterated arrays of memory cells or processing elements is to incorporate spare rows and columns in the die or wafer. These spare rows and columns can then be programmed into the array. The authors discuss the use of CAD approaches to reconfigure such arrays. The complexity of optimal reconfiguration is shown to be NP-comp...", "documentLink": "/document/4069930"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[4][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013\n[8], [26]."}, {"sec": "sec2a", "part": "1", "text": " The following gives an old strategy for identifying unrepairability [1], [3], [4], [15]."}, {"sec": "sec2a1", "part": "1", "text": " For very large memories & high-yield technology, this value is usually very large, and consequently makes Strategy 1 impractical for use [4]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}], "title": "Efficient spare allocation for reconfigurable arrays", "order": "4", "text": "S.-Y. Kuo, W. K. Fuchs, \"Efficient spare allocation for reconfigurable arrays\", pp. 24-31, Feb. 1987."}, {"id": "ref5", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5342", "pdfSize": "492KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors discuss the case in which the redundant elements are arranged in the form of spare rows and spare columns for a rectangular array. Redundant RAMs are examples of such case. A covering is set of rows and columns that are to be replaced by spare rows and spare columns so that all defective elements are replaced. The authors introduce the notion of a critical set, which is a maximum set of rows and columns that must be included in any minimum covering. They show that for a given pattern...", "documentLink": "/document/5342"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[5][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013[5]\n[8], [26]."}], "title": "Minimum fault coverage in reconfigurable arrays", "order": "5", "text": "N. Hasan, C. L. Liu, \"Minimum fault coverage in reconfigurable arrays\", <em>Proc. of IEEE Int. Symp. on Fault-Tolerant Computing</em>, pp. 348-353, 1988."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=73586", "pdfSize": "1122KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of determining whether a redundant random-access memory (RRAM) containing faulty memory cells can be repaired with spare rows and columns is discussed. The approach is to increase the number of working RRAMs manufactured per unit time, rather than per wafer, by presenting a computationally efficient algorithm for detecting unrepairability, a computationally efficient algorithm for optimal repair for special patterns of faulty memory cells and online algorithms that can find an optima...", "documentLink": "/document/73586"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[6][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013[6]\n[8], [26]."}, {"sec": "sec1b", "part": "1", "text": " On-line algorithms have also been proposed to decide a solution each time a faulty element is detected by the tester [6], [18], which can increase the throughput for the testing & repair of memories."}], "title": "Increased throughput for the testing and repair of RAM's with redundancy", "order": "6", "text": "R. W. Haddad, A. T. Dahbura, A. B. Sharma, \"Increased throughput for the testing and repair of RAM's with redundancy\", <em>IEEE Trans. on Computers</em>, vol. 40, no. 2, pp. 154-166, Feb. 1991."}, {"id": "ref7", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=199969", "pdfSize": "618KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A number of reconfiguration strategies have been proposed for increasing the yield of VLSI chips. In most cases the associated reconfiguration problems are NP-complete. Therefore, exhaustive search algorithms are generally used in order to find a solution when one exists. In this paper we present the notion of admissible sets and show how such sets can be used to significantly reduce the running time of many exhaustive search algorithms for reconfiguration problems. As an example, the authors fi...", "documentLink": "/document/199969"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[7][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013[7]\n[8], [26]."}], "title": "Fast search algorithms for reconfiguration problems", "order": "7", "text": "R. Libeskind-Hadas, C. L. Liu, \"Fast search algorithms for reconfiguration problems\", <em>Proc. of IEEE Int. Workshop on Defect and Fault Tolerance on VLSI Systems</em>, pp. 260-273, 1991."}, {"id": "ref8", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=224369", "pdfSize": "444KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Repairing a reconfigurable array by row and column replacement using SR rows and SC columns was shown to be an NP-complete problem. In order to reduce the search time, the authors propose to apply a three phase procedure. In the first phase, they suggest using a heuristic to find good, but not necessarily optimal, feasible cover for the faulty array. Only if the heuristic method fails to generate a feasible cover, the array is examined to find out whether it is repairable at all. If deemed econo...", "documentLink": "/document/224369"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[8][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013\n[8], [26]."}, {"sec": "sec1b", "part": "1", "text": " Some algorithms utilized a branch-and-bound procedure, e.g. constructing a binary-tree or ternary-tree structure for storing search information, to select faulty rows & columns for replacement [8]\u2013\n[12]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[17]."}], "title": "Fault spectrum analysis for fast spare allocation in reconfigurable arrays", "order": "8", "text": "W. Che, I. Koren, \"Fault spectrum analysis for fast spare allocation in reconfigurable arrays\", <em>Proc. of IEEE Int. Workshop on Defect and Fault Tolerance on VLSI Systems</em>, pp. 60-69, 1992."}, {"id": "ref9", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5341", "pdfSize": "437KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors present two approaches for the repair of large random access memory (RAM) in which redundant rows and columns have been added as spares. These devices, referred to as redundant RAMs, are repaired to achieve acceptable yields at production time. The first approach, namely, the faulty-line-covering technique, is a refinement of the fault-driven approach. This approach finds the optimal repair-solution within a smaller number of iterations than the fault-driven algorithm. Simulation res...", "documentLink": "/document/5341"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[9][29]."}, {"sec": "sec1b", "part": "1", "text": " Some algorithms utilized a branch-and-bound procedure, e.g. constructing a binary-tree or ternary-tree structure for storing search information, to select faulty rows & columns for replacement [8]\u2013[9]\n[12]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[17]."}, {"sec": "sec2a1", "part": "1", "text": " The following represents another strategy for unrepairabilitiy identification, which was initially judged for diagonal faulty cells [1]\u2013[3], and later was classified as an early-abort criterion [9], [14]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}, {"sec": "sec2a2", "part": "1", "text": " The following strategy can therefore be applied to identify the unrepairable fault maps [2], [3], [9], [14]."}, {"sec": "sec3c", "part": "1", "text": " In [9], [12], the effective coefficient \\$F(R_{i})\\$ for \\$R_{i}\\$ was defined as \\$F(R_{i})=N_{F0}+N_{F1}-N_{F2}\\$, guiding the selection priority of faulty lines for replacement."}, {"sec": "sec3c", "part": "1", "text": "In addition to correcting the coefficient of [9], [12], we also find that the heuristic algorithm BECA (Binary Effective Coefficient Algorithm) in [9], [12] requires more spare lines in some examples."}, {"sec": "sec3c", "part": "1", "text": " If comparing the effective coefficients of all faulty rows & columns to select the most important one for replacement each time, like the method LECA (Largest Effective Coefficient Algorithm) in [9], [12], it will cost much more time as shown in our simulation results in Section IV."}, {"sec": "sec4", "part": "1", "text": " We therefore implemented BECA, and LECA of [9], [12] for comparison."}, {"sec": "sec4", "part": "1", "text": " The authors of [9], [12] also proposed an algorithm called FLCA (Faulty-Line Covering Algorithm), which exhaustively searched solutions by using binary-tree exploration method."}], "title": "Approach for the repair of VLSI/WSI RRAM's by row/column deletion", "order": "9", "text": "F. Lombardi, W. K. Huang, \"Approach for the repair of VLSI/WSI RRAM's by row/column deletion\", <em>Proc. of IEEE Int. Symp. on Fault-Tolerant Computing</em>, pp. 342-347, 1988."}, {"id": "ref10", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/74382.74510"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[10][29]."}, {"sec": "sec1b", "part": "1", "text": " Some algorithms utilized a branch-and-bound procedure, e.g. constructing a binary-tree or ternary-tree structure for storing search information, to select faulty rows & columns for replacement [8]\u2013[10]\n[12]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}], "title": "On the repair of redundant RAMs", "order": "10", "text": "V. G. Hemmady, S. M. Reddy, \"On the repair of redundant RAMs\", <em>Proc. of 26th ACM/IEEE Design Automation Conf.</em>, pp. 710-713, 1989."}, {"id": "ref11", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=48980", "pdfSize": "339KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, a new approach to repairability/unrepairability detection for VLSI memory chips with redundancy is presented. An heuristic, yet efficient approach, is proposed. New conditions for detection are presented and fully analysed. These are based on a more accurate estimation of the regions of repairability and unrepairability. The main benefit of this approach is its practicality with respect to fast execution time and the improved ability to diagnose a VLSI redundant memory before the ...", "documentLink": "/document/48980"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[11][29]."}, {"sec": "sec1b", "part": "1", "text": " Some algorithms utilized a branch-and-bound procedure, e.g. constructing a binary-tree or ternary-tree structure for storing search information, to select faulty rows & columns for replacement [8]\u2013[11]\n[12]."}], "title": "Repairability/unrepairability detection techniques for yield enhancement of VLSI memories with redundancy", "order": "11", "text": "Y.-N. Shen, F. Lombardi, \"Repairability/unrepairability detection techniques for yield enhancement of VLSI memories with redundancy\", <em>IEE Proc. E&#821Computers and Digital Techniques</em>, vol. 137, no. 2, pp. 133-136, March 1990."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=46807", "pdfSize": "620KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Two approaches for the repair of large random access memory (RAM) devices in which redundant rows and columns are added as spares are presented. These devices, referred to as redundant RAMs, are repaired to achieve acceptable yield at manufacturing and production times. The first approach, the faulty line covering technique, is a refinement of the fault-driven approach. This approach finds the optimal repair solution within a smaller number of iterations than the fault-driven algorithm. The seco...", "documentLink": "/document/46807"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[12][29]."}, {"sec": "sec1b", "part": "1", "text": " Some algorithms utilized a branch-and-bound procedure, e.g. constructing a binary-tree or ternary-tree structure for storing search information, to select faulty rows & columns for replacement [8]\u2013\n[12]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[17]."}, {"sec": "sec3c", "part": "1", "text": " In [9], [12], the effective coefficient \\$F(R_{i})\\$ for \\$R_{i}\\$ was defined as \\$F(R_{i})=N_{F0}+N_{F1}-N_{F2}\\$, guiding the selection priority of faulty lines for replacement."}, {"sec": "sec3c", "part": "1", "text": "In addition to correcting the coefficient of [9], [12], we also find that the heuristic algorithm BECA (Binary Effective Coefficient Algorithm) in [9], [12] requires more spare lines in some examples."}, {"sec": "sec3c", "part": "1", "text": " If comparing the effective coefficients of all faulty rows & columns to select the most important one for replacement each time, like the method LECA (Largest Effective Coefficient Algorithm) in [9], [12], it will cost much more time as shown in our simulation results in Section IV."}, {"sec": "sec4", "part": "1", "text": " We therefore implemented BECA, and LECA of [9], [12] for comparison."}, {"sec": "sec4", "part": "1", "text": " The authors of [9], [12] also proposed an algorithm called FLCA (Faulty-Line Covering Algorithm), which exhaustively searched solutions by using binary-tree exploration method."}], "title": "New approaches for the repairs of memories with redundancy by row/column deletion for yield enhancement", "order": "12", "text": "W. K. Huang, Y.-N. Shen, F. Lombardi, \"New approaches for the repairs of memories with redundancy by row/column deletion for yield enhancement\", <em>IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems</em>, vol. 9, no. 3, pp. 323-328, March 1990."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=176142", "pdfSize": "413KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A generalized version of the repair-most method and an exhaustive search method for reconfigurable arrays in fabrication or compile time are presented. This generalized version of the method, instead of removing the most possible edges, as in the repair-most method, tries to 'free' as many vertices as possible in the bipartite graph at each iteration. Therefore, it can overcome the major defects of the repair-most one and runs in equal time complexity. This generalized method is called the free-...", "documentLink": "/document/176142"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[13][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[13][17]."}], "title": "Novel graph-based algorithms for reconfigurable arrays", "order": "13", "text": "S.-C. Fang, S.-J. Chen, S. L. Lee, \"Novel graph-based algorithms for reconfigurable arrays\", <em>Proc. of IEEE Int. Symp. on Circuits and Systems</em>, pp. 2866-2869, 1991."}, {"id": "ref14", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1270266", "pdfSize": "1322KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper describes a set of novel conditions that can be integrated in a computer-aided-testing (CAT) package for repair of redundant RAM's. A new approach is proposed; the innovative feature of this approach is the independence of analysis on the distribution of faulty bits in memory. This results in better exploitation of redundancy and efficient adaptability of this technique to various testing methods, such as the ones that employ region totalizers and fault counters. Algorithms that provi...", "documentLink": "/document/1270266"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[14][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[14][17]."}, {"sec": "sec2a1", "part": "1", "text": " The following represents another strategy for unrepairabilitiy identification, which was initially judged for diagonal faulty cells [1]\u2013[3], and later was classified as an early-abort criterion [9], [14]."}, {"sec": "sec2a2", "part": "1", "text": "Before using other strategies to identify unrepairable memories, it needs the following theorem, called forced-repair or must-repair criterion, to replace the specific faulty rows & columns [2] [3] [4], [9], [10], [14]."}, {"sec": "sec2a2", "part": "1", "text": " The following strategy can therefore be applied to identify the unrepairable fault maps [2], [3], [9], [14]."}, {"sec": "sec2a3", "part": "1", "text": "The first leading element (LE) of a fault map is defined in [14] as the first faulty cell, which has the least index column number on the first faulty row."}, {"sec": "sec2a3", "part": "1", "text": " The following strategy was therefore proposed in [14] to identify the unrepairability, in which the number \\${\\BBS}\\$ is that of LE of a fault map."}, {"sec": "sec2a4", "part": "1", "text": " Another faulty cell on the same row or column of a LE is called the row or column complement of the LE [14]."}, {"sec": "sec2a4", "part": "1", "text": " Consequently, the following strategy was further suggested to judge the unrepairability [14]."}, {"sec": "sec2a5", "part": "1", "text": "In [14], it was mentioned that this strategy needs the following limitation before being applied: if none of the uncovered column complements & uncovered row complements shares a column & a row."}, {"sec": "sec3", "part": "1", "text": " For example, after applying Strategy 4, if the memory cannot be judged unrepairable, i.e. \\$s\\leq UR_{A}+UC_{A}\\$, it can then be checked by using the following strategy [14]."}], "title": "On the repair of redundant RAM's", "order": "14", "text": "C.-L. Wey, F. Lombardi, \"On the repair of redundant RAM's\", <em>IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems</em>, vol. 1, no. 2, pp. 222-231, March 1987."}, {"id": "ref15", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=14903", "pdfSize": "338KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In the proposed approach, repair is implemented by deletion of either rows and/or columns on which faulty cells lie. These devices are commonly referred to as redundant memories, because redundant columns and rows are added. The repair algorithm is based on a fault counting technique and on a reduced covering approach. The innovative feature is that reduced covering permits an heuristic, but efficient criterion to be included in the selection of the rows and/or columns to be deleted.", "documentLink": "/document/14903"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[15][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[15][17]."}, {"sec": "sec2a", "part": "1", "text": " The following gives an old strategy for identifying unrepairability [1], [3], [4], [15]."}], "title": "Repair of redundant memories by reduced covering", "order": "15", "text": "F. Lombardi, D. Sciuto, \"Repair of redundant memories by reduced covering\", <em>Proc. of IEEE Int. Symp. on Circuits and Systems</em>, pp. 205-208, 1988."}, {"id": "ref16", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=47549", "pdfSize": "552KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "An approach to the repair of wafer-scale integration (WSI) memory chips with redundancy is proposed. This approach is based on the minimization of repair cost. Algorithms for cost-driven repair are presented. The algorithms can be executed either online (concurrently with the testing of the memory), or offline (at completion of testing). Analytical expressions for the repair cost under both these circumstances are given and proved. The algorithms are also perfect in the sense that they can corre...", "documentLink": "/document/47549"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[16][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[16][17]."}], "title": "Minimizing the cost of repairing WSI memories", "order": "16", "text": "W.-K. Huang, F. Lombardi, \"Minimizing the cost of repairing WSI memories\", <em>Proc. of IEEE Int. Conf. on Wafer Scale Integration</em>, pp. 183-192, 1989."}, {"id": "ref17", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=509914", "pdfSize": "655KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, we present a new class of linear time heuristic algorithms for reconfiguring RRAMs. One novel feature of our algorithms is that we are able to derive new bounds on the fault counts for fast detection of reparable and irreparable RRAMs. Another novel feature is that, based on our algorithms, we are able to identify a new polynomial time solvable instance of the reconfiguration problem. Empirical results indicate that our new class of algorithms is indeed fast and effective.", "documentLink": "/document/509914"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[17][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other methods defined cost functions, like counting faulty cells for each row and column, and used heuristics to determine the selection priority of faulty lines [8], [9], [12]\u2013[17]."}], "title": "A new class of efficient algorithms for reconfiguration of memory arrays", "order": "17", "text": "C. P. Low, H. W. Leong, \"A new class of efficient algorithms for reconfiguration of memory arrays\", <em>IEEE Trans. on Computers</em>, vol. 45, no. 5, pp. 614-618, May 1996."}, {"id": "ref18", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=73586", "pdfSize": "1122KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of determining whether a redundant random-access memory (RRAM) containing faulty memory cells can be repaired with spare rows and columns is discussed. The approach is to increase the number of working RRAMs manufactured per unit time, rather than per wafer, by presenting a computationally efficient algorithm for detecting unrepairability, a computationally efficient algorithm for optimal repair for special patterns of faulty memory cells and online algorithms that can find an optima...", "documentLink": "/document/73586"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[18][29]."}, {"sec": "sec1b", "part": "1", "text": " On-line algorithms have also been proposed to decide a solution each time a faulty element is detected by the tester [6], [18], which can increase the throughput for the testing & repair of memories."}], "title": "Increased throughput for the testing and repair of RAM's with redundancy", "order": "18", "text": "R. W. Haddad, A. T. Dahbura, \"Increased throughput for the testing and repair of RAM's with redundancy\", <em>Proc. of IEEE Int. Conf. on Computer-Aided Design</em>, pp. 230-233, 1987."}, {"id": "ref19", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=146699", "pdfSize": "636KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reconfiguration of memory arrays using spare rows and spare columns, a useful technique for yield enhancement of memories, is considered under a compound probabilistic model that shows clustering of faults. It is shown that the total number of faulty cells that can be tolerated when clustering occurs is larger than when faults are independent. It is shown that an optimal solution to the reconfiguration problem can be found in polynomial time for a special case of the clustering model. Efficient ...", "documentLink": "/document/146699"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[19][29]."}, {"sec": "sec1b", "part": "1", "text": " In [19] [20]\u2013[23], memory faults were considered to be dependent as clustered faults, which make it be more possible to find the repair solutions."}], "title": "On the reconfiguration of memory arrays containing clustered faults", "order": "19", "text": "D. M. Blough, \"On the reconfiguration of memory arrays containing clustered faults\", <em>Proc. of IEEE Int. Symp. on Fault-Tolerant Computing</em>, pp. 444-451, 1991."}, {"id": "ref20", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=199972", "pdfSize": "185KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reconfiguration of memory arrays using spare rows and spare columns has been shown to be a useful technique for yield enhancement. This problem is NP-hard in general and hence, previous work has focused on branch-and-bound algorithms for smaller problems and approximation algorithms for larger problems. Recently, the performances of several algorithms have been evaluated under a probabilistic model for memory defects that assumes faults in memory cells occur independently. In this paper, the aut...", "documentLink": "/document/199972"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[20][29]."}, {"sec": "sec1b", "part": "1", "text": " In [19] [20]\u2013[23], memory faults were considered to be dependent as clustered faults, which make it be more possible to find the repair solutions."}], "title": "Some results and open problems concerning memory reconfiguration under clustered fault models", "order": "20", "text": "D. M. Blough, A. Pelc, \"Some results and open problems concerning memory reconfiguration under clustered fault models\", <em>Proc. of IEEE Int. Workshop on Defect and Fault Tolerance on VLSI Systems</em>, pp. 292-295, 1991."}, {"id": "ref21", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=276221", "pdfSize": "352KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A graph-theoretic formulation for memory repair in the presence of clustered faults is presented. This approach is based on the use of variable-cell-size grids (VCS grids). As VCS grids can be represented by bipartite graphs, the reconfiguration problem for clustered faults can also be formulated as a vertex covering problem. Hence, graph-based reconfiguration algorithms developed by previous authors can be extended to exploit clustered fault distributions. Algorithms for memory repair that do n...", "documentLink": "/document/276221"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[21][29]."}, {"sec": "sec1b", "part": "1", "text": " In [19] [20]\u2013[21][23], memory faults were considered to be dependent as clustered faults, which make it be more possible to find the repair solutions."}], "title": "Repair of RAM's with clustered faults", "order": "21", "text": "B. Vinnakota, J. Andrews, \"Repair of RAM's with clustered faults\", <em>Proc. of IEEE Int. Conf. on Computer Design</em>, pp. 582-585, 1992."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=223671", "pdfSize": "1112KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reconfiguration of memory array using spare rows and spare columns, which has been shown to be a useful technique for yield enhancement of memories, is considered. A clustered failure model that adopts the center-satellite approach of F.J. Meyer and D.K. Pradhan (1989) is proposed and utilized to show that the total number of faulty cells that can be tolerated when clustering occurs is larger than when faults are independent. It is also shown that an optimal solution to the reconfiguration probl...", "documentLink": "/document/223671"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[22][29]."}, {"sec": "sec1b", "part": "1", "text": " In [19] [20]\u2013[22][23], memory faults were considered to be dependent as clustered faults, which make it be more possible to find the repair solutions."}], "title": "A clustered failure model for the memory array reconfiguration problem", "order": "22", "text": "D. M. Blough, A. Pelc, \"A clustered failure model for the memory array reconfiguration problem\", <em>IEEE Trans. on Computers</em>, vol. 42, no. 5, pp. 518-528, 1993."}, {"id": "ref23", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=510815", "pdfSize": "1029KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reconfiguration of memory arrays using spare rows and columns is useful for yield-enhancement of memories. This paper presents a reconfiguration algorithm (QRCF) for memories that contain clustered faults. QRCF operates in a branch and bound fashion similar to known optimal algorithms that require exponential time. However, QRCF repairs faults in clusters rather than individually. Since many faults are repaired simultaneously, the execution-time of QRCF does not become prohibitive even for large...", "documentLink": "/document/510815"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[23][29]."}, {"sec": "sec1b", "part": "1", "text": " In [19] [20]\u2013[23], memory faults were considered to be dependent as clustered faults, which make it be more possible to find the repair solutions."}], "title": "Performance evaluation of a reconfiguration-algorithm for memory arrays containing clustered faults", "order": "23", "text": "D. M. Blough, \"Performance evaluation of a reconfiguration-algorithm for memory arrays containing clustered faults\", <em>IEEE Trans. Rel.</em>, vol. 45, no. 2, pp. 274-284, June 1996."}, {"id": "ref24", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=85454", "pdfSize": "731KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors propose a parallel algorithm based on the artificial neural network model for solving the spare-allocation problem. The goal is to find a spare allocation which repairs all the faulty cells in the given faulty-cell map. The parallel algorithm requires 2n processing elements for the n*n faulty-cell map problem. The algorithm is verified by many simulation runs. Under the simulation the algorithm finds one of the near-optimum solutions in a nearly constant time with O(n) processors. Th...", "documentLink": "/document/85454"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[24][29]."}, {"sec": "sec1b", "part": "1", "text": " Spare allocation is in fact a two-dimensional problem, therefore being supposed to be processed in parallel for rows & columns by using neural networks [24]."}], "title": "A parallel algorithm for allocation of space cells on memory chips", "order": "24", "text": "N. Funabiki, Y. Takefuji, \"A parallel algorithm for allocation of space cells on memory chips\", <em>IEEE Trans. Rel.</em>, vol. 40, no. 3, pp. 338-346, August 1991."}, {"id": "ref25", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=122563", "pdfSize": "365KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of diagnosis and spare allocation for a random access memory (RAM) with coupling faults, utilizing spare rows and columns, is examined. It is shown that a coupling fault is repaired if its coupling cell is replaced by a spare row or its coupled cell is replaced by a spare row or column. By specifying both the coupled cell and coupling cell the amount of redundancy required to repair a given set of faults can be reduced. A diagnosis procedure is provided to locate stuck-at faults as w...", "documentLink": "/document/122563"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[25][29]."}, {"sec": "sec1b", "part": "1", "text": " In [25], [26], the authors considered coupling faults, and combined the processes of diagnosis & reconfiguration for them."}], "title": "Diagnosis and repair of memory with coupling faults", "order": "25", "text": "M.-F. Chang, W. K. Fuchs, J. H. Patel, \"Diagnosis and repair of memory with coupling faults\", <em>Proc. of IEEE Int. Conf. on Computer-Aided Design</em>, pp. 524-527, 1988."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=21142", "pdfSize": "792KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of diagnosis and spare allocation for random-access memory (RAM) with coupling faults is addressed. A number of spare allocation algorithms for RAM with row and column redundancy have recently been proposed. These procedures, however, have been restricted to repair stuck-at faults. The authors examine both diagnosis and repair of coupling faults in RAMs utilizing spare rows and columns. It is shown that a coupling fault is repaired if its coupling cell is replaced by utilizing a spar...", "documentLink": "/document/21142"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[26][29]."}, {"sec": "sec1b", "part": "1", "text": " Some of them used bipartite graphs to model the problem & searched repair solution by selecting vertices to cover all the edges [4]\u2013\n[8], [26]."}, {"sec": "sec1b", "part": "1", "text": " In [25], [26], the authors considered coupling faults, and combined the processes of diagnosis & reconfiguration for them."}], "title": "Diagnosis and repair of memory with coupling faults", "order": "26", "text": "M.-F. Chang, W. K. Fuchs, J. H. Patel, \"Diagnosis and repair of memory with coupling faults\", <em>IEEE Trans. on Computers</em>, vol. 38, no. 4, pp. 493-500, April 1989."}, {"id": "ref27", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=160001", "pdfSize": "773KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Reconfiguration of memory arrays with spare rows and columns has been shown to be an NP-complete problem. An analysis of average-case time complexities of several existing heuristics is presented, as well as a provably average-case polynomial-time algorithm for reconfiguration of memories with spare rows and columns. The algorithm runs faster than previous heuristics when the problem size is larger.", "documentLink": "/document/160001"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[27][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other papers adopted the probabilistic models to analyze the performance of proposed heuristics [27]\u2013\n[29]."}], "title": "Probabilistic analysis and algorithms for reconfiguration of memory arrays", "order": "27", "text": "W. Shi, W. K. Fuchs, \"Probabilistic analysis and algorithms for reconfiguration of memory arrays\", <em>IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems</em>, vol. 11, no. 9, pp. 1153-1160, September 1992."}, {"id": "ref28", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=224379", "pdfSize": "354KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of reconfiguring memory arrays using spare rows and spare columns has received a great deal of attention in recent years. However, most of the existing research assumes that the array contains only stuck-at faults. This paper, addresses the problem of reconfiguring memory arrays containing both stuck-at faults and coupling faults. The authors present a probabilistic model for studying this problem which is known to be NP-complete. In this model, they distinguish between two classes o...", "documentLink": "/document/224379"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[28][29]."}, {"sec": "sec1b", "part": "1", "text": " Some other papers adopted the probabilistic models to analyze the performance of proposed heuristics [27]\u2013[28]\n[29]."}], "title": "Probabilistic analysis of memory reconfiguration in the presence of coupling faults", "order": "28", "text": "C. P. Low, H. W. Leong, \"Probabilistic analysis of memory reconfiguration in the presence of coupling faults\", <em>Proc. of IEEE Int. Workshop on Defect and Fault Tolerance in VLSI Systems</em>, pp. 157-166, 1992."}, {"id": "ref29", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=503937", "pdfSize": "1097KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The problem of reconfiguring memory arrays using spare rows and spare columns is known to be NP-complete and has received a great deal of attention in recent years. For reason of cost effectiveness, it is desirable in practice to find minimum reconfiguration solutions. While numerous algorithms have been proposed to find minimum reconfiguration solutions, they all run in worst case exponential time complexities. On the other hand, existing heuristic algorithms with fast polynomial running time c...", "documentLink": "/document/503937"}, "context": [{"sec": "sec1b", "part": "1", "text": " Algorithms to determine how to replace these faulty lines, called reconfiguration or allocation algorithms, have been extensively proposed [1] [2]\u2013[29]."}, {"sec": "sec1b", "part": "1", "text": " Some other papers adopted the probabilistic models to analyze the performance of proposed heuristics [27]\u2013\n[29]."}], "title": "Minimum fault coverage in memory arrays: a fast algorithm and probability analysis", "order": "29", "text": "C. P. Low, H. W. Leong, \"Minimum fault coverage in memory arrays: a fast algorithm and probability analysis\", <em>IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems</em>, vol. 15, no. 6, pp. 681-690, June 1996."}, {"id": "ref30", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=114101", "pdfSize": "936KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The feasibility of implementing electronic neural networks as intelligent hardware for memory array repair is demonstrated. In particular, it is shown that the neural network control possesses a robust and degradable computing capability under various fault conditions. A yield analysis performed on 64K DRAMs shows that the yield can be improved from as low as 20% to near 99% owing to the self-repair design, with an overhead of no more than 7%. Simulation shows that the neural net algorithms are ...", "documentLink": "/document/114101"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[40]."}], "title": "A novel built-in self-repair approach to VLSI memory yield enhancement", "order": "30", "text": "P. Maazumder, J. S. Yih, \"A novel built-in self-repair approach to VLSI memory yield enhancement\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 833-841, 1990."}, {"id": "ref31", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=238427", "pdfSize": "979KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A memory architecture with the capability of self-testing and self-repairing is presented. The contributions of this memory architecture are twofold. First, because it incorporates self-testing and self-repairing structures, the memory chip can perform tests, locate faults, and repair itself without any external assistance from either test engineers or test equipment. This will greatly improve the functional yield and reduce the production cost. Second, the hierarchical organization used to achi...", "documentLink": "/document/238427"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[31][40]."}], "title": "Design of a self-testing and self-repairing structure for highly hierarchical ultra-large capacity memory chips", "order": "31", "text": "T. Chen, G. Sunada, \"Design of a self-testing and self-repairing structure for highly hierarchical ultra-large capacity memory chips\", <em>IEEE Trans. on Very Large Scale Integration (VLSI) Systems</em>, vol. 1, no. 2, pp. 88-97, June 1993."}, {"id": "ref32", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=211525", "pdfSize": "885KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A method of built-in self-diagnosis (BISD) for repairable, embedded static RAMs (SRAMs) is presented. The BISD circuit, with self-repair, requires about 5% extra area in a 64-kb SRAM. The circuit contains a small reduced-instruction-set processor, which executes diagnosis algorithms stored in a ROM. These algorithms employ hybrid serial/parallel operations when external repair is available or modular operations when self-repair is required. The algorithms, hardware design, and design costs and t...", "documentLink": "/document/211525"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[32][40]."}], "title": "Built-in self-diagnosis for repairable embedded RAMs", "order": "32", "text": "R. Treuer, V. K. Agrawal, \"Built-in self-diagnosis for repairable embedded RAMs\", vol. 10, no. 2, pp. 24-33, June 1993."}, {"id": "ref33", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=619392", "pdfSize": "593KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, an efficient method to achieve defect-tolerance with embedded single-port word-oriented RAM is presented. The defect tolerance of the RAM is based on a hierarchical redundancy technique employing a self-test and self-reconfiguration logic and is applicable to any standard RAM device. The presented approach is based on a two-level redundancy. Therefore, the memory is split in b smaller RAM blocks of equal size plus one redundant block. Each of those b+1 blocks is equipped with four...", "documentLink": "/document/619392"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[33][40]."}], "title": "A defect-tolerant DRAM employing a hierarchical redundancy scheme, built-in self-test and self-reconfiguration", "order": "33", "text": "D. Niggemeyer, J. Otterstedt, M. Redeker, \"A defect-tolerant DRAM employing a hierarchical redundancy scheme built-in self-test and self-reconfiguration\", <em>Proc. of IEEE Workshop on Memory Technology Design and Testing</em>, pp. 33-40, 1997-August."}, {"id": "ref34", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=743312", "pdfSize": "622KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "As the density of embedded memory increases, manufacturing yields of integrated circuits can reach unacceptable limits. Normal memory testing operations require BIST to effectively deal with problems such as limited access and \"at speed\" testing. In this paper we describe a novel methodology that extends the BIST concept to diagnosis and repair utilizing redundant components. We describe an application using redundant columns and accompanying algorithms. It allows for the autonomous repair of de...", "documentLink": "/document/743312"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[34][40]."}], "title": "Built in self repair for embedded high density SRAM", "order": "34", "text": "I. Kim, Y. Zorian, G. Komoriya, H. Pham, F. P. Higgins, J. L. Lewandowski, \"Built in self repair for embedded high density SRAM\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 1112-1119, 1998."}, {"id": "ref35", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=821012", "pdfSize": "327KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents an efficient repair algorithm for embedded memory with multiple redundancies and a BISR (built-in self-repair) circuit using the proposed algorithm. While there are many repair algorithms which have good repair capability, their complexity is too high to implement. We present a repair algorithm which has good repair capability with little hardware overhead.", "documentLink": "/document/821012"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[35][40]."}], "title": "A BISR (built-in self-repair) circuit for embedded memory with multiple redundancies", "order": "35", "text": "H. Kim, D.-S. Yi, J.-Y. Park, C.-H. Cho, \"A BISR (built-in self-repair) circuit for embedded memory with multiple redundancies\", <em>Proc. of Int. Conf. on VLSI and CAD</em>, vol. VL-P22, pp. 602-605, 1999."}, {"id": "ref36", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=805645", "pdfSize": "661KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "An innovative self-test and self-repair technique supports built-in self-test and built-in self-repair of large embedded RAM arrays with spare rows and columns. The technique generates and analyzes the required failure bitmap information on the fly during self-test and then automatically repairs and verifies the repaired RAM arrays.", "documentLink": "/document/805645"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[36][40]."}, {"sec": "sec4", "part": "1", "text": " Some redundancy designs suggested that the spare lines can be partitioned into sessions, and/or they are grouped in one block for replacement [36], [38], [40], which are not considered yet in our algorithms."}], "title": "An algorithm for row-column self-repair of RAM's and its implementation in the alpha 21&#820264", "order": "36", "text": "D. K. Bhavsar, \"An algorithm for row-column self-repair of RAM's and its implementation in the alpha 21&#820264\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 311-318, 1999."}, {"id": "ref37", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=805644", "pdfSize": "852KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a built-in self-test (BIST) scheme, which consists of a flexible pattern generator and a practical on-macro two-dimensional redundancy analyzer, for GHz embedded SRAMs. In order to meet the system requirements and to detect a wide variety of faults or performance degradation resulting from recent technology advances, the microcode-based pattern generator can generate flexible patterns. A practical new repair algorithm for the Finite State Machine (FSM)-based on-macro redundan...", "documentLink": "/document/805644"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[37][40]."}, {"sec": "sec4", "part": "1", "text": " This somewhat exceeds the normal sizes of memories usually integrated with blocks of smaller sizes [37], [38]."}], "title": "Built-in self-test for GHz embedded SRAM's using flexible pattern generator and new repair algorithm", "order": "37", "text": "S. Nakahara, K. Higeta, M. Kohno, T. Kawamura, K. Kakitani, \"Built-in self-test for GHz embedded SRAM's using flexible pattern generator and new repair algorithm\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 301-310, 1999."}, {"id": "ref38", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=894250", "pdfSize": "504KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A new practical built-in self-repair analyzer algorithm for embedded DRAMs (e-DRAM) achieves 100% detection ability of the repairable chips with 1% area penalty of the target 32 Mb embedded DRAM by 4 parallel analyzers. It works at as fast as 500 MHz, well beyond targeted e-DRAMs' maximum operation speed around 200 MHz+.", "documentLink": "/document/894250"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[38][40]."}, {"sec": "sec4", "part": "1", "text": " This somewhat exceeds the normal sizes of memories usually integrated with blocks of smaller sizes [37], [38]."}, {"sec": "sec4", "part": "1", "text": " Some redundancy designs suggested that the spare lines can be partitioned into sessions, and/or they are grouped in one block for replacement [36], [38], [40], which are not considered yet in our algorithms."}], "title": "A built-in self-repair analyzer (CRESTA) for embedded DRAMs", "order": "38", "text": "T. Kawagoe, J. Ohtani, M. Niiro, T. Ooishi, M. Hamada, H. Hidaka, \"A built-in self-repair analyzer (CRESTA) for embedded DRAMs\", <em>Proc. of IEEE Int. Test Conf.</em>, pp. 567-574, 2000."}, {"id": "ref39", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=945228", "pdfSize": "362KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "An approach for design and evaluation of redundancy analysis algorithms based on vectors of preferences is proposed for memory devices with spare elements. Experiments on the application of the new algorithms for self-test and repair (STAR) type SRAM memories have shown the efficiency of the proposed approach.", "documentLink": "/document/945228"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[39][40]."}], "title": "An approach for evaluation of redundancy analysis algorithms", "order": "39", "text": "S. Shoukourian, V. Vardanian, Y. Zorian, \"An approach for evaluation of redundancy analysis algorithms\", <em>Proc. of IEEE Workshop on Memory Technology Design and Testing</em>, pp. 51-55, 2001."}, {"id": "ref40", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1261044", "pdfSize": "264KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "CRESTA is a built-in self-repair analyzer (BISRA) used for repair of bit-oriented memories, which can repair all repairable bit-oriented memories with available spare resource. This paper enhances CRESTA to support embedded word-oriented memories. Within each read cycle of at-speed memory BIST, the analyzer is able to handle multiple-bit failure in a word-oriented memory. Furthermore, to reduce area overhead, the proposed analyzer is reconfigurable to process all repair strategies in serial. To ...", "documentLink": "/document/1261044"}, "context": [{"sec": "sec1b", "part": "1", "text": " As system-on-a-chip designs & embedded memories are becoming more popular, built-in self-repair (BISR) methods have also been widely discussed [30]\u2013[40]."}, {"sec": "sec4", "part": "1", "text": " Some redundancy designs suggested that the spare lines can be partitioned into sessions, and/or they are grouped in one block for replacement [36], [38], [40], which are not considered yet in our algorithms."}], "title": "At-speed built-in self-repair analyzer for embedded word-oriented memories", "order": "40", "text": "X. Du, S. M. Reddy, W.-T. Cheng, J. Rayhawk, N. Mukherjee, \"At-speed built-in self-repair analyzer for embedded word-oriented memories\", <em>Proc. of the 17th IEEE Int. Conf. on VLSI Design</em>, pp. 895-900, 2004."}], "arnumber": "1435730"}