{"arnumber": "1360102", "details": {"title": "Recovery schemes for mesh arrays utilizing dedicated spares", "volume": "53", "keywords": [{"type": "IEEE Keywords", "kwd": ["Costs", "Switches", "Fault tolerance", "Performance evaluation", "Manufacturing", "Fabrication", "System testing", "Digital signal processing", "Signal processing", "Image processing"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["image processing", "system recovery", "parallel processing", "parallel architectures", "fault tolerant computing", "multiprocessing systems", "array signal processing", "fault diagnosis"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["subunit communication", "mesh array", "dedicated spare node", "permanent-fault-tolerant processing array", "online transient-error recovery process", "permanent-fault tolerance", "spares-based method", "idling spare commissioning", "periodic on-line testing", "recovery point validation", "high radiation", "job completion cost", "burst error", "digital signal processing", "job completion time", "image processing", "data set", "redundant computation", "built-in hardware", "system timing"]}, {"type": "Author Keywords ", "kwd": ["processing arrays", "Error recovery", "fault-tolerance"]}], "issue": "4", "link": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "authors": [{"affiliation": "Dept. of Technol., Buffalo State Coll., NY, USA", "bio": {"p": ["Stephanie Goldberg has her B.S., M.S., and Ph.D. degrees in Electrical and Computer Engineering from SUNY at Buffalo. She is currently an Associate Professor in the Engineering Technology program at Buffalo State College. She has ten years of experience as an Engineer in industry developing microprocessor code for flight inspection equipment and designing automatic test equipment programs to detect and diagnose faulty ICs."]}, "name": "S. Goldberg"}, {"bio": {"p": ["Shambhu J. Upadhyaya received his Ph.D. degree in Electrical and Computer Engineering from the University of Newcastle, Australia in 1987. He is currently an Associate Professor of Computer Science and Engineering at the University at Buffalo. He is a recipient of the 2000\u201301 IBM Faculty Partner Fellowship. His research interests are VLSI testing, fault diagnosis, fault tolerant computing, reliability analysis, information assurance techniques and diagnostic reasoning. He is an Associate Editor of IEEE Transactions onComputers and is a member of the editorial board of the International Journal on Reliability, Quality, and Safety Engineering published by the World Scientific Publishers. He is a Senior Member of IEEE."]}, "name": "S.J. Upadhyaya"}, {"bio": {"p": ["W. Kent Fuchs received the B.S.E. degree from Duke University, M.Div. degree from Trinity Evangelical Divinity School, and the Ph.D. in Electrical Engineering from the University of Illinois. He is Dean of the College of Engineering, Cornell University. He was formerly Head of the School of Electrical and Computer Engineering, Purdue University and the Michael J. and Catherine R. Birck Distinguished Professor. Before serving at Purdue, he was Professor in the Department of Electrical and Computer Engineering and the Coordinated Science Laboratory, University of Illinois. His research interests include dependable computing, testing, and failure diagnosis. He is a Fellow of the IEEE and a Fellow of the ACM."]}, "name": "W.K. Fuchs"}], "publisher": "IEEE", "doi": "10.1109/TR.2004.837704", "abstract": "In this paper, new schemes are presented in which the spare nodes of a permanent-fault-tolerant processing array are utilized in their idling state to aid in an online transient-error recovery process. Though spares-based methods are well-known solutions to permanent-fault tolerance, the cost of these solutions and the idling spare capacity during normal operation have limited their widespread use. Manufacturers must be offered fault tolerance solutions which provide useful work at all times. We propose the enhanced utility of spares-based methods by commissioning idling spares (those spares remaining after fabrication and subsequent replacement of faulty units) to perform transient-error recovery tasks. Our scheme will commission idling spares to perform periodic on-line testing (verifying whether system is functioning correctly), and recovery point validation during normal operation. When an error occurs, the spare will perform additional testing to select recovery points. Transient-error recovery is required in harsh environments, such as high radiation, where frequent transient errors are unavoidable. In these environments, the cost of job completion can be extremely high without some form of error recovery. Successful job completion can be attained in environments frequented by error bursts by identifying reliable data through the process of periodic on-line testing. We apply our scheme to a mesh array architecture that has applications in digital signal processing. Simulations highlight the overhead of our schemes in terms of job completion time in environments burdened with frequent transient random errors and burst errors. The proposed strategies for recovery are limited to systems of regular structure. There are many applications in signal and image processing that require array processing in which the various nodes perform similar operations with different data sets. Therefore, it is not necessary to switch the application algorithms for the spares when they perform redundant computation in a staggered mode. While this is a significant feature, there is a small cost associated with presenting the same data to a node as well as a spare. With built-in hardware and reconfiguration switches in the fault tolerant arrays, we believe this cost will be insignificant. Extension of our work to more general systems requires consideration of many issues including system timing, and sub-unit communication & dependence. This is a problem for future research."}, "references": [{"title": "Arrays for discrete Fourier transform", "context": [{"text": " The mesh array is considered for its regular structure, and useful applications in digital signal processing [1].", "sec": "sec4", "part": "1"}], "order": "1", "id": "ref1", "text": "A. Antola, \"Arrays for discrete Fourier transform\", <em>EURSIP</em>, pp. 915-918, 1989.", "refType": "biblio"}, {"title": "Probability of correctness of processor-array outputs using periodic concurrent error detection", "context": [{"text": " The work by Chen and Fuchs [2] shows that concurrent periodic testing (error detection) can provide error recovery in environments experiencing error bursts.", "sec": "sec3", "part": "1"}, {"text": " A brief discussion of concurrent testing in transient error environments [2] is provided in Section III.", "sec": "sec3", "part": "1"}, {"text": "In [2], periodic concurrent testing leads to the determination of erroneous data intervals surrounding detected errors.", "sec": "sec5", "part": "1"}, {"text": "Concurrent testing in [2] takes place for \\$N\\$ clock cycles during every period of \\$M\\$ clock cycles.", "sec": "sec5", "part": "1"}, {"text": "Two intervals are defined in [2].", "sec": "sec5", "part": "1"}, {"text": " A periodic, concurrent testing approach [2] to determine intervals of corrupt data in such an environment was discussed in Section III.", "sec": "sec6e", "part": "1"}, {"text": " Intervals of corrupt data (\\$K\\$) surrounding an error were estimated in [2] based on a user-supplied confidence level.", "sec": "sec6e", "part": "1"}], "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Processor arrays, featuring modularity, regular interconnection, and high parallelism, are well suited for VLSI/WSI implementation and specific applications with high computational requirements. Error detection and recovery are important for some applications of processor arrays. Concurrent error detection (CED) techniques, which check normal system operations, are designed to detect errors caused by transient and intermittent faults, However, CED techniques typically suffer from costly hardware...", "documentLink": "/document/510816", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=510816", "pdfSize": "1101KB"}, "id": "ref2", "text": "P. P. Chen, \"Probability of correctness of processor-array outputs using periodic concurrent error detection\", <em>IEEE Trans. Rel.</em>, vol. 45, no. 2, pp. 285-296, June 1996.", "refType": "biblio"}, {"title": "Spare capacity as a means of fault detection and diagnosis in multiprocessor systems", "context": [{"text": " Diagnosis tasks for idling spares of a variable-load multiprocessor system are examined in [3] and [9], where processors duplicate current jobs during times of light computational load.", "sec": "sec3", "part": "1"}], "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A technique for detecting and diagnosing faults at the processor level in a multiprocessor system is described. A process is assigned whenever possible to two processors: the processor to which it would normally be assigned (primarily) and an additional processor that would otherwise be idle (secondary). Two strategies are described and analyzed: one that is preemptive and another that is nonpreemptive. It is shown that, for moderately loaded systems, a sufficient percentage of processes can be ...", "documentLink": "/document/24300", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=24300", "pdfSize": "1006KB"}, "id": "ref3", "text": "A. T. Dahbura, \"Spare capacity as a means of fault detection and diagnosis in multiprocessor systems\", <em>IEEE Trans. Comput.</em>, vol. 38, no. 6, pp. 881-891, June 1989.", "refType": "biblio"}, {"title": "Utilizing spares in multichip modules for the dual function of fault coverage and fault diagnosis", "context": [{"text": "A method was proposed in our previous work [4] to commission idling spares to perform diagnosis jobs (operations that would lead to identifying faulty PE) during normal runtime.", "sec": "sec3", "part": "1"}, {"text": "In the scheme of [4], the dedicated spares of a processing array replicate array node tasks, and the results are compared, giving the array self-diagnosis capability.", "sec": "sec3", "part": "1"}, {"text": " In [4] the computational load is fixed.", "sec": "sec3", "part": "1"}, {"text": " The main contribution of the current paper is the extension of the diagnosis scheme discussed in [4] to develop rollback recovery methods, where spares are further utilized to aid in the recovery from transient faults.", "sec": "sec3", "part": "1"}, {"text": "In [4], comparison testing between PE (processing elements, which are identical) and spares is done on a periodic basis.", "sec": "sec3", "part": "1"}, {"text": " In this paper, the periodic on-line testing scheme of [4], when applied to a processing array in an environment of frequent transient errors, can assist in recovering from those errors.", "sec": "sec3", "part": "1"}, {"text": "In [4], square mesh arrays employ idling local spare nodes to perform diagnosis tasks during normal runtime.", "sec": "sec4", "part": "1"}, {"text": " In our configuration of repairable processing arrays [4], the array is divided into 2\u00d72 subarrays called small modules (SM), and each SM is assigned a level-1 spare SP1.", "sec": "sec4", "part": "1"}, {"text": "There are 2 diagnosis strategies presented in [4], one of which keeps the system on-line when a fault is detected in order to collect more comparison information until the fault can be isolated.", "sec": "sec4", "part": "1"}, {"text": "The scheme presented in [4] utilizes idling spares for concurrent array diagnosis of permanent faults.", "sec": "sec6", "part": "1"}, {"text": "To further utilize the spares for error recovery, we will expand the strategy presented in [4].", "sec": "sec6", "part": "1"}, {"text": " To isolate the faulty node, the diagnosis strategy of [4] called for the operation to stop for 1 task time, allowing SP2 to repeat the failed task.", "sec": "sec6b", "part": "1"}], "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Defining a dual role for spare processing elements (PEs) in reliability-challenged processing arrays is the major focus of the paper. The paper also explores a practical way to include reconfiguration hardware in single-package arrays. The implementation of array processor systems may include spare PE's for fault tolerance. These systems typically require a host for fault diagnosis, while the healthy spares sit idle. It is proposed to utilize the idling spare PEs for purposes of fault diagnosis,...", "documentLink": "/document/476957", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=476957", "pdfSize": "625KB"}, "id": "ref4", "text": "S. Goldberg, S. J. Upadhyaya, \"Utilizing spares in multichip modules for the dual function of fault coverage and fault diagnosis\", <em>Proc. IEEE Int. Workshop on Defect and Fault Tolerance in VLSI</em>, pp. 234-242, 1995.", "refType": "biblio"}, {"title": "Depend: A design environment for prediction and evaluation of system dependability", "context": [{"text": " The simulator provides exponentially distributed error interarrival time \\$M\\$ using DEPEND [5], a tool for the dependability analysis of computer systems.", "sec": "sec7", "part": "1"}, {"text": " The simulator tool [5] is used to provide a 2-phase hyperexponential error interarrival time which models burst errors.", "sec": "sec7a", "part": "1"}], "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The development of DEPEND, an integrated simulation environment for the design and dependability analysis of fault-tolerant systems, is described. DEPEND models both hardware and software components at a functional level, and allows automatic failure injection to assess system performance and reliability. It relieves the user of the work needed to inject failures, maintain statistics, and output reports. The automatic failure injection scheme is geared toward evaluating a system under high stres...", "documentLink": "/document/111267", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=111267", "pdfSize": "432KB"}, "id": "ref5", "text": "K. K. Goswami, R. K. Iyer, \"Depend: A design environment for prediction and evaluation of system dependability\", <em>9th Digital Avionics Systems Conf.</em>, 1990.", "refType": "biblio"}, {"title": "Hardware-related software errors: Measurement and analysis", "context": [{"text": " In harsh environments, where frequent transient errors are expected due to power supply jitter, noise and/or radiation [6], the cost of starting a failed job at the beginning can have significant impact in terms of the time-to-complete the job.", "sec": "sec3", "part": "1"}], "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper describes an analysis of hardware-related software (HW/SW) errors on an MVS/SP operating system at Stanford University. The analysis procedure demonstrates a methodology for evaluating the interaction between hardware and software as it relates to system reliability. The paper examines the operating system's handling of HW/SW errors and also the effectiveness of recovery management. Nearly 35 percent of all observed software failures were found to be hareware-related. The analysis sho...", "documentLink": "/document/1701991", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1701991", "pdfSize": "3083KB"}, "id": "ref6", "text": "R. K. Iyer, P. Velardi, \"Hardware-related software errors: Measurement and analysis\", <em>IEEE Trans. Software Eng.</em>, vol. SE-11, no. 2, pp. 223-231, Feb. 1985.", "refType": "biblio"}, {"title": "A comparison connection assignment for self-diagnosis of multiprocessor systems", "context": [{"text": " The output response of the tested PE and the spare are compared to produce a test syndrome [7].", "sec": "sec4", "part": "1"}], "order": "7", "id": "ref7", "text": "J. Maeng, M. Malek, \"A comparison connection assignment for self-diagnosis of multiprocessor systems\", <em>Proc. 11th Int.Conf. Fault-Tolerant Comput.</em>, pp. 173-175, 1981.", "refType": "biblio"}, {"title": "Interstitial redundancy: An area-efficient fault tolerance scheme for large-area VLSI processor networks", "context": [{"text": " However, existing fault tolerant schemes [8] call for spares to idle until required to replace a module.", "sec": "sec3", "part": "1"}, {"text": " This is contrary to most existing schemes, for example, [8] where a single level of spares does not permit diagnosis.", "sec": "sec4", "part": "1"}], "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In the proposed scheme, spare PEs are located at interstitial sites within the array. Each spare can functionally replace any one of the neighboring primary PEs that are connected to it. Because spares are physically close to the PE that they replace, restructured interconnections are short, minimizing performance degradation. This structure can incorporate different levels of redundancy depending on how many of the interstitial sites are used to locate spares, and also how many spares are place...", "documentLink": "/document/8705", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=8705", "pdfSize": "1195KB"}, "id": "ref8", "text": "A. D. Singh, \"Interstitial redundancy: An area-efficient fault tolerance scheme for large-area VLSI processor networks\", <em>IEEE Trans. Comput.</em>, vol. C-37, pp. 1398-1410, Nov. 1988.", "refType": "biblio"}, {"title": "Efficient utilization of spare capacity for fault detection and location in multiprocessor systems", "context": [{"text": " Diagnosis tasks for idling spares of a variable-load multiprocessor system are examined in [3] and [9], where processors duplicate current jobs during times of light computational load.", "sec": "sec3", "part": "1"}], "order": "9", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "One scheme for detecting faults at the processor level in a multiprocessor system (see A. Dahbura et al., 1989) works by running secondary versions of jobs on the unused, or spare, processors of the system. The authors build upon this scheme and propose three new multiprocessor allocation strategies that run a viable number of versions per job. These schemes permit online detection and, in some cases, location of faulty processors in a system, without degrading its delay/throughput performance. ...", "documentLink": "/document/243591", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=243591", "pdfSize": "687KB"}, "id": "ref9", "text": "S. Tridandapani, A. K. Somani, \"Efficient utilization of spare capacity for fault detection and location in multiprocessor systems\", <em>Proc. FTCS</em>, pp. 440-447, 1992.", "refType": "biblio"}], "citations": {"paperCitations": {}, "patentCitationCount": "0", "contentType": "periodicals", "isEarlyAccess": false, "lastupdate": "2016-08-04T15:00:17", "publisher": "IEEE", "title": "Recovery schemes for mesh arrays utilizing dedicated spares", "nonIeeeCitationCount": "0", "publicationNumber": "24", "formulaStrippedArticleTitle": "Recovery schemes for mesh arrays utilizing dedicated spares", "mediaPath": "/mediastore/IEEE/content/media/24/29832/1360102", "mlTime": "PT0.031192S", "ieeeCitationCount": "0"}}