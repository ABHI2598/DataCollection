{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/1028403/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "A software-reliability growth model for N-version programming systems", "doi": "10.1109/TR.2002.801853", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "1028403", "endPage": "321", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/22091/1028403", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "22091", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "311", "standardTitle": "A software-reliability growth model for N-version programming systems", "publicationDate": "Sept. 2002", "pdfPath": "/iel5/24/22091/01028403.pdf", "mlTime": "PT0.1249S", "publicationNumber": "24", "copyrightYear": "2002", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Xiaolin Teng is working toward completion of his Ph.D. in industrial engineering at Rutgers University. He received his M.S. (1994) in electrical engineering from Tsinghua University. His research interests include system reliability modeling, network reliability, and fault-tolerant computing."]}, "affiliation": "Dept. of Ind. Eng., Rutgers Univ., Piscataway, NJ, USA", "name": " Xiaolin Teng"}, {"bio": {"p": ["Hoang Pham is an Associate Professor of the Department of Industrial Engineering at Rutgers University. Before joining Rutgers, he was a senior engineering specialist with the Boeing Company in Seattle, and the Idaho National Engineering Laboratory. His research interests include reliability modeling, software reliability, maintenance, environmental risk assessment, and fault-tolerant computing. He is the author of the book, Software Reliability, editor of 10 volumes, and the author of over 60 journal articles. He received his B.S. in mathematics and in computer science, both with high honors, from Northeastern Illinois University; his M.S. in statistics from the University of Illinois at Urbana-Champaign; and his M.S. and Ph.D. in industrial engineering from the State University of New York at Buffalo.", "He is editor-in-chief of the Int. J. Reliability, Quality, and Safety Engineering. He was a guest editor of several journals, including IEEE TRANSACTIONS ON RELIABILITY, J. Systems and Software, Int. J. Systems Science and IEEE Communications. He is the editor of a 2001 book, Recent Advances in Reliability and Quality Engineering, by World Scientific, and is editing the Springer Handbook of Reliability Engineering. He has edited technology series books, Fault-Tolerant Software Systems: Techniques and Applications, and Software Reliability and Testing, published by IEEE Computer Society Press. He has been conference chairperson of many international conferences, and is conference chairperson of the Eighth ISSAT International Conference on Reliability and Quality in Design. He is a Senior Member of IEEE and IIE. He is listed in Who's Who in the World, Who's Who in Science and Engineering, and Who's Who in America."]}, "affiliation": "Dept. of Ind. Eng., Rutgers Univ., Piscataway, NJ, USA", "name": " Hoang Pham"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-08-04T09:46:12", "abstract": "This paper presents a NHPP-based SRGM (software reliability growth model) for NVP (N-version programming) systems (NVP-SRGM) based on the NHPP (nonhomogeneous Poisson process). Although many papers have been devoted to modeling NVP-system reliability, most of them consider only the stable reliability, i.e., they do not consider the reliability growth in NVP systems due to continuous removal of faults from software versions. The model in this paper is the first reliability-growth model for NVP systems which considers the error-introduction rate and the error-removal efficiency. During testing and debugging, when a software fault is found, a debugging effort is devoted to remove this fault. Due to the high complexity of the software, this fault might not be successfully removed, and new faults might be introduced into the software. By applying a generalized NHPP model into the NVP system, a new NVP-SRGM is established, in which the multi-version coincident failures are well modeled. A simplified software control logic for a water-reservoir control system illustrates how to apply this new software reliability model. The s-confidence bounds are provided for system-reliability estimation. This software reliability model can be used to evaluate the reliability and to predict the performance of NVP systems. More application is needed to validate fully the proposed NVP-SRGM for quantifying the reliability of fault-tolerant software systems in a general industrial setting. As the first model of its kind in NVP reliability-growth modeling, the proposed NVP SRGM can be used to overcome the shortcomings of the independent reliability model. It predicts the system reliability more accurately than the independent model and can be used to help determine when to stop testing, which is a key question in the testing and debugging phase of the NVP system-development life cycle.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "1028403", "xplore-issue": "22091", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=22091", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=A+software-reliability+growth+model+for+N-version+programming+systems&isbn=&publicationDate=Sept.+2002&author=+Xiaolin+Teng&ContentID=10.1109/TR.2002.801853&orderBeanReset=true&startPage=311&endPage=321&volumeNum=51&issueNum=3", "citationCount": "26", "keywords": [{"kwd": ["Software reliability", "Predictive models", "Life testing", "System testing", "Software testing", "Software debugging", "Logic", "Control system synthesis", "Application software", "Fault tolerant systems"], "type": "IEEE Keywords"}, {"kwd": ["control engineering computing", "software reliability", "programming", "stochastic processes", "software fault tolerance", "parameter estimation", "level control"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["system-development life cycle", "software-reliability growth model", "N-version programming systems", "nonhomogeneous Poisson process", "continuous faults removal", "error-introduction rate", "error-removal efficiency", "software fault", "debugging", "multi-version coincident failures", "software control logic", "water-reservoir control system", "s-confidence bounds", "system-reliability estimation", "fault-tolerant software systems", "industrial setting", "independent reliability model"], "type": "INSPEC: Non-Controlled Indexing"}], "issue": "3", "chronOrPublicationDate": "Sept. 2002", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "A software-reliability growth model for N-version programming systems", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "51", "accessionNumber": "7377110"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/22091/1028403", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "A software-reliability growth model for N-version programming systems", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Trivariate Bernoulli distribution with application to software fault tolerance", "displayText": "Lance Fiondella, Panlop Zeephongsekul, \"Trivariate Bernoulli distribution with application to software fault tolerance\", <em>Annals of Operations Research</em>, pp. , 2015, ISSN 0254-5330.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10479-015-1798-4"}}, {"title": "A cost model for N-version programming with imperfect debugging", "displayText": "T Bhaskar, U D Kumar, \"A cost model for N-version programming with imperfect debugging\", <em>Journal of the Operational Research Society</em>, vol. 57, pp. 986, 2006, ISSN 01605682.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1057/palgrave.jors.2602061"}}, {"title": "Reliability growth modeling and optimal release policy under fuzzy environment of an N-version programming system incorporating the effect of fault removal efficiency", "displayText": "P. K. Kapur, Anshu Gupta, P. C. Jha, \"Reliability growth modeling and optimal release policy under fuzzy environment of an N-version programming system incorporating the effect of fault removal efficiency\", <em>International Journal of Automation and Computing</em>, vol. 4, pp. 369, 2007, ISSN 1476-8186.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s11633-007-0369-9"}}, {"title": "Performance distribution of a fault-tolerant system in the presence of failure correlation", "displayText": "Gregory Levitin, Min Xie, \"Performance distribution of a fault-tolerant system in the presence of failure correlation\", <em>IIE Transactions</em>, vol. 38, pp. 499, 2006, ISSN 0740-817X.", "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/07408170500494574"}}, {"title": "Reducing test effort: A systematic mapping study on existing approaches", "displayText": "Frank Elberzhager, Alla Rosbach, J\u00fcrgen M\u00fcnch, Robert Eschbach, \"Reducing test effort: A systematic mapping study on existing approaches\", <em>Information and Software Technology</em>, vol. 54, pp. 1092, 2012, ISSN 09505849.", "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.infsof.2012.04.007"}}, {"title": "A Study on the Operational Stage Reliability of Dedicated Software", "displayText": "\"A Study on the Operational Stage Reliability of Dedicated Software\", <em>The KIPS Transactions:PartD</em>, vol. 10D, pp. 837, 2003, ISSN 1598-2866.", "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.3745/KIPSTD.2003.10D.5.837"}}, {"title": "Development of Software Reliability Growth Models for Industrial Applications Using Fuzzy Logic", "displayText": " Sultan, \"Development of Software Reliability Growth Models for Industrial Applications Using Fuzzy Logic\", <em>Journal of Computer Science</em>, vol. 7, pp. 1574, 2011, ISSN 1549-3636.", "order": "7", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.3844/jcssp.2011.1574.1580"}}, {"title": "A model for correlated failures inN-version programming", "displayText": "Y.S. DAI, M. XIE, K.L. POH, S.H. NG, \"A model for correlated failures inN-version programming\", <em>IIE Transactions</em>, vol. 36, pp. 1183, 2004, ISSN 0740-817X.", "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/07408170490507729"}}, {"title": "Real-Time Systems Design and Analysis", "displayText": "pp. 417, 2011, ISBN 9781118136607.", "order": "9", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/9781118136607.ch8"}}, {"title": "On the estimation of reliability of k-out-of-n systems", "displayText": "Hoang Pham, \"On the estimation of reliability of k-out-of-n systems\", <em>International Journal of Systems Assurance Engineering and Management</em>, vol. 1, pp. 32, 2010, ISSN 09756809.", "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s13198-010-0010-0"}}, {"title": "Proceedings of the International Workshop on Innovative Software Development Methodologies and Practices - InnoSWDev 2014", "displayText": "Kuan-Li Peng, Chin-Yu Huang, Pin-Heng Wang, Chao-Jung Hsu, pp. 11, 2014, ISBN 9781450332262.", "order": "11", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/2666581.2666587"}}, {"title": "Superposition of Power-Law Models for Hardware/Software System Reliability Data Analysis", "displayText": "Ming Zhao, \"Superposition of Power-Law Models for Hardware/Software System Reliability Data Analysis\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 10, pp. 121, 2003, ISSN 0218-5393.", "order": "12", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539303001044"}}, {"title": "Reliability of fault-tolerant systems with parallel task processing", "displayText": "Gregory Levitin, Min Xie, Tieling Zhang, \"Reliability of fault-tolerant systems with parallel task processing\", <em>European Journal of Operational Research</em>, vol. 177, pp. 420, 2007, ISSN 03772217.", "order": "13", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.ejor.2005.11.016"}}], "ieee": [{"title": "Incorporating fault dependency and debugging delay in software reliability analysis", "displayText": "R. Peng, Q.P. Hu, S.H. Ng, \"Incorporating fault dependency and debugging delay in software reliability analysis\", <em>Management of Innovation and Technology 2008. ICMIT 2008. 4th IEEE International Conference on</em>, pp. 641-645, 2008.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4654440", "pdfSize": "659KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4654440"}}, {"title": "An experimental evaluation on reliability features of N-version programming", "displayText": "Xia Cai, M.R. Lyu, M.A. Vouk, \"An experimental evaluation on reliability features of N-version programming\", <em>Software Reliability Engineering 2005. ISSRE 2005. 16th IEEE International Symposium on</em>, pp. 10 pp.-170, 2005, ISSN 1071-9458.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1544731", "pdfSize": "149KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1544731"}}, {"title": "Efficient Software Reliability Analysis With Correlated Component Failures", "displayText": "Lance Fiondella, Sanguthevar Rajasekaran, Swapna S. Gokhale, \"Efficient Software Reliability Analysis With Correlated Component Failures\", <em>Reliability IEEE Transactions on</em>, vol. 62, pp. 244-255, 2013, ISSN 0018-9529.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6423244", "pdfSize": "1806KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6423244"}}, {"title": "An empirical study on testing and fault tolerance for software reliability engineering", "displayText": "M.R. Lyu, Zubin Huang, S.K.S. Sze, Xia Cai, \"An empirical study on testing and fault tolerance for software reliability engineering\", <em>Software Reliability Engineering 2003. ISSRE 2003. 14th International Symposium on</em>, pp. 119-130, 2003, ISSN 1071-9458.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1251036", "pdfSize": "385KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1251036"}}, {"title": "The Application of Theory and Method of Time Series in the Modeling of Software Reliability", "displayText": "Chen Zhongmin, Wu Yeqing, \"The Application of Theory and Method of Time Series in the Modeling of Software Reliability\", <em>Information Technology and Computer Science (ITCS) 2010 Second International Conference on</em>, pp. 340-343, 2010.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5557116", "pdfSize": "254KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5557116"}}, {"title": "Detection and Correction Process Modeling Considering the Time Dependency", "displayText": "Y.p. Wu, Q.p. Hu, M. Xie, S.h. Ng, \"Detection and Correction Process Modeling Considering the Time Dependency\", <em>Dependable Computing 2006. PRDC '06. 12th Pacific Rim International Symposium on</em>, pp. 19-25, 2006.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4041884", "pdfSize": "361KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4041884"}}, {"title": "A Dependent Model for Fault Tolerant Software Systems During Debugging", "displayText": "Rong-Tsorng Wang, \"A Dependent Model for Fault Tolerant Software Systems During Debugging\", <em>Reliability IEEE Transactions on</em>, vol. 61, pp. 504-515, 2012, ISSN 0018-9529.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6156809", "pdfSize": "263KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6156809"}}, {"title": "Reliability and performance of tree-structured grid services", "displayText": "Yuan-Shun Dai, G. Levitin, \"Reliability and performance of tree-structured grid services\", <em>Reliability IEEE Transactions on</em>, vol. 55, pp. 337-349, 2006, ISSN 0018-9529.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1638417", "pdfSize": "318KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1638417"}}, {"title": "Optimal Resource Allocation for Maximizing Performance and Reliability in Tree-Structured Grid Services", "displayText": "Yuan-Shun Dai, Gregory Levitin, \"Optimal Resource Allocation for Maximizing Performance and Reliability in Tree-Structured Grid Services\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 444-453, 2007, ISSN 0018-9529.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4298234", "pdfSize": "389KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4298234"}}, {"title": "On the Trend of Remaining Software Defect Estimation", "displayText": "Cheng-Gang Bai, Kai-Yuan Cai, Qing-Pei Hu, Szu-Hui Ng, \"On the Trend of Remaining Software Defect Estimation\", <em>Systems Man and Cybernetics Part A: Systems and Humans IEEE Transactions on</em>, vol. 38, pp. 1129-1142, 2008, ISSN 1083-4427.", "order": "10", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4604821", "pdfSize": "1318KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4604821"}}, {"title": "Diverse firewall design", "displayText": "A.X. Liu, M.G. Gouda, \"Diverse firewall design\", <em>Dependable Systems and Networks 2004 International Conference on</em>, pp. 595-604, 2004.", "order": "11", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1311930", "pdfSize": "371KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1311930"}}, {"title": "An Open On-Board CBTC Controller Based on N-Version Programming", "displayText": "D.W. Carr, R. Ruelas, J.F. Gutierrez-Ramirez, H. Salcedo-Becerra, \"An Open On-Board CBTC Controller Based on N-Version Programming\", <em>Computational Intelligence for Modelling Control and Automation 2005 and International Conference on Intelligent Agents Web Technologies and Internet Commerce International Conference on</em>, vol. 1, pp. 834-839, 2005.", "order": "12", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1631368", "pdfSize": "378KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1631368"}}, {"title": "A Moving Average Non-Homogeneous Poisson Process Reliability Growth Model to Account for Software with Repair and System Structures", "displayText": "Wen-Li Wang, Thomas L. Hemminger, Mei-Huei Tang, \"A Moving Average Non-Homogeneous Poisson Process Reliability Growth Model to Account for Software with Repair and System Structures\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 411-421, 2007, ISSN 0018-9529.", "order": "13", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4298252", "pdfSize": "648KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4298252"}}]}, "mlTime": "PT0.171629S", "title": "A software-reliability growth model for N-version programming systems", "lastupdate": "2016-08-04T09:46:12", "ieeeCitationCount": "13", "nonIeeeCitationCount": "13"}, "references": [{"id": "ref1", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}], "title": "On the implementation of N-version programming for software fault-tolerance during program execution", "order": "1", "text": "A. Avizienis, L. Chen, \"On the implementation of N-version programming for software fault-tolerance during program execution\", <em>Proc. COMPASAC</em>, pp. 149-155, 1977."}, {"id": "ref2", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=55880", "pdfSize": "538KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors review and extend available techniques for achieving fault-tolerant programs. The representation of the techniques is uniform and is illustrated by simple examples. For each technique a fault tree has been developed to derive failure probability from the probabilities of the basic fault events. This allows the subsequent analysis of program-failure causes and the reliability modeling of computer programs. Numerical examples are given to support the comparison of the reviewed techniqu...", "documentLink": "/document/55880"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[2][6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}], "title": "Fault-tolerant programs and their reliability", "order": "2", "text": "F. Belli, P. Jedrzejowicz, \"Fault-tolerant programs and their reliability\", <em>IEEE Trans. Reliability</em>, vol. 29, no. 2, pp. 184-192, 1990."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=532621", "pdfSize": "805KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/532621"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[3][6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [27]."}], "title": "N-version programming: A fault tolerance approach to the reliable software", "order": "3", "text": "L. Chen, A. Avizienis, \"N-version programming: A fault tolerance approach to the reliable software\", <em>Proc. 8th Int. Symp. Fault-Tolerant Computing</em>, pp. 3-9, 1978."}, {"id": "ref4", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=370232", "pdfSize": "622KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a quantitative reliability analysis of a system designed to tolerate both hardware and software faults. The system achieves integrated fault tolerance by implementing N-version programming (NVP) on redundant hardware. The system analysis considers unrelated software faults, related software faults, transient hardware faults, permanent hardware faults, and imperfect coverage. The overall model is Markov in which the states of the Markov chain represent the long-term evolution ...", "documentLink": "/document/370232"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[4][6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[4][5], [15], [16], [27]."}], "title": "System reliability analysis of an N-version programming application", "order": "4", "text": "J. B. Dugan, M. R. Lyu, \"System reliability analysis of an N-version programming application\", <em>IEEE Trans. Reliability</em>, vol. 43, no. 4, pp. 513-519, Dec. 1994."}, {"id": "ref5", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[5][6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [27]."}], "title": "Dependability modeling for fault-tolerant software and systems", "order": "5", "text": "J. B. Dugan, M. R. Lyu, \"Dependability modeling for fault-tolerant software and systems\" in Software Fault Tolerance, 1995."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1701974", "pdfSize": "2707KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Fundamental to the development of redundant software techniques (known as fault-tolerant software) is an understanding of the impact of multiple joint occurrences of errors, referred to here as coincident errors. A theoretical basis for the study of redundant software is developed which 1) provides a probabilistic framework for empirically evaluating the effectiveness of a general multiversion strategy when component versions are subject to coincident errors, and 2) permits an analytical study o...", "documentLink": "/document/1701974"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some reliability models, e.g., [6], [15], [19], focus on software diversity modeling, and they are based on the detailed analysis of the dependencies in diversified software."}], "title": "A theoretical basis for the analysis of multiversion software subject to coincident errors", "order": "6", "text": "D. Eckhardt, L. Lee, \"A theoretical basis for the analysis of multiversion software subject to coincident errors\", <em>IEEE Trans. Software Engineering</em>, vol. SE-11, no. 12, pp. 1511-1517, Dec. 1985."}, {"id": "ref7", "refType": "biblio", "context": [], "title": "Software Engineering Concepts", "order": "7", "text": "R. Fairley, Software Engineering Concepts, 1985, McGraw-Hill."}, {"id": "ref8", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=212974", "pdfSize": "419KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Presents a feasibility study of two combined techniques for software fault tolerance in distributed systems. A probabilistic model for each technique is presented that represents a technique's ability to recover from software and hardware faults that occur with arbitrary frequency. The goal is not to accurately predict the behavior of systems that employ these techniques, but rather to identify the strong and weak points of each approach under varying circumstances of dependability in both the s...", "documentLink": "/document/212974"}, "context": [], "title": "Evaluation of combined approaches to distributed software-based fault tolerance", "order": "8", "text": "R. E. Gantenbein, S. Y. Shin, J. R. Cowles, \"Evaluation of combined approaches to distributed software-based fault tolerance\", <em>Pacific Rim Int. Symp. Fault Tolerant Systems</em>, pp. 70-75, 1991."}, {"id": "ref9", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1038/scientificamerican0994-86"}, "context": [], "title": "Software's chronic crisis", "order": "9", "text": "W. W. Gibbs, \"Software's chronic crisis\", <em>Scientific American</em>, vol. 271, pp. 86-95, Sep. 1994."}, {"id": "ref10", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=58719", "pdfSize": "1120KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A census of customer outages reported to Tandem showing a clear improvement in the reliability of hardware and maintenance has been taken. It indicates that software is now the major source of reported outages (62%), followed by system operations (15%). This is a dramatic shift from the statistics for 1985. Even after discounting systematic underreporting of operations and environmental outages, the conclusion is clear: hardware faults and hardware maintenance are no longer a major source of out...", "documentLink": "/document/58719"}, "context": [], "title": "A census of tandem system availability between 1985 and 1990", "order": "10", "text": "J. Gray, \"A census of tandem system availability between 1985 and 1990\", <em>IEEE Trans. Reliability</em>, vol. 39, no. 4, pp. 409-418, Oct. 1990."}, {"id": "ref11", "refType": "biblio", "context": [], "title": "On the performance of software fault tolerance strategies", "order": "11", "text": "A. Grnarov, J. Arlat, A. Aviziens, \"On the performance of software fault tolerance strategies\", <em>Proc. 10th IEEE Int. Symp. Fault-Tolerant Computing</em>, pp. 251-253, 1980."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=229488", "pdfSize": "1445KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The influence of reliability growth of the fault-tolerant software components on the reliability of the software system in operation is modeled and estimated. Two fault-tolerant software techniques are investigated: recovery block and N-version programming. For each, the stable reliability model is transformed into a model that considers reliability growth using a transformation approach based on the hyperexponential model. Analytic and numeric processing of the transformed models identify the i...", "documentLink": "/document/229488"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Reference [12] proposed the first reliability growth model for \\$N\\$ VP systems by using the a hyper-exponential model; its failure intensity function is:\n\\$\\xi_{\\inf},\\, \\xi_{\\sup} \\equiv\\$ hyper-exponential model parameters characterizing reliability-growth due to the removal of the faults. \\$h(t)\\$ is nonincreasing with time for \\$0 \\leq \\omega \\leq 1\\$: from \\$h(0) = \\omega\\cdot \\xi_{\\sup}\\$ to \\$h(\\infty) = \\xi_{\\inf}\\$."}], "title": "Reliability growth of fault-tolerant software", "order": "12", "text": "K. Kanoun, M. Kaaniche, C. Beounes, \"Reliability growth of fault-tolerant software\", <em>IEEE Trans. Reliability</em>, vol. 42, no. 2, pp. 205-218, Jun. 1993."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6312924", "pdfSize": "3096KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "<i>N</i>-version programming has been proposed as a method of incorporating fault tolerance into software. Multiple versions of a program (i.e. `<i>N</i>') are prepared and executed in parallel. Their outputs are collected and examined by a voter, and, if they are not identical, it is assumed that the majority is correct. This method depends for its reliability improvement on the assumption that programs that have been developed independently will fail independently. An experiment is described i...", "documentLink": "/document/6312924"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[13][17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec2", "part": "1", "text": "Although diverse software versions are developed by using different specifications, designs, programming teams, programming languages, etc., many researchers have revealed that those independently developed software versions do not necessarily fail \\$s\\$-independently, e.g., [13], [21], [26]."}, {"sec": "sec2", "part": "1", "text": " Some experiments show that using different languages and design philosophies has little effect on the reliability in \\$N\\$ VP because people tend to make similar logical mistakes in difficult-to-program parts of the software, e.g., [13], [21]."}], "title": "An experimental evaluation of the assumption of independence in multiversion programming", "order": "13", "text": "J. C. Knight, N. G. Leveson, \"An experimental evaluation of the assumption of independence in multiversion programming\", <em>IEEE Trans. Software Engineering</em>, vol. SE-12, no. 1, pp. 96-109, 1986."}, {"id": "ref14", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=56851", "pdfSize": "1202KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A structured definition of hardware- and software-fault-tolerant architectures is presented. Software-fault-tolerance methods are discussed, resulting in definitions for soft and solid faults. A soft software fault has a negligible likelihood or recurrence and is recoverable, whereas a solid software fault is recurrent under normal operations or cannot be recovered. A set of hardware- and software-fault-tolerant architectures is presented, and three of them are analyzed and evaluated. Architectu...", "documentLink": "/document/56851"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[14][17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec2", "part": "1", "text": "Reference [14]classifies faults, according to their independence, as related or independent."}], "title": "Definition and analysis of hardware- and software-fault-tolerant architectures", "order": "14", "text": "J.-C. Laprie, J. Arlat, C. Beounces, K. Kanoun, \"Definition and analysis of hardware- and software-fault-tolerant architectures\", <em>IEEE Computer</em>, vol. 23, no. 7, pp. 39-51, Jul. 1990."}, {"id": "ref15", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=58771", "pdfSize": "1626KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Work by D.E. Eckhardt and L.D. Lee (1985), shows that independently developed program versions fail dependently. The authors show that there is a precise duality between input choice and program choice in this model and consider a generalization in which different versions can be developed using diverse methodologies. The use of diverse methodologies is shown to decrease the probability of the simultaneous failure of several versions. Indeed, it is theoretically possible to obtain versions which...", "documentLink": "/document/58771"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[15][17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some reliability models, e.g., [6], [15], [19], focus on software diversity modeling, and they are based on the detailed analysis of the dependencies in diversified software."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [27]."}], "title": "Conceptual modeling of coincident failures in multiversion software", "order": "15", "text": "B. Littlewood, D. R. Miller, \"Conceptual modeling of coincident failures in multiversion software\", <em>IEEE Trans. Software Engineering</em>, vol. 15, no. 12, pp. 1596-1614, 1989."}, {"id": "ref16", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=285866", "pdfSize": "605KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The author quantitatively examines the effectiveness of the N-Version programming approach. He looks into the details of an academia/industry joint project employing six programming languages, and studies the properties of the resulting program versions. He explains how exhaustive testing was applied to the project, and measure the error probability in different N-Version Software execution configurations. He also applies mutation testing techniques to measure the safety coverage factor for the ...", "documentLink": "/document/285866"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[16][17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [27]."}], "title": "Software reliability measurement in N-version software execution environment", "order": "16", "text": "M. R. Lyu, \"Software reliability measurement in N-version software execution environment\", <em>Proc. 1992 Int. Symp. Software Reliability Engineering</em>, pp. 254-263, 1992."}, {"id": "ref17", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=229486", "pdfSize": "1009KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The application of the N-version programming (NVP) technique in a project that reused the revised specification of a real, automatic airplane landing problem. The study involved 40 students, who formed 15 independent programming teams to design, program, test, and evaluate the application. The impact of the paradigm on the software development process, the improvement of the resulting N-version software (NVS) product, the insight, experience, and learning in conducting this project, various test...", "documentLink": "/document/229486"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}], "title": "Improving the N-version programming process through the evolution of a design paradigm", "order": "17", "text": "M. R. Lyu, \"Improving the N-version programming process through the evolution of a design paradigm\", <em>IEEE Trans. Reliability</em>, vol. 42, no. 2, pp. 179-189, Jun. 1993."}, {"id": "ref18", "refType": "biblio", "context": [], "title": "Handbook of Software Reliability Engineering", "order": "18", "text": "M. R. Lyu, Handbook of Software Reliability Engineering, 1996, McGraw-Hill."}, {"id": "ref19", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=48942", "pdfSize": "948KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Three aspects of the modeling of multiversion software are considered. First, the beta-binomial distribution is proposed for modeling correlated failures in multiversion software. Second, a combinatorial model for predicting the reliability of a multiversion software configuration is presented. This model can take as inputs failure distributions either from measurements or from a selected distribution (e.g. beta-binomial). Various recovery methods can be incorporated in this model. Third, the ef...", "documentLink": "/document/48942"}, "context": [{"sec": "sec1", "part": "1", "text": " Some reliability models, e.g., [6], [15], [19], focus on software diversity modeling, and they are based on the detailed analysis of the dependencies in diversified software."}], "title": "Modeling of correlated failures and community error recovery in multiversion software", "order": "19", "text": "V. F. Nicola, A. Goyal, \"Modeling of correlated failures and community error recovery in multiversion software\", <em>IEEE Trans. Software Engineering</em>, vol. 16, no. 3, pp. 350-359, Mar. 1990."}, {"id": "ref20", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}], "title": "Software Reliability", "order": "20", "text": "H. Pham, Software Reliability, 2000, Springer-Verlag."}, {"id": "ref21", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4273318", "pdfSize": "330KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper provides an overview of model-driven software development methodologies and argues that they are well-suited for the purpose of pervasive software development. It also surveys some of the most notable model-driven pervasive software development frameworks that are available, including one of our own.", "documentLink": "/document/4273318"}, "context": [{"sec": "sec1", "part": "1", "text": " However, one cannot reasonably expect a large system to be error-free [21]."}, {"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec2", "part": "1", "text": "Although diverse software versions are developed by using different specifications, designs, programming teams, programming languages, etc., many researchers have revealed that those independently developed software versions do not necessarily fail \\$s\\$-independently, e.g., [13], [21], [26]."}, {"sec": "sec2", "part": "1", "text": " Some experiments show that using different languages and design philosophies has little effect on the reliability in \\$N\\$ VP because people tend to make similar logical mistakes in difficult-to-program parts of the software, e.g., [13], [21]."}], "title": "Fault-Tolerant Software Systems: Techniques and Applications", "order": "21", "text": "H. Pham, Fault-Tolerant Software Systems: Techniques and Applications, 1992, IEEE Computer Society Press."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=784276", "pdfSize": "619KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A general software reliability model based on the nonhomogeneous Poisson process (NHPP) is used to derive a model that integrates imperfect debugging with the learning phenomenon. Learning occurs if testing appears to improve dynamically in efficiency as one progresses through a testing phase. Learning usually manifests itself as a changing fault-detection rate. Published models and empirical data suggest that efficiency growth due to learning can follow many growth-curves, from linear to that d...", "documentLink": "/document/784276"}, "context": [{"sec": "", "part": "", "text": "software reliability function: probability that no failure occurs during \\$(T,\\,T+x)\\$, given that the latest failure occurred at time \\$T\\$ [22]."}, {"sec": "sec1", "part": "1", "text": " Other SRGM models, but not \\$N\\$ VP-SRGM, recently consider imperfect debugging [22], [23]: faults are not always successfully removed and new ones can be introduced into the software during the debugging process."}, {"sec": "sec3a1", "part": "1", "text": " Several existing SRGM, based on the NHPP, have recently been quite successful tools in practical software reliability engineering [22]."}], "title": "A general imperfect-software-debugging model with s-shaped fault-detection rate", "order": "22", "text": "H. Pham, L. Nordmann, X. Zhang, \"A general imperfect-software-debugging model with s-shaped fault-detection rate\", <em>IEEE Trans. Reliability</em>, vol. 48, no. 2, pp. 169-175, Jun. 1999."}, {"id": "ref23", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539397000199"}, "context": [{"sec": "sec1", "part": "1", "text": " Other SRGM models, but not \\$N\\$ VP-SRGM, recently consider imperfect debugging [22], [23]: faults are not always successfully removed and new ones can be introduced into the software during the debugging process."}], "title": "An NHPP software reliability model and its comparison", "order": "23", "text": "H. Pham, X. Zhang, \"An NHPP software reliability model and its comparison\", <em>Int. J. Reliability Quality and Safety Engineering</em>, vol. 4, no. 3, pp. 269-2825, Sep. 1997."}, {"id": "ref24", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.2172/6017897"}, "context": [{"sec": "sec5", "part": "1", "text": "This section illustrates the model results by analyzing a fault-tolerant software application of the WRC-system [24]."}, {"sec": "sec5a", "part": "1", "text": "Consider a simple software control logic for a WRC system [24]."}], "title": "Software reliability models for critical applications", "order": "24", "text": "H. Pham, M. Pham, <em>Software reliability models for critical applications</em>, 1991."}, {"id": "ref25", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [25][27]."}], "title": "Experimental validation of six fault-tolerant software reliability models", "order": "25", "text": "R. K. Scott, J. W. Gault, D. F. McAllister, J. Wiggs, \"Experimental validation of six fault-tolerant software reliability models\", <em>Proc. IEEE 14th Fault-Tolerant Computing Symp.</em>, pp. 102-107, 1984."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1702258", "pdfSize": "3156KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In situations in which computers are used to manage life-critical situations, software errors that could arise due to inadequate or incomplete testing cannot be tolerated. This paper examines three methods of creating fault-tolerant software systems, Recovery Block, N-Version Programming, and Consensus Recovery Block, and it presents reliability models for each. The models are used to show that one method, the Consensus Recovery Block, is more reliable than the other two.", "documentLink": "/document/1702258"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[26][28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [26][27]."}, {"sec": "sec2", "part": "1", "text": "Although diverse software versions are developed by using different specifications, designs, programming teams, programming languages, etc., many researchers have revealed that those independently developed software versions do not necessarily fail \\$s\\$-independently, e.g., [13], [21], [26]."}], "title": "Fault-tolerant reliability modeling", "order": "26", "text": "R. K. Scott, J. W. Gault, D. F. McAllister, \"Fault-tolerant reliability modeling\", <em>IEEE Trans. Software Engineering</em>, vol. SE-13, no. 5, pp. 582-592, 1987."}, {"id": "ref27", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=229492", "pdfSize": "1166KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Model-based performability evaluation is used to assess and improve the effectiveness of fault-tolerant software. The evaluation employs a measure that combines quantifications of performance and dependability in a synergistic manner, thus capturing the interaction between these two important attributes. The specific systems evaluated are a basic realization of N-version programming (NVP) (N=3) along with variants thereof. For each system, its corresponding stochastic process model is constructe...", "documentLink": "/document/229492"}, "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[27][28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}, {"sec": "sec1", "part": "1", "text": " Some other models focus on modeling fault-tolerant software system behavior, aimed primarily to evaluate some dependability measures for specific types of software systems, e.g., [3]\u2013[5], [15], [16], [27]."}], "title": "Performability enhancement of fault-tolerant software", "order": "27", "text": "A. T. Tai, J. F. Meyer, A. Aviziems, \"Performability enhancement of fault-tolerant software\", <em>IEEE Trans. Reliability</em>, vol. 42, no. 2, pp. 227-237, Jun. 1993."}, {"id": "ref28", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Numerous papers [1]\u2013[6], [12]\u2013[17], [20], [21], [25]\u2013[28] were devoted to the modeling and evaluation of software reliability of \\$N\\$-version programming systems since the 1970s."}], "title": "Identification of correlated failures of fault-tolerant software systems", "order": "28", "text": "A. A. Vouk, D. D. McAllister, K. C. Tai, \"Identification of correlated failures of fault-tolerant software systems\", <em>Proc. COMPSAC</em>, pp. 437-444, 1985."}], "arnumber": "1028403"}