{"arnumber": "1044344", "details": {"title": "Using regression trees to classify fault-prone software modules", "volume": "51", "keywords": [{"type": "IEEE Keywords", "kwd": ["Regression tree analysis", "Classification tree analysis", "Fault diagnosis", "Software reliability", "Software metrics", "Software measurement", "Computer science", "Software systems", "Accuracy", "Robustness"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["fault trees", "software reliability", "software metrics", "statistical analysis"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["S-Plus", "regression trees", "fault-prone software modules classification", "software module defects", "operational software failures", "abstract tree", "response variable", "classification rule", "software metrics", "software reliability"]}], "issue": "4", "link": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "authors": [{"affiliation": "Dept. of Comput. Sci. & Eng., Florida Atlantic Univ., Boca Raton, FL, USA", "bio": {"p": ["Taghi M. Khoshgoftaar is a Professor of the Department of Computer Science and Engineering, Florida Atlantic University, and is also Director of the Empirical Software Engineering Laboratory. His research interests are in software engineering, software measurements, software reliability and quality engineering, computational intelligence, computer performance evaluation, multimedia systems, and statistical modeling. He has published more than 150 refereed papers in these areas. He is a member of the Association for Computing Machinery, the American Statistical Association, and the IEEE (Computer Society and Reliability Society). He has served as North American editor of the Software Quality Journal."]}, "name": "T.M. Khoshgoftaar"}, {"bio": {"p": ["Edward B. Allen received the B.S. in 1971 in engineering from Brown University, Rhode Island, the M.S. in 1973 in systems engineering from the University of Pennsylvania, Philadelphia, and the Ph.D. in 1995 in computer science from Florida Atlantic University, Boca Raton; his work for this paper was performed while he was at this university. He is an assistant professor in the Department of Computer Science at Mississippi State University. He began his career as a programmer with the U.S. Army. From 1974 to 1983, he performed system engineering and software engineering on military systems, first for Planning Research Corp. and then for Sperry Corp. From 1983 to 1992, he developed corporate data processing systems for Glenbeigh, Inc., a specialty health care company. From 1995 to 2000, he performed research in software engineering at Florida Atlantic University. His research interests include software measurement, software process, software quality, and computer performance modeling. He has more than 60 refereed publications in these areas. He is a member of the IEEE Computer Society and the Association for Computing Machinery."]}, "name": "E.B. Allen"}, {"bio": {"p": ["Jianyu Deng received the M.S. in 1999 in computer science from Florida Atlantic University, Boca Raton. She is a software engineer with Motorola. Her research interests include software engineering and software quality."]}, "name": " Jianyu Deng"}], "publisher": "IEEE", "doi": "10.1109/TR.2002.804488", "abstract": "Software faults are defects in software modules that might cause failures. Software developers tend to focus on faults, because they are closely related to the amount of rework necessary to prevent future operational software failures. The goal of this paper is to predict which modules are fault-prone and to do it early enough in the life cycle to be useful to developers. A regression tree is an algorithm represented by an abstract tree, where the response variable is a real quantity. Software modules are classified as fault-prone or not, by comparing the predicted value to a threshold. A classification rule is proposed that allows one to choose a preferred balance between the two types of misclassification rates. A case study of a very large telecommunications systems considered software modules to be fault-prone, if any faults were discovered by customers. Our research shows that classifying fault-prone modules with regression trees and the using the classification rule in this paper, resulted in predictions with satisfactory accuracy and robustness."}, "references": [{"title": "Factor analysis and AIC", "context": [{"text": " Reference [38] extended the \\${\\tt ID3}\\$ algorithm by applying Akaike Information Criterion procedures [1]to prune the tree.", "sec": "sec1", "part": "1"}], "order": "1", "links": {"crossRefLink": "http://dx.doi.org/10.1007/BF02294359", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref1", "text": "H. Akaike, \"Factor analysis and AIC\", <em>Psychometrika</em>, vol. 52, no. 3, pp. 317-332, 1987.", "refType": "biblio"}, {"title": "A validation of object-oriented design metrics as quality indicators", "context": [{"text": "logistic regression [2], [14];.", "sec": "sec1", "part": "1"}], "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents the results of a study in which we empirically investigated the suite of object-oriented (OO) design metrics introduced in (Chidamber and Kemerer, 1994). More specifically, our goal is to assess these metrics as predictors of fault-prone classes and, therefore, determine whether they can be used as early quality indicators. This study is complementary to the work described in (Li and Henry, 1993) where the same suite of metrics had been used to assess frequencies of maintenan...", "documentLink": "/document/544352", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=544352", "pdfSize": "1508KB"}, "id": "ref2", "text": "V. R. Basili, L. C. Briand, W. Melo, \"A validation of object-oriented design metrics as quality indicators\", <em>IEEE Trans. Software Engineering</em>, vol. 22, no. 10, pp. 751-761, Oct. 1996.", "refType": "biblio"}, {"title": "Classification and Regression Trees", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}, {"text": " Reference [25] briefly reports using the Classification and Regression Trees (\\${\\tt CART}\\$) regression tree algorithm [3]to model software project productivity.", "sec": "sec1", "part": "1"}], "order": "3", "id": "ref3", "text": "L. Breiman, J. H. Friedman, R. A. Olshen, C. J. Stone, Classification and Regression Trees, 1984.", "refType": "biblio"}, {"title": "Developing interpretable models with optimized set reduction for identifying high-risk software components", "context": [{"text": "optimal set reduction [4];.", "sec": "sec1", "part": "1"}], "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Applying equal testing and verification effort to all parts of a software system is not very efficient, especially when resources are tight. Therefore, one needs to low/high fault frequency components so that testing/verification effort can be concentrated where needed. Such a strategy is expected to detect more faults and thus improve the resulting reliability of the overall system. The authors present the optimized set reduction approach for constructing such models, which is intended to fulfi...", "documentLink": "/document/256851", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=256851", "pdfSize": "1722KB"}, "id": "ref4", "text": "L. C. Briand, V. R. Basili, C. J. Hetmanski, \"Developing interpretable models with optimized set reduction for identifying high-risk software components\", <em>IEEE Trans. Software Engineering</em>, vol. 19, no. 11, pp. 1028-1044, Nov. 1993.", "refType": "biblio"}, {"title": "Tree-based models", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}], "order": "5", "id": "ref5", "text": "J. M. Chambers, T. J. Hastie, \"Tree-based models\" in Statistical Models in S, pp. 377-419, 1992, Wadsworth.", "refType": "biblio"}, {"title": "Classification of software quality using tree modeling with the S-Plus algorithm", "context": [{"text": " A case study of a very large telecommunication system illustrates the approach [6].", "sec": "sec1", "part": "1"}, {"text": " The minimum \\$s\\$-deviance parameter was mindev = 0.10, and the minimum size node was minsize = 40; these parameters were chosen empirically [6].", "sec": "sec3c", "part": "1"}], "order": "6", "id": "ref6", "text": "J. Deng, <em>Classification of software quality using tree modeling with the S-Plus algorithm</em>, Dec. 1999.", "refType": "biblio"}, {"title": "Classification techniques for metric-based software development", "context": [{"text": "fuzzy classification [7];.", "sec": "sec1", "part": "1"}], "order": "7", "links": {"crossRefLink": "http://dx.doi.org/10.1007/BF00209184", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref7", "text": "C. Ebert, \"Classification techniques for metric-based software development\", <em>Software Quality J.</em>, vol. 5, no. 4, pp. 255-272, Dec. 1996.", "refType": "biblio"}, {"title": "Data mining and knowledge discovery: Making sense out of data", "context": [{"text": " A data-mining approach is preferred to exploiting metric data [8], [18] analyzing a broad set of candidate metrics.", "sec": "sec3a", "part": "1"}], "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Current computing and storage technology is rapidly outstripping society's ability to make meaningful use of the torrent of available data. Without a concerted effort to develop knowledge discovery techniques, organizations stand to forfeit much of the value from the data they currently collect and store.", "documentLink": "/document/539013", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=539013", "pdfSize": "2005KB"}, "id": "ref8", "text": "U. M. Fayyad, \"Data mining and knowledge discovery: Making sense out of data\", <em>IEEE Expert</em>, vol. 11, no. 4, pp. 20-25, Oct. 1996.", "refType": "biblio"}, {"title": "Regression tree modeling for the prediction of software quality", "context": [{"text": " Case studies in [9] and [39] used the \\${\\tt S{\\hbox{-}}Plus}\\$ regression tree algorithm to predict the number of faults.", "sec": "sec1", "part": "1"}, {"text": " As future work, [9]suggests applying a threshold to the predicted quantity to classify modules.", "sec": "sec1", "part": "1"}], "order": "9", "id": "ref9", "text": "S. S. Gokhale, M. R. Lyu, \"Regression tree modeling for the prediction of software quality\", <em>Proc. Third ISSAT Int. Conf. Reliability and Quality in Design</em>, pp. 31-36, 1997.", "refType": "biblio"}, {"title": "EMERALD: Software metrics and models on the desktop", "context": [{"text": "The subject system was supported by the EMERALD system [10].", "sec": "sec3a", "part": "1"}], "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "As software becomes more and more sophisticated, industry has begun to place a premium on software reliability. The telecommunications industry is no exception. Consequently software reliability is a strategic business weapon in an increasingly competitive marketplace. In response to these concerns, BNR, Nortel, and Bell Canada developed the Enhanced Measurement for Early Risk Assessment of Latent Defects (Emerald), a decision support system designed to improve telecommunications software reliab...", "documentLink": "/document/536459", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=536459", "pdfSize": "1033KB"}, "id": "ref10", "text": "J. P. Hudepohl, S. J. Aud, T. M. Khoshgoftaar<etal>, \"EMERALD: Software metrics and models on the desktop\", <em>IEEE Software</em>, vol. 13, no. 5, pp. 56-60, Sept. 1996.", "refType": "biblio"}, {"title": "Application of a usage profile in software quality models", "context": [{"text": " The proportion of installations that had each module, USAGE, was approximated by data from a prior release [11].", "sec": "sec3a", "part": "1"}], "order": "11", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Faults discovered by customers are an important aspect of software quality. The working hypothesis of this paper is that variables derived from an execution profile can be useful in software quality models. An execution profile of a software system consists of the probability of execution of each module during operations. Execution represents opportunities for customers to discover faults. However, an execution profile over an entire customer-base can be difficult to measure directly. Deployment...", "documentLink": "/document/756692", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=756692", "pdfSize": "230KB"}, "id": "ref11", "text": "W. D. Jones, J. P. Hudepohl, T. M. Khoshgoftaar, E. B. Allen, \"Application of a usage profile in software quality models\" in Proc. Third European Conf. Software Maintenance and Reengineering, pp. 148-157, 1999, IEEE Computer Soc.", "refType": "biblio"}, {"title": "An exploratory technique for investigating large quantities of categorical data", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}], "order": "12", "links": {"crossRefLink": "http://dx.doi.org/10.2307/2986296", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref12", "text": "G. V. Kass, \"An exploratory technique for investigating large quantities of categorical data\", <em>Appl. Statistics</em>, vol. 29, pp. 119-127, 1980.", "refType": "biblio"}, {"title": "Classification of fault-prone software modules: Prior probabilities, costs, and model evaluation", "context": [{"text": " However, this algorithm does not incorporate prior probabilities of membership nor costs of misclassifications [13].", "sec": "sec1", "part": "1"}, {"text": " Equation (3) is a minimum-cost rule [13], [36] whenHowever, the costs of misclassifications are often difficult to estimate.", "sec": "sec2", "part": "1"}], "order": "13", "links": {"crossRefLink": "http://dx.doi.org/10.1023/A:1009736205722", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref13", "text": "T. M. Khoshgoftaar, E. B. Allen, \"Classification of fault-prone software modules: Prior probabilities costs and model evaluation\", <em>Empirical Software Engineering: An International Journal</em>, vol. 3, no. 3, pp. 275-298, Sept. 1998.", "refType": "biblio"}, {"title": "Logistic regression modeling of software quality", "context": [{"text": "logistic regression [2], [14];.", "sec": "sec1", "part": "1"}], "order": "14", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218539399000292", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref14", "text": "T. M. Khoshgoftaar, E. B. Allen, \"Logistic regression modeling of software quality\", <em>Int. J. Reliability Quality and Safety Engineering.</em>, vol. 6, no. 4, pp. 303-317, Dec. 1999.", "refType": "biblio"}, {"title": "A practical classification-rule for software quality models", "context": [{"text": " The authors proposed such a classification rule for use with software quality models based on discriminant analysis [15] and this paper adapts it to regression trees.", "sec": "sec2", "part": "1"}, {"text": "With various classification techniques, a tradeoff is observed between Types I and II misclassification rates as functions of \\$\\zeta\\$ [15], [19], [22], [41].", "sec": "sec2", "part": "1"}], "order": "15", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A practical classification rule for a SQ (software quality) model considers the needs of the project to use a model to guide targeting software RE (reliability enhancement) efforts, such as extra reviews early in development. Such a rule is often more useful than alternative rules. This paper discusses several classification rules for SQ models, and recommends a generalized classification rule, where the effectiveness and efficiency of the model for guiding software RE efforts can be explicitly ...", "documentLink": "/document/877340", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=877340", "pdfSize": "147KB"}, "id": "ref15", "text": "T. M. Khoshgoftaar, E. B. Allen, \"A practical classification-rule for software quality models\", <em>IEEE Trans. Reliability</em>, vol. 49, no. 2, pp. 209-216, June 2000.", "refType": "biblio"}, {"title": "Return on investment of software quality models", "context": [{"text": "Consider the benefits of using the preferred model to target software improvement efforts [16].", "sec": "sec3c", "part": "1"}], "order": "16", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software quality classification models can be used to target reliability enhancement efforts toward high risk modules. We summarize a generalized classification rule which we have proposed. Cost aspects of a software quality classification model are discussed. The contribution of this paper is a demonstration of how to assess the return on investment of model accuracy, in the context of a software quality classification model. An industrial case study of a very large telecommunications system il...", "documentLink": "/document/688249", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=688249", "pdfSize": "172KB"}, "id": "ref16", "text": "T. M. Khoshgoftaar, E. B. Allen, W. D. Jones, J. P. Hudepohl, \"Return on investment of software quality models\", <em>Proc. 1998 IEEE Workshop on Application-Specific Software Engineering and Technology</em>, pp. 145-150.", "refType": "biblio"}, {"title": "Classification tree models of software quality over multiple releases", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}], "order": "17", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software quality models are tools for focusing software enhancement efforts. Such efforts are essential for mission-critical embedded software, such as telecommunications systems, because customer-discovered faults have very serious consequences and are very expensive to repair. We present an empirical study that evaluated software quality models over several releases to address the question, \"How long will a model yield useful predictions?\" We also introduce the Classification And Regression Tr...", "documentLink": "/document/809316", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=809316", "pdfSize": "190KB"}, "id": "ref17", "text": "T. M. Khoshgoftaar, E. B. Allen, W. D. Jones, J. P. Hudepohl, \"Classification tree models of software quality over multiple releases\", <em>Proc.: Tenth Int. Symp. Software Reliability Engineering</em>, pp. 116-125, 1999.", "refType": "biblio"}, {"title": "Data mining for predictors of software quality", "context": [{"text": " A data-mining approach is preferred to exploiting metric data [8], [18] analyzing a broad set of candidate metrics.", "sec": "sec3a", "part": "1"}], "order": "18", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218194099000309", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref18", "text": "T. M. Khoshgoftaar, E. B. Allen, W. D. Jones, J. P. Hudepohl, \"Data mining for predictors of software quality\", <em>Int. J. Software Engineering and Knowledge Engineering.</em>, vol. 9, no. 5, pp. 547-563, 1999.", "refType": "biblio"}, {"title": "Which software modules have faults that will be discovered by customers?", "context": [{"text": "With various classification techniques, a tradeoff is observed between Types I and II misclassification rates as functions of \\$\\zeta\\$ [15], [19], [22], [41].", "sec": "sec2", "part": "1"}], "order": "19", "links": {"crossRefLink": "http://dx.doi.org/10.1002/(SICI)1096-908X(199901/02)11:1&lt;1::AID-SMR181&gt;3.0.CO;2-X", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref19", "text": "T. M. Khoshgoftaar, E. B. Allen, W. D. Jones, J. P. Hudepohl, \"Which software modules have faults that will be discovered by customers?\", <em>J. Software Maintenance: Research and Practice</em>, vol. 11, no. 1, pp. 1-18, Jan. 1999.", "refType": "biblio"}, {"title": "Accuracy of software quality models over multiple releases", "context": [{"text": " Table II lists the 24 software product metrics used in this study [20]; CAL and VARUSD were not used as predictors because they are redundant with others.", "sec": "sec3a", "part": "1"}], "order": "20", "id": "ref20", "text": "T. M. Khoshgoftaar, E. B. Allen, W. D. Jones, J. P. Hudepohl, \"Accuracy of software quality models over multiple releases\", <em>Annals of Software Engineering.</em>, vol. 6, 2000.", "refType": "biblio"}, {"title": "Early quality prediction: A case study in telecommunications", "context": [{"text": "discriminant analysis [21], [28];.", "sec": "sec1", "part": "1"}], "order": "21", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Predicting the quality of modules lets developers focus on potential problems and make improvements earlier in development, when it is more cost-effective. The authors applied discriminant analysis to identify fault-prone modules in a large telecommunications system prior to testing.", "documentLink": "/document/476287", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=476287", "pdfSize": "1050KB"}, "id": "ref21", "text": "T. M. Khoshgoftaar, E. B. Allen, K. S. Kalaichelvan, N. Goel, \"Early quality prediction: A case study in telecommunications\", <em>IEEE Software</em>, vol. 13, no. 1, pp. 65-71, Jan. 1996.", "refType": "biblio"}, {"title": "Using classification trees for software quality models: Lessons learned", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}, {"text": "With various classification techniques, a tradeoff is observed between Types I and II misclassification rates as functions of \\$\\zeta\\$ [15], [19], [22], [41].", "sec": "sec2", "part": "1"}], "order": "22", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218194099000140", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref22", "text": "T. M. Khoshgoftaar, E. B. Allen, A. Naik<etal>, \"Using classification trees for software quality models: Lessons learned\", <em>Int. J. Software Engineering and Knowledge Engineering</em>, vol. 9, no. 2, pp. 217-231, 1999.", "refType": "biblio"}, {"title": "Preparing measurements of legacy software for predicting operational faults", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}], "order": "23", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software quality modeling can be used by a software maintenance project to identify a limited set of software modules that probably need improvement. A model's goal is to recommend a set of modules to receive special treatment. The purpose of the paper is to report our experiences modeling software quality with classification trees, including necessary preprocessing of data. We conducted a case study on two releases of a very large legacy telecommunications system. A module was considered fault-...", "documentLink": "/document/792634", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=792634", "pdfSize": "196KB"}, "id": "ref23", "text": "T. M. Khoshgoftaar, E. B. Allen, X. Yuan<etal>, \"Preparing measurements of legacy software for predicting operational faults\", <em>Proc: Int. Conf. Software Maintenance</em>, pp. 359-368, 1999.", "refType": "biblio"}, {"title": "A neural network approach for early detection of program modules having high risk in the maintenance phase", "context": [{"text": "neural networks [24];.", "sec": "sec1", "part": "1"}], "order": "24", "links": {"crossRefLink": "http://dx.doi.org/10.1016/0164-1212(94)00130-F", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref24", "text": "T. M. Khoshgoftaar, D. L. Lanning, \"A neural network approach for early detection of program modules having high risk in the maintenance phase\", <em>J. Systems and Software</em>, vol. 29, no. 1, pp. 85-91, Apr. 1995.", "refType": "biblio"}, {"title": "A procedure for analyzing unbalanced datasets", "context": [{"text": " Reference [25] briefly reports using the Classification and Regression Trees (\\${\\tt CART}\\$) regression tree algorithm [3]to model software project productivity.", "sec": "sec1", "part": "1"}], "order": "25", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper describes a procedure for analyzing unbalanced datasets that include many nominal- and ordinal-scale factors. Such datasets are often found in company datasets used for benchmarking and productivity assessment. The two major problems caused by lack of balance are that the impact of factors can be concealed and that spurious impacts can be observed. These effects are examined with the help of two small artificial datasets. The paper proposes a method of forward pass residual analysis t...", "documentLink": "/document/677185", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=677185", "pdfSize": "374KB"}, "id": "ref25", "text": "B. A. Kitchenham, \"A procedure for analyzing unbalanced datasets\", <em>IEEE Trans. Software Engineering</em>, vol. 24, no. 4, pp. 278-301, Apr. 1998.", "refType": "biblio"}, {"title": "Introduction", "context": [{"text": " A software fault is defined as a defect in an executable software product that may cause a failure [26].", "sec": "sec1", "part": "1"}], "order": "26", "id": "ref26", "text": "M. R. Lyu, \"Introduction\" in Handbook of Software Reliability Engineering, pp. 3-25, 1996, McGraw-Hill.", "refType": "biblio"}, {"title": "System acquisition based on software product assessment", "context": [{"text": " EMERALD was developed by Nortel Networks in partnership with Bell Canada [27] et al.", "sec": "sec3a", "part": "1"}], "order": "27", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The procurement of complex software product involves many risks. To properly assess and manage those risks, Bell Canada has developed methods and tools that combine process capability assessment with a static analysis based software product assessment. This paper describes the software product assessment process that is part of our risk management approach. The process and the tools used to conduct a product assessment are described. The assessment is in part based on static source code metrics ...", "documentLink": "/document/493417", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=493417", "pdfSize": "1102KB"}, "id": "ref27", "text": "J. Mayrand, F. Coallier, \"System acquisition based on software product assessment\", <em>Proc. 18th Int. Conf. Software Engineering</em>, pp. 210-219, 1996.", "refType": "biblio"}, {"title": "The detection of fault-prone programs", "context": [{"text": "discriminant analysis [21], [28];.", "sec": "sec1", "part": "1"}], "order": "28", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The use of the statistical technique of discriminant analysis as a tool for the detection of fault-prone programs is explored. A principal-components procedure was employed to reduce simple multicollinear complexity metrics to uncorrelated measures on orthogonal complexity domains. These uncorrelated measures were then used to classify programs into alternate groups, depending on the metric values of the program. The criterion variable for group determination was a quality measure of faults or c...", "documentLink": "/document/135775", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=135775", "pdfSize": "1025KB"}, "id": "ref28", "text": "J. C. Munson, T. M. Khoshgoftaar, \"The detection of fault-prone programs\", <em>IEEE Trans. Software Engineering</em>, vol. 18, no. 5, pp. 423-433, May 1992.", "refType": "biblio"}, {"title": "Operational profiles in software reliability engineering", "context": [{"text": " Reliability is usually measured from the user's viewpoint in terms of time between failures, according to an operational profile [29].", "sec": "sec1", "part": "1"}], "order": "29", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A systematic approach to organizing the process of determining the operational profile for guiding software development is presented. The operational profile is a quantitative characterization of how a system will be used that shows how to increase productivity and reliability and speed development by allocating development resources to function on the basis of use. Using an operational profile to guide testing ensures that if testing is terminated and the software is shipped because of schedule...", "documentLink": "/document/199724", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=199724", "pdfSize": "2140KB"}, "id": "ref29", "text": "J. D. Musa, \"Operational profiles in software reliability engineering\", <em>IEEE Software</em>, vol. 10, no. 2, pp. 14-32, Mar. 1993.", "refType": "biblio"}, {"title": "Application of multivariate analysis for software fault prediction", "context": [{"text": "discriminant coordinates [30];.", "sec": "sec1", "part": "1"}], "order": "30", "links": {"crossRefLink": "http://dx.doi.org/10.1023/B:SQJO.0000042059.16470.f0", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref30", "text": "N. Ohlsson, M. Zhao, M. Helander, \"Application of multivariate analysis for software fault prediction\", <em>Software Quality J.</em>, vol. 7, pp. 51-66, 1998.", "refType": "biblio"}, {"title": "Empirically guided software development using metric-based classification trees", "context": [{"text": "References [31], [37] model software quality using the \\${\\tt ID3}\\$ algorithm [32] to build trees using an entropy-based criterion.", "sec": "sec1", "part": "1"}], "order": "31", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The identification of high-risk components early in the life cycle is addressed. A solution that casts this as a classification problem is examined. The proposed approach derives models of problematic components, based on their measurable attributes and those of their development processes. The models provide a basis for forecasting which components are likely to share the same high-risk properties, such as being error-prone or having a high development cost. Developers can use these classificat...", "documentLink": "/document/50773", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=50773", "pdfSize": "840KB"}, "id": "ref31", "text": "A. A. Porter, R. W. Selby, \"Empirically guided software development using metric-based classification trees\", <em>IEEE Software</em>, vol. 7, no. 2, pp. 46-54, Mar. 1990.", "refType": "biblio"}, {"title": "Induction of decision trees", "context": [{"text": "References [31], [37] model software quality using the \\${\\tt ID3}\\$ algorithm [32] to build trees using an entropy-based criterion.", "sec": "sec1", "part": "1"}], "order": "32", "links": {"crossRefLink": "http://dx.doi.org/10.1007/BF00116251", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref32", "text": "J. R. Quinlan, \"Induction of decision trees\", <em>Machine Learning</em>, vol. 1, pp. 81-106, 1986.", "refType": "biblio"}, {"title": "TREEDISC macro (beta version)", "context": [{"text": " The authors' research group has classified fault-prone modules with the \\${\\tt CART}\\$ algorithm [3], [17], [22] and the \\${\\tt TREEDISC}\\$ algorithm [23], [33] which is a refinement of the \\${\\tt CHAID}\\$ algorithm [12]. \\${\\tt S{\\hbox{-}}plus}\\$ also has an algorithm for constructing classification trees [5].", "sec": "sec1", "part": "1"}], "order": "33", "id": "ref33", "text": "<em>TREEDISC macro (beta version)</em>, 1995 Technical report, SAS Institute. Documentation with macros.", "refType": "biblio"}, {"title": "Software metrics validation: Space Shuttle flight software example", "context": [{"text": "discriminant power [34], [35];.", "sec": "sec1", "part": "1"}], "order": "34", "links": {"crossRefLink": "http://dx.doi.org/10.1007/BF02249054", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref34", "text": "N. F. Schneidewind, \"Software metrics validation: Space Shuttle flight software example\", <em>Annals of Software Engineering</em>, vol. 1, pp. 287-309, 1995.", "refType": "biblio"}, {"title": "Software metrics model for integrating quality control and prediction", "context": [{"text": "discriminant power [34], [35];.", "sec": "sec1", "part": "1"}], "order": "35", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A model is developed that is used to validate and apply metrics for quality control and quality prediction, with the objective of using metrics as early indicators of software quality problems. Metrics and quality factor data from the Space Shuttle flight software are used as an example. Our approach is to integrate quality control and prediction in a single model and to validate metrics with respect to a quality factor. Boolean discriminant functions (BDFs) were developed for use in the quality...", "documentLink": "/document/630888", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=630888", "pdfSize": "1170KB"}, "id": "ref35", "text": "N. F. Schneidewind, \"Software metrics model for integrating quality control and prediction\", <em>Proc. 8th Int. Symp. Software Reliability Engineering</em>, pp. 402-415, 1997.", "refType": "biblio"}, {"title": "Multivariate Observations", "context": [{"text": " For example, if one chooses \\$\\zeta\\$ such that \\$\\Pr\\{{\\rm fp}\\vert{\\rm nfp}\\} = \\Pr\\{{\\rm nfp}\\vert{\\rm fp}\\}\\$, then the larger misclassification rate is minimized [36].", "sec": "sec2", "part": "1"}, {"text": " Equation (3) is a minimum-cost rule [13], [36] whenHowever, the costs of misclassifications are often difficult to estimate.", "sec": "sec2", "part": "1"}], "order": "36", "links": {"crossRefLink": "http://dx.doi.org/10.1002/9780470316641", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref36", "text": "G. A. F. Seber, Multivariate Observations, 1984.", "refType": "biblio"}, {"title": "Learning from examples: Generation and evaluation of decision trees for software resource analysis", "context": [{"text": "classification trees [37].", "sec": "sec1", "part": "1"}, {"text": "References [31], [37] model software quality using the \\${\\tt ID3}\\$ algorithm [32] to build trees using an entropy-based criterion.", "sec": "sec1", "part": "1"}], "order": "37", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A general solution method for the automatic generation of decision (or classification) trees is investigated. The approach is to provide insights through in-depth empirical characterization and evaluation of decision trees for one problem domain, specifically, that of software resource data analysis. The purpose of the decision trees is to identify classes of objects (software modules) that had high development effort, i.e. in the uppermost quartile relative to past data. Sixteen software system...", "documentLink": "/document/9061", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=9061", "pdfSize": "1480KB"}, "id": "ref37", "text": "R. W. Selby, A. A. Porter, \"Learning from examples: Generation and evaluation of decision trees for software resource analysis\", <em>IEEE Trans. Software Engineering</em>, vol. 14, no. 12, pp. 1743-1756, Dec. 1988.", "refType": "biblio"}, {"title": "Building software quality classification trees: Approach, experimentation, evaluation", "context": [{"text": " Reference [38] extended the \\${\\tt ID3}\\$ algorithm by applying Akaike Information Criterion procedures [1]to prune the tree.", "sec": "sec1", "part": "1"}], "order": "38", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A methodology for generating an optimum software quality classification tree using software complexity metrics to discriminate between high-quality modules and low-quality modules is proposed. The process of tree generation is an application of the AIC (Akaike Information Criterion) procedures to the binomial distribution. AIC procedures are based on maximum likelihood estimation and the least number of complexity metrics. It is an improvement of the software quality classification tree generati...", "documentLink": "/document/630869", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=630869", "pdfSize": "1133KB"}, "id": "ref38", "text": "R. Takahashi, Y. Muraoka, Y. Nakamura, \"Building software quality classification trees: Approach experimentation evaluation\", <em>Proc. 8th Int. Symp. Software Reliability Engineering</em>, pp. 222-233, 1997.", "refType": "biblio"}, {"title": "Measurement and defect modeling for a legacy software system", "context": [{"text": " Case studies in [9] and [39] used the \\${\\tt S{\\hbox{-}}Plus}\\$ regression tree algorithm to predict the number of faults.", "sec": "sec1", "part": "1"}], "order": "39", "links": {"crossRefLink": "http://dx.doi.org/10.1007/BF02249047", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref39", "text": "J. Troster, J. Tian, \"Measurement and defect modeling for a legacy software system\", <em>Annals of Software Engineering</em>, vol. 1, pp. 95-118, 1995.", "refType": "biblio"}, {"title": "Experimental software engineering: A report on the state of the art", "context": [{"text": "For an empirical study to be credible, the software engineering community demands that the subject be a system with the following characteristics [40]:.", "sec": "sec3a", "part": "1"}], "order": "40", "links": {"acmLink": "http://dx.doi.org/10.1145/225014.225040", "abstract": "The goal of this session is to make the software engineering community aware of the opportunities that exist to pursue such an experimental approach. In the remainder of the essay, we describe an emerging model for empirical work and the language for discussing it. We then focus on the current state of experimental software engineering, the road blocks barring effective progress, and what developers and researchers can do to remove them.", "pdfSize": "213KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref40", "text": "L. G. Votta, A. A. Porter, \"Experimental software engineering: A report on the state of the art\", <em>Proc. 17th Int. Conf. Software Engineering</em>, pp. 277-279, 1995.", "refType": "biblio"}, {"title": "Modeling software quality with <formula><tex>${\\tt TREEDISC}$</tex></formula>", "context": [{"text": "With various classification techniques, a tradeoff is observed between Types I and II misclassification rates as functions of \\$\\zeta\\$ [15], [19], [22], [41].", "sec": "sec2", "part": "1"}], "order": "41", "id": "ref41", "text": "X. Yuan, <em>Modeling software quality with <formula><tex>\\${tt TREEDISC}\\$</tex></formula></em>, Dec. 1999.", "refType": "biblio"}], "citations": {"paperCitations": {"nonIeee": [{"title": "ATTRIBUTE SELECTION USING ROUGH SETS IN SOFTWARE QUALITY CLASSIFICATION", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218539309003307", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "TAGHI M. KHOSHGOFTAAR, LOFTON A. BULLARD, KEHAN GAO, \"ATTRIBUTE SELECTION USING ROUGH SETS IN SOFTWARE QUALITY CLASSIFICATION\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 16, pp. 73, 2009, ISSN 0218-5393.", "order": "1"}, {"title": "A RULE-BASED SOFTWARE QUALITY CLASSIFICATION MODEL", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218539308003064", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "TAGHI M. KHOSHGOFTAAR, LOFTON A. BULLARD, KEHAN GAO, \"A RULE-BASED SOFTWARE QUALITY CLASSIFICATION MODEL\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 15, pp. 247, 2008, ISSN 0218-5393.", "order": "2"}, {"title": "An ant colony optimization algorithm to improve software quality prediction models: Case of class stability", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.infsof.2010.11.013", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "D. Azar, J. Vybihal, \"An ant colony optimization algorithm to improve software quality prediction models: Case of class stability\", <em>Information and Software Technology</em>, vol. 53, pp. 388, 2011, ISSN 09505849.", "order": "3"}, {"title": "STATISTICAL COMPARISON OF MODELLING METHODS FOR SOFTWARE MAINTAINABILITY PREDICTION", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0218194013500198", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "ARVINDER KAUR, KAMALDEEP KAUR, \"STATISTICAL COMPARISON OF MODELLING METHODS FOR SOFTWARE MAINTAINABILITY PREDICTION\", <em>International Journal of Software Engineering and Knowledge Engineering</em>, vol. 23, pp. 743, 2013, ISSN 0218-1940.", "order": "4"}, {"title": "EMPIRICAL EVALUATION OF CLASSIFIERS FOR SOFTWARE RISK MANAGEMENT", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0219622009003715", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "YI PENG, GANG KOU, GUOXUN WANG, HONGGANG WANG, FRANZ I. S. KO, \"EMPIRICAL EVALUATION OF CLASSIFIERS FOR SOFTWARE RISK MANAGEMENT\", <em>International Journal of Information Technology & Decision Making</em>, vol. 08, pp. 749, 2009, ISSN 0219-6220.", "order": "5"}, {"title": "Data-mining modeling for the prediction of wear on forming-taps in the threading of steel components", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.jcde.2016.06.002", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Andres Bustillo, Luis N. L\u00f3pez de Lacalle, Asier Fern\u00e1ndez-Valdivielso, Pedro Santos, \"Data-mining modeling for the prediction of wear on forming-taps in the threading of steel components\", <em>Journal of Computational Design and Engineering</em>, pp. , 2016, ISSN 22884300.", "order": "6"}, {"title": "Software quality assessment using a multi-strategy classifier", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.ins.2010.11.028", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Taghi M. Khoshgoftaar, Yudong Xiao, Kehan Gao, \"Software quality assessment using a multi-strategy classifier\", <em>Information Sciences</em>, vol. 259, pp. 555, 2014, ISSN 00200255.", "order": "7"}, {"title": "Comparing the effectiveness of several modeling methods for fault prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10664-009-9111-2", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Elaine J. Weyuker, Thomas J. Ostrand, Robert M. Bell, \"Comparing the effectiveness of several modeling methods for fault prediction\", <em>Empirical Software Engineering</em>, pp. , 2009, ISSN 15737616.", "order": "8"}, {"title": "Cross-Disciplinary Applications of Artificial Intelligence and Pattern Recognition", "links": {"crossRefLink": "http://dx.doi.org/10.4018/978-1-61350-429-1.ch023", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Ruchika Malhotra, Arvinder Kaur, Yogesh Singh, pp. 428, 2012, ISBN 9781613504291.", "order": "9"}, {"title": "An improved Pareto distribution for modelling the fault data of open source software", "links": {"crossRefLink": "http://dx.doi.org/10.1002/stvr.1504", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Shao-Pu Luan, Chin-Yu Huang, \"An improved Pareto distribution for modelling the fault data of open source software\", <em>Software Testing Verification and Reliability</em>, vol. 24, pp. 416, 2014, ISSN 09600833.", "order": "10"}, {"title": "Assessment of a New Three-Group Software Quality Classification Technique: An Empirical Case Study", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10664-004-6191-x", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Taghi M. Khoshgoftaar, Naeem Seliya, Kehan Gao, \"Assessment of a New Three-Group Software Quality Classification Technique: An Empirical Case Study\", <em>Empirical Software Engineering</em>, vol. 10, pp. 183, 2005, ISSN 1382-3256.", "order": "11"}, {"title": "Statistical models vs. expert estimation for fault prediction in modified code \u2013 an industrial case study", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.jss.2006.12.548", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Piotr Tomaszewski, Jim H\u00e5kansson, H\u00e5kan Grahn, Lars Lundberg, \"Statistical models vs. expert estimation for fault prediction in modified code \u2013 an industrial case study\", <em>Journal of Systems and Software</em>, vol. 80, pp. 1227, 2007, ISSN 01641212.", "order": "12"}, {"title": "Searching for rules to detect defective modules: A subgroup discovery approach", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.ins.2011.01.039", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "D. Rodr\u00edguez, R. Ruiz, J.C. Riquelme, J.S. Aguilar\u2013Ruiz, \"Searching for rules to detect defective modules: A subgroup discovery approach\", <em>Information Sciences</em>, vol. 191, pp. 14, 2012, ISSN 00200255.", "order": "13"}, {"title": "Multi-instance learning for software quality estimation in object-oriented systems: a case study", "links": {"crossRefLink": "http://dx.doi.org/10.1631/jzus.C0910084", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Peng Huang, Jie Zhu, \"Multi-instance learning for software quality estimation in object-oriented systems: a case study\", <em>Journal of Zhejiang University SCIENCE C</em>, vol. 11, pp. 130, 2010, ISSN 1869196X.", "order": "14"}, {"title": "Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10664-008-9082-8", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Elaine J. Weyuker, Thomas J. Ostrand, Robert M. Bell, \"Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models\", <em>Empirical Software Engineering</em>, vol. 13, pp. 539, 2008, ISSN 15737616.", "order": "15"}, {"title": "A comparative study of fault density prediction in aspect-oriented systems using MLP, RBF, KNN, RT, DENFIS and SVR models", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10462-012-9348-9", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Mahmoud O. Elish, \"A comparative study of fault density prediction in aspect-oriented systems using MLP RBF KNN RT DENFIS and SVR models\", <em>Artificial Intelligence Review</em>, vol. 42, pp. 695, 2014, ISSN 0269-2821.", "order": "16"}, {"title": "Identifying influential metrics in the combined metrics approach of fault prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1186/2193-1801-2-627", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Rinkaj Goyal, Pravin Chandra, Yogesh Singh, \"Identifying influential metrics in the combined metrics approach of fault prediction\", <em>SpringerPlus</em>, vol. 2, pp. 627, 2013, ISSN 2193-1801.", "order": "17"}, {"title": "User preferences based software defect detection algorithms selection using MCDM", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.ins.2010.04.019", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Yi Peng, Guoxun Wang, Honggang Wang, \"User preferences based software defect detection algorithms selection using MCDM\", <em>Information Sciences</em>, vol. 191, pp. 3, 2012, ISSN 00200255.", "order": "18"}, {"title": "An investigation on the effect of cross project data for prediction accuracy", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s13198-016-0439-x", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": " Aarti, Geeta Sikka, Renu Dhir, \"An investigation on the effect of cross project data for prediction accuracy\", <em>International Journal of System Assurance Engineering and Management</em>, pp. , 2016, ISSN 0975-6809.", "order": "19"}, {"title": "On Software Defect Prediction Using Machine Learning", "links": {"crossRefLink": "http://dx.doi.org/10.1155/2014/785435", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Jinsheng Ren, Ke Qin, Ying Ma, Guangchun Luo, \"On Software Defect Prediction Using Machine Learning\", <em>Journal of Applied Mathematics</em>, vol. 2014, pp. 1, 2014, ISSN 1110-757X.", "order": "20"}, {"title": "Comparative analysis of J48 with statistical and machine learning methods in predicting fault-prone classes using object-oriented systems", "links": {"crossRefLink": "http://dx.doi.org/10.1080/09720510.2011.10701574", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Yogesh Singh, Arvinder Kaur, Ruchika Malhotra, \"Comparative analysis of J48 with statistical and machine learning methods in predicting fault-prone classes using object-oriented systems\", <em>Journal of Statistics and Management Systems</em>, vol. 14, pp. 595, 2011, ISSN 0972-0510.", "order": "21"}, {"title": "A study of subgroup discovery approaches for defect prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.infsof.2013.05.002", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Daniel Rodriguez, Roberto Ruiz, Jose C. Riquelme, Rachel Harrison, \"A study of subgroup discovery approaches for defect prediction\", <em>Information and Software Technology</em>, vol. 55, pp. 1810, 2013, ISSN 09505849.", "order": "22"}, {"title": "Modelling Laser Milling of Microcavities for the Manufacturing of DES with Ensembles", "links": {"crossRefLink": "http://dx.doi.org/10.1155/2014/439091", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Pedro Santos, Daniel Teixidor, Jesus Maudes, Joaquim Ciurana, \"Modelling Laser Milling of Microcavities for the Manufacturing of DES with Ensembles\", <em>Journal of Applied Mathematics</em>, vol. 2014, pp. 1, 2014, ISSN 1110-757X.", "order": "23"}, {"title": "On the use of calling structure information to improve fault prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10664-011-9165-9", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Yonghee Shin, Robert M Bell, Thomas J Ostrand, Elaine J Weyuker, \"On the use of calling structure information to improve fault prediction\", <em>Empirical Software Engineering</em>, vol. 17, pp. 390, 2012, ISSN 1382-3256.", "order": "24"}, {"title": "ENSEMBLE OF SOFTWARE DEFECT PREDICTORS: AN AHP-BASED EVALUATION METHOD", "links": {"crossRefLink": "http://dx.doi.org/10.1142/S0219622011004282", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "YI PENG, GANG KOU, GUOXUN WANG, WENSHUAI WU, YONG SHI, \"ENSEMBLE OF SOFTWARE DEFECT PREDICTORS: AN AHP-BASED EVALUATION METHOD\", <em>International Journal of Information Technology & Decision Making</em>, vol. 10, pp. 187, 2011, ISSN 0219-6220.", "order": "25"}, {"title": "Predicting defect-prone software modules using support vector machines", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.jss.2007.07.040", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Karim O. Elish, Mahmoud O. Elish, \"Predicting defect-prone software modules using support vector machines\", <em>Journal of Systems and Software</em>, vol. 81, pp. 649, 2008, ISSN 01641212.", "order": "26"}, {"title": "Asymmetric Learning Based on Kernel Partial Least Squares for Software Defect Prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1587/transinf.E95.D.2006", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Guangchun LUO, Ying MA, Ke QIN, \"Asymmetric Learning Based on Kernel Partial Least Squares for Software Defect Prediction\", <em>IEICE Transactions on Information and Systems</em>, vol. E95.D, pp. 2006, 2012, ISSN 0916-8532.", "order": "27"}, {"title": "Improving Fault Detection in Modified Code \u2014 A Study from the Telecommunication Industry", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s11390-007-9053-3", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Piotr Tomaszewski, Lars Lundberg, H\u00e5kan Grahn, \"Improving Fault Detection in Modified Code \u2014 A Study from the Telecommunication Industry\", <em>Journal of Computer Science and Technology</em>, vol. 22, pp. 397, 2007, ISSN 1000-9000.", "order": "28"}, {"title": "Threshold-based feature selection techniques for high-dimensional bioinformatics data", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s13721-012-0006-6", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Jason Hulse, Taghi M. Khoshgoftaar, Amri Napolitano, Randall Wald, \"Threshold-based feature selection techniques for high-dimensional bioinformatics data\", <em>Network Modeling Analysis in Health Informatics and Bioinformatics</em>, pp. , 2012, ISSN 21926670.", "order": "29"}, {"title": "The limited impact of individual developer data on software defect prediction", "links": {"crossRefLink": "http://dx.doi.org/10.1007/s10664-011-9178-4", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Robert M. Bell, Thomas J. Ostrand, Elaine J. Weyuker, \"The limited impact of individual developer data on software defect prediction\", <em>Empirical Software Engineering</em>, vol. 18, pp. 478, 2013, ISSN 1382-3256.", "order": "30"}], "ieee": [{"title": "We're Finding Most of the Bugs, but What are We Missing?", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5477073", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5477073", "pdfSize": "206KB"}, "displayText": "Elaine J. Weyuker, Robert M. Bell, Thomas J. Ostrand, \"We're Finding Most of the Bugs but What are We Missing?\", <em>Software Testing Verification and Validation (ICST) 2010 Third International Conference on</em>, pp. 313-322, 2010.", "order": "1"}, {"title": "Anomaly-based Fault Detection System in Distributed System", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4297016", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4297016", "pdfSize": "531KB"}, "displayText": "Byoung uk Kim, Salim Hariri, \"Anomaly-based Fault Detection System in Distributed System\", <em>Software Engineering Research Management & Applications 2007. SERA 2007. 5th ACIS International Conference on</em>, pp. 782-789, 2007.", "order": "2"}, {"title": "Using Developer Information as a Factor for Fault Prediction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4273264", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4273264", "pdfSize": "138KB"}, "displayText": "Elaine J. Weyuker, Thomas J. Ostrand, Robert M. Bell, \"Using Developer Information as a Factor for Fault Prediction\", <em>Predictor Models in Software Engineering 2007. PROMISE'07: ICSE Workshops 2007. International Workshop on</em>, pp. 8-8, 2007.", "order": "3"}, {"title": "Assessment of a Multi-Strategy Classifier for an Embedded Software System", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4031956", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4031956", "pdfSize": "223KB"}, "displayText": "Taghi M. Khoshgoftaar, Kehan Gao, \"Assessment of a Multi-Strategy Classifier for an Embedded Software System\", <em>Tools with Artificial Intelligence 2006. ICTAI '06. 18th IEEE International Conference on</em>, pp. 651-658, 2006, ISSN 1082-3409.", "order": "4"}, {"title": "Replicate, Replicate, Replicate", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6148339", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6148339", "pdfSize": "168KB"}, "displayText": "Elaine J. Weyuker, Robert M. Bell, Thomas J. Ostrand, \"Replicate Replicate Replicate\", <em>Replication in Empirical Software Engineering Research (RESER) 2011 Second International Workshop on</em>, pp. 71-77, 2011.", "order": "5"}, {"title": "Toward the Use of Automated Static Analysis Alerts for Early Identification of Vulnerability- and Attack-prone Components", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4271764", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4271764", "pdfSize": "196KB"}, "displayText": "Michael, Laurie Williams, \"Toward the Use of Automated Static Analysis Alerts for Early Identification of Vulnerability- and Attack-prone Components\", <em>Internet Monitoring and Protection 2007. ICIMP 2007. Second International Conference on</em>, pp. 18-18, 2007.", "order": "6"}, {"title": "The accuracy of fault prediction in modified code - statistical model vs. expert estimation", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1607383", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1607383", "pdfSize": "305KB"}, "displayText": "P. Tomaszewski, J. Hakansson, L. Lundberg, H. Grahn, \"The accuracy of fault prediction in modified code - statistical model vs. expert estimation\", <em>Engineering of Computer Based Systems 2006. ECBS 2006. 13th Annual IEEE International Symposium and Workshop on</em>, pp. 10 pp.-343, 2006.", "order": "7"}, {"title": "DRS: A Developer Risk Metric for Better Predicting Software Fault-Proneness", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7335952", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7335952", "pdfSize": "215KB"}, "displayText": "Shou-Yu Lee, Yihao Li, \"DRS: A Developer Risk Metric for Better Predicting Software Fault-Proneness\", <em>Trustworthy Systems and Their Applications (TSA) 2015 Second International Conference on</em>, pp. 120-127, 2015.", "order": "8"}, {"title": "Toward Comprehensible Software Fault Prediction Models Using Bayesian Network Classifiers", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6175912", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6175912", "pdfSize": "4117KB"}, "displayText": "Karel Dejaeger, Thomas Verbraken, Bart Baesens, \"Toward Comprehensible Software Fault Prediction Models Using Bayesian Network Classifiers\", <em>Software Engineering IEEE Transactions on</em>, vol. 39, pp. 237-257, 2013, ISSN 0098-5589.", "order": "9"}, {"title": "Application of Random Forest in Predicting Fault-Prone Classes", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4736919", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4736919", "pdfSize": "227KB"}, "displayText": "Arvinder Kaur, Ruchika Malhotra, \"Application of Random Forest in Predicting Fault-Prone Classes\", <em>Advanced Computer Theory and Engineering 2008. ICACTE '08. International Conference on</em>, pp. 37-43, 2008.", "order": "10"}, {"title": "Comparing fault-proneness estimation models", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1467901", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1467901", "pdfSize": "506KB"}, "displayText": "P. Bellini, I. Bruno, P. Nesi, D. Rogai, \"Comparing fault-proneness estimation models\", <em>Engineering of Complex Computer Systems 2005. ICECCS 2005. Proceedings. 10th IEEE International Conference on</em>, pp. 205-214, 2005.", "order": "11"}, {"title": "Static analysis tools as early indicators of pre-release defect density", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1553604", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1553604", "pdfSize": "1572KB"}, "displayText": "N. Nagappan, T. Ball, \"Static analysis tools as early indicators of pre-release defect density\", <em>Software Engineering 2005. ICSE 2005. Proceedings. 27th International Conference on</em>, pp. 580-586, 2005, ISSN 0270-5257.", "order": "12"}, {"title": "Finding Defective Software Modules by Means of Data Mining Techniques", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5336637", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5336637", "pdfSize": "491KB"}, "displayText": "Jose C Riquelme, Roberto Ruiz, Daniel Rodriguez, Jesus Jesus S Aguilar Ruiz, \"Finding Defective Software Modules by Means of Data Mining Techniques\", <em>Latin America Transactions IEEE (Revista IEEE America Latina)</em>, vol. 7, pp. 377-382, 2009, ISSN 1548-0992.", "order": "13"}, {"title": "Count Models for Software Quality Estimation", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4220787", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4220787", "pdfSize": "423KB"}, "displayText": "Taghi M. Khoshgoftaar, Kehan Gao, \"Count Models for Software Quality Estimation\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 212-222, 2007, ISSN 0018-9529.", "order": "14"}, {"title": "A Multi-Objective Software Quality Classification Model Using Genetic Programming", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4220788", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4220788", "pdfSize": "242KB"}, "displayText": "Taghi M. Khoshgoftaar, Yi Liu, \"A Multi-Objective Software Quality Classification Model Using Genetic Programming\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 237-245, 2007, ISSN 0018-9529.", "order": "15"}, {"title": "Reducing overfitting in genetic programming models for software quality classification", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1281730", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1281730", "pdfSize": "1010KB"}, "displayText": "Yi Liu, T. Khoshgoftaar, \"Reducing overfitting in genetic programming models for software quality classification\", <em>High Assurance Systems Engineering 2004. Proceedings. Eighth IEEE International Symposium on</em>, pp. 56-65, 2004, ISSN 1530-2059.", "order": "16"}, {"title": "Using Coding-Based Ensemble Learning to Improve Software Defect Prediction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6392473", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6392473", "pdfSize": "1451KB"}, "displayText": "Zhongbin Sun, Qinbao Song, Xiaoyan Zhu, \"Using Coding-Based Ensemble Learning to Improve Software Defect Prediction\", <em>Systems Man and Cybernetics Part C: Applications and Reviews IEEE Transactions on</em>, vol. 42, pp. 1806-1817, 2012, ISSN 1094-6977.", "order": "17"}, {"title": "Comparing high-change modules and modules with the highest measurement values in two large-scale open-source products", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1498769", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1498769", "pdfSize": "2779KB"}, "displayText": "A.G. Koru, J. Tian, \"Comparing high-change modules and modules with the highest measurement values in two large-scale open-source products\", <em>Software Engineering IEEE Transactions on</em>, vol. 31, pp. 625-642, 2005, ISSN 0098-5589.", "order": "18"}, {"title": "Predicting Attack-prone Components", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4815350", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4815350", "pdfSize": "415KB"}, "displayText": "Michael Gegick, Pete Rotella, Laurie Williams, \"Predicting Attack-prone Components\", <em>Software Testing Verification and Validation 2009. ICST '09. International Conference on</em>, pp. 181-190, 2009.", "order": "19"}, {"title": "Mining Data with Rare Events: A Case Study", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4410370", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4410370", "pdfSize": "668KB"}, "displayText": "Chris Seiffert, Taghi M. Khoshgoftaar, Jason Van Hulse, Amri Napolitano, \"Mining Data with Rare Events: A Case Study\", <em>Tools with Artificial Intelligence 2007. ICTAI 2007. 19th IEEE International Conference on</em>, vol. 2, pp. 132-139, 2007, ISSN 1082-3409.", "order": "20"}, {"title": "Increasing the efficiency of fault detection in modified code", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1607179", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1607179", "pdfSize": "324KB"}, "displayText": "P. Tomaszewski, L. Lundberg, H. Grahn, \"Increasing the efficiency of fault detection in modified code\", <em>Software Engineering Conference 2005. APSEC '05. 12th Asia-Pacific</em>, pp. 10 pp.-, 2005, ISSN 1530-1362.", "order": "21"}, {"title": "A Text Filtering Based Approach to Classify Bug Injected and Fixed Changes", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6913385", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6913385", "pdfSize": "265KB"}, "displayText": "Akihisa Yamada, Osamu Mizuno, \"A Text Filtering Based Approach to Classify Bug Injected and Fixed Changes\", <em>Advanced Applied Informatics (IIAIAAI) 2014 IIAI 3rd International Conference on</em>, pp. 680-686, 2014.", "order": "22"}, {"title": "Comparative Analysis of DNA Microarray Data through the Use of Feature Selection Techniques", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5708826", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5708826", "pdfSize": "243KB"}, "displayText": "David J. Dittman, Taghi M. Khoshgoftaar, Randall Wald, Jason Van Hulse, \"Comparative Analysis of DNA Microarray Data through the Use of Feature Selection Techniques\", <em>Machine Learning and Applications (ICMLA) 2010 Ninth International Conference on</em>, pp. 147-152, 2010.", "order": "23"}, {"title": "Random forest: A reliable tool for patient response prediction", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6112389", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6112389", "pdfSize": "854KB"}, "displayText": "David Dittman, Taghi M. Khoshgoftaar, Randall Wald, Amri Napolitano, \"Random forest: A reliable tool for patient response prediction\", <em>Bioinformatics and Biomedicine Workshops (BIBMW) 2011 IEEE International Conference on</em>, pp. 289-296, 2011.", "order": "24"}, {"title": "An application of a rule-based model in software quality classification", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4457232", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4457232", "pdfSize": "541KB"}, "displayText": "Taghi M. Khoshgoftaar, Lofton A. Bullard, Kehan Gao, \"An application of a rule-based model in software quality classification\", <em>Machine Learning and Applications 2007. ICMLA 2007. Sixth International Conference on</em>, pp. 204-210, 2007.", "order": "25"}]}, "patentCitationCount": "2", "contentType": "periodicals", "patentCitations": [{"ipcClassList": "G06F0094400", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8166459.pdf", "appNum": "12038175", "id": "08166459", "patentAbstract": "In one embodiment the present invention includes a computer-implemented method of self debugging a computer program operating in a distributed processing environment. The method includes detecting a fault in a plurality of processing devices and classifying the fault according to fault classifications. The fault classifications have corresponding responses. The method further includes executing one of the responses in accordance with the fault having been classified. The method further includes revising the computer program according to the response. This method may be embodied in a computer program or executed by a computer system. In this manner, the computer program performs self debugging. </p>", "title": "APPARATUS AND METHOD OF GENERATING SELF DEBUGGING COMPUTER SOFTWARE", "patentNumber": "8166459", "filingDate": "27 February 2008", "assignees": ["SAP AG"], "ipcClasses": ["G06F0094400"], "grantDate": "24 April 2012", "inventors": "Suenbuel, Asuman", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8166459.PN.&OS=PN/8166459", "pocClasses": ["717124000", "714025000", "714038100", "714038140", "717103000", "717106000", "717126000", "717139000"], "pocClassList": "717124000, 714025000, 714038100, 714038140, 717103000, 717106000, 717126000, 717139000", "order": "1"}, {"ipcClassList": "G06F0110000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8151146.pdf", "appNum": "12137282", "id": "08151146", "patentAbstract": "A method, apparatus, and computer-readable medium for predicting the fault-proneness of code units (files, modules, packages, and the like) of large-scale, long-lived software systems. The method collects information about the code units and the development process from previous releases, and formats this information for input to an analysis stage. The tool then performs a statistical regression analysis on the collected data, and formulates a model to predict fault counts for code units of the current and future releases. Finally, the method computes an expected fault count for each code unit in the current release by applying the formulated model to data from the current release. The expected fault counts are used to rank the release units in descending order of fault-proneness so that debugging efforts and resources can be optimized. </p>", "title": "TOOL FOR PREDICTING FAULT PRONE SOFTWARE FILES", "patentNumber": "8151146", "filingDate": "11 June 2008", "assignees": ["ATANDT INTELLECTUAL PROPERTY I LP"], "ipcClasses": ["G06F0110000"], "grantDate": "03 April 2012", "inventors": "Ostrand, Thomas; Bell, Robert; Gauld, Andrew; Weyuker, Elaine", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8151146.PN.&OS=PN/8151146", "pocClasses": ["714047100"], "pocClassList": "714047100", "order": "2"}], "lastupdate": "2016-08-04T10:03:14", "isEarlyAccess": false, "publisher": "IEEE", "title": "Using regression trees to classify fault-prone software modules", "nonIeeeCitationCount": "32", "publicationNumber": "24", "formulaStrippedArticleTitle": "Using regression trees to classify fault-prone software modules", "mediaPath": "/mediastore/IEEE/content/media/24/22383/1044344", "mlTime": "PT0.279858S", "ieeeCitationCount": "25"}}