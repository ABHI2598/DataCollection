{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/994926/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Control-flow checking by software signatures", "doi": "10.1109/24.994926", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "994926", "endPage": "122", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/21459/994926", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "21459", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "111", "standardTitle": "Control-flow checking by software signatures", "publicationDate": "March 2002", "pdfPath": "/iel5/24/21459/00994926.pdf", "mlTime": "PT0.106425S", "publicationNumber": "24", "copyrightYear": "2002", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Nahmsuk Oh received the B.E. degree (1996) in electronics engineering from Yonsei University, Korea; the M.S.E.E. degree (1998), the Ph.D. degree in electrical engineering and the Ph.D. minor in computer science (2001), all from Stanford University.", "He is currently with Synopsys Inc., Mountain View, CA as a Senior R&D Engineer in the Test Automation Products Group. His research interests include fault-tolerant computing, computer architecture, logic synthesis, and VLSI design/test.", "Dr. Oh is a member of the IEEE and the Computer Society."]}, "affiliation": "Dept. of Electr. Eng. & Comput. Sci., Stanford Univ., CA, USA", "name": "N. Oh"}, {"bio": {"p": ["Philip P. Shirvani received the B.S. degree (1991) in electrical engineering from Sharif University of Technology, Tehran, Iran; and the M.S. (1996) and Ph.D. degrees in electrical engineering from Stanford University.", "He is an Assistant Director for the Stanford ARGOS Project at Center for Reliable Computing, Stanford University. His research interests include computer architecture, fault-tolerant computing, and VLSI design and test. He Dr. Shirvani is a member of the IEEE and the Computer Society."]}, "name": "P.P. Shirvani"}, {"bio": {"p": ["Edward J. McCluskey received the A.B. (summa cum laude, 1953) in mathematics and physics from Bowdoin College, and the B.S. (1953), M.S. (1953), and Sc.D. (1956) degrees in electrical engineering from MIT. The degree of Doctor Honoris Causa (1994) was awarded by the Institut National Polytechnique de Grenoble.", "He worked on electronic switching systems at the Bell Telephone Laboratories in 1955\u20131959. In 1959, he moved to Princeton University, where he was Professor of Electrical Engineering and Director of the University Computer Center. In 1966, he joined Stanford University, where he is a Professor of Electrical Engineering and Computer Science, and Director of the Center for Reliable Computing. He founded the Stanford Digital Systems Laboratory (now the Computer Systems Laboratory) in 1969, and the Stanford Computer Engineering Program (now the Computer Science M.S. Degree Program) in 1970. The Stanford Computer Forum (an Industrial Affiliates Program) was started by Dr. McCluskey and 2 colleagues in 1970; he was the Director until 1978. He developed the first algorithm for designing combinational circuits\u2014the Quine\u2013McCluskey logic minimization procedure as a doctoral student at MIT. At Bell Labs and Princeton, he developed the modern theory of transients (hazards) in logic networks and formulated the concept of operating modes of sequential circuits. His Stanford research focuses on logic testing, synthesis, design for testability, and fault-tolerant computing. Prof. McCluskey and his students at CRC worked out many key ideas for fault-equivalence, probabilistic modeling of logic networks, pseudo-exhaustive testing, and watchdog processors. He collaborated with Signetics researchers in developing one of the first practical multivalued logic implementations and then worked out a design technique for such circuitry. He has published several books and book chapters, as well as hundreds of papers. His most recent book is Logic Design Principles With Emphasis on Testable Semicustom Circuits, (Englewood Cliffs, NJ: Prentice-Hall, 1986).", "Dr. McCluskey served as the first President of the IEEE Computer Society. His most recent honors include election (1998) to the National Academy of Engineering, the 1996 IEEE Emanuel R. Piore Award, and IEEE Computer Society Golden Core Member. He received the IEEE Centennial Medal (1984) and the IEEE Computer Society Technical Achievement Award in Testing (1984). He received the EURO ASIC 90 Prize for Fundamental Outstanding Contribution to Logic Synthesis (1990). The IEEE Computer Society honored him with the 1991 Taylor L. Booth Education Award. He is a Fellow of the IEEE, AAAS, and ACM."]}, "name": "E.J. McCluskey"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-11-12T02:01:28", "abstract": "This paper presents a new signature monitoring technique, CFCSS (control flow checking by software signatures); CFCSS is a pure software method that checks the control flow of a program using assigned signatures. An algorithm assigns a unique signature to each node in the program graph and adds instructions for error detection. Signatures are embedded in the program during compilation time using the constant field of the instructions and compared with run-time signatures when the program is executed. Another algorithm reduces the code size and execution time overhead caused by checking instructions in CFCSS. A \"branching fault injection experiment\" was performed with benchmark programs. Without CFCSS, an average of 33.7 % of the injected branching faults produced undetected incorrect outputs; however, with CFCSS, only 3.1 % of branching faults produced undetected incorrect outputs. Thus it is possible to increase error detection coverage for control flow errors by an order of magnitude using CFCSS. The distinctive advantage of CFCSS over previous signature monitoring techniques is that CFCSS is a pure software method, i.e., it needs no dedicated hardware such as a watchdog processor for control flow checking. A watchdog task in multitasking environment also needs no extra hardware, but the advantage of CFCSS over a watchdog task is that CFCSS can be used even when the operating system does not support multitasking.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "994926", "xplore-issue": "21459", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=21459", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Control-flow+checking+by+software+signatures&isbn=&publicationDate=March+2002&author=N.+Oh&ContentID=10.1109/24.994926&orderBeanReset=true&startPage=111&endPage=122&volumeNum=51&issueNum=1", "citationCount": "227", "keywords": [{"kwd": ["Monitoring", "Runtime", "Error correction", "Hardware", "Multitasking", "Central Processing Unit", "Process control", "Operating systems", "Fault detection", "Satellites"], "type": "IEEE Keywords"}, {"kwd": ["software reliability", "program testing", "program diagnostics"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["multitasking environment", "control flow checking by software signatures", "assigned signatures", "program graph", "error detection instructions", "compilation time", "run-time signatures", "code size reduction", "instructions checking", "execution time overhead reduction", "branching fault injection experiment", "undetected incorrect outputs", "branching faults", "signature monitoring techniques", "software method", "watchdog task"], "type": "INSPEC: Non-Controlled Indexing"}], "issue": "1", "chronOrPublicationDate": "March 2002", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Control-flow checking by software signatures", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "51", "accessionNumber": "7257677"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/21459/994926", "publisher": "IEEE", "patentCitationCount": "14", "publicationNumber": "24", "contentType": "periodicals", "patentCitations": [{"grantDate": "23 December 2015", "inventors": "Guilley, Sylvain; Porteboeuf, Thibault", "order": "1", "patentNumber": "EP2958044", "title": "A computer implemented method and a system for controlling dynamically the execution of a code", "assignees": ["SECURE-IC SAS"], "patentLink": "http://worldwide.espacenet.com/publicationDetails/biblio?CC=EP&NR=2958044&KC=&locale=en_EP&FT=E", "filingDate": "20 June 2014", "id": "EP2958044", "patentAbstract": "According to the invention, there is provided a computer implemented method for controlling dynamically the execution of a code by a processing system, said execution being described by a control flow graph comprising a plurality of basic blocks composed of at least an input node and an output node, a transition in the control flow graph corresponding to a link between an output node of origin belonging to a first basic block and an input node of a second basic block, a plurality of initialization vectors being associated to the output nodes at the time of generating the code, an a priori control word being associated to each input node which is linked to the same output node of origin according the control flow graph, said a priori control word being precomputed at the time of generating the code by applying a predefined deterministic function F to the initialization vector associated to its output node of origin, the following steps being applied once the execution of the output node belonging to a first basic block is terminated and at the time of executing the input node of a second basic block: providing (300) the a priori control word associated to the input node of the second basic block; providing (301) the initialization vector associated to the output node of the first basic block; determining (302) an a posteriori control word by applying to the provided initialization vector the same function F which has been used for generating the a priori control word; determining (303, 304) if the a priori control word matches with the a posteriori control word, a forbidden transition in respect to the control flow graph being otherwise detected (305).", "ipcClassList": "G06F0215400000", "ipcClasses": ["G06F0215400000"], "appNum": "EP14305954"}, {"grantDate": "07 April 2015", "inventors": "Gammel, Berndt; Mangard, Stefan", "patentNumber": "9003198", "ipcClassList": "G06F0093000000, G06F0110700000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US9003198.pdf", "title": "Method and apparatus for data processing", "order": "2", "pocClassList": "713187000, 713176000, 713168000, 713320000, 713340000, 726024000, 726002000, 726004000", "pocClasses": ["713187000", "713176000", "713168000", "713320000", "713340000", "726024000", "726002000", "726004000"], "filingDate": "22 May 2013", "id": "09003198", "patentAbstract": "A method for processing an operating sequence of instructions of a program in a processor, wherein each instruction is represented by an assigned instruction code which comprises one execution step to be processed by the processor or a plurality of execution steps to be processed successively by the processor, includes determining an actual signature value assigned to a current execution step of the execution steps of the instruction code representing the instruction of the operating sequence; determining, in a manner dependent on an address value, a desired signature value assigned to the current execution step; and if the actual signature value does not correspond to the desired signature value, omitting at least one execution step directly available for execution and/or an execution step indirectly available for execution.", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9003198.PN.&OS=PN/9003198", "assignees": ["INFINEON TECHNOLOGIES AG"], "ipcClasses": ["G06F0093000000", "G06F0110700000"], "appNum": "13899655"}, {"grantDate": "28 October 2014", "inventors": "Benedek, Joseph E.; Franco, Roberto A.; Guo, Quji; Hally, J. Craig; Holmes, Reid T.; Pamucci, Roman; Praitis, Edward J.; Sager, Christopher T.; Wentz, Brian D.", "patentNumber": "8874970", "ipcClassList": "G06F0110000000, G06F0110700000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8874970.pdf", "title": "System and method of preventing a web browser plug-in module from generating a failure", "order": "3", "pocClassList": "714038110, 717170000", "pocClasses": ["714038110", "717170000"], "filingDate": "14 September 2012", "id": "08874970", "patentAbstract": "Embodiments are configured to improve the stability of a Web browser by identifying plug-in modules that cause failures. Data in memory at the time of a failure is analyzed, and a failure signature is generated. The failure signature is compared to a database of known failure signatures so that the source of the failure may be identified. If a plug-in module to a Web browser is identified as the source of a failure, options are presented to the user who may update the plug-in module with code that does not produce a failure or disable the plug-in module altogether.", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8874970.PN.&OS=PN/8874970", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000000", "G06F0110700000"], "appNum": "13618177"}, {"grantDate": "08 April 2014", "inventors": "Mangard, Stefan; Gammel, Berndt; Duve, Juergen", "patentNumber": "8694977", "ipcClassList": "G06F0094500000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8694977.pdf", "title": "Distributed compiling process with instruction signature support", "order": "4", "pocClassList": "717151000", "pocClasses": ["717151000"], "filingDate": "15 July 2011", "id": "08694977", "patentAbstract": "A compiler module for providing instruction signature support to a compiler includes a language construct identifier and a placeholder insertion component. The language construct identifier is configured to identify an instruction signature-relevant language construct in a high level language source code supplied to the compiler. The placeholder insertion component is configured to interact with the compiler for inserting at least one instruction signature-related placeholder based on the instruction signature-related language construct into a compiled code processed by the compiler on the basis of the high level language source code.", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8694977.PN.&OS=PN/8694977", "assignees": ["INFINEON TECHNOLOGIES AG"], "ipcClasses": ["G06F0094500000"], "appNum": "13184135"}, {"grantDate": "18 March 2014", "inventors": "Eickmeyer, Kellie; Rosnow, Harley Michael; Maliouta, Jane Evguenia; Hawkins, John M.", "patentNumber": "8677188", "ipcClassList": "G06F0110000000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8677188.pdf", "title": "Web page error reporting", "order": "5", "pocClassList": "714038100", "pocClasses": ["714038100"], "filingDate": "11 November 2011", "id": "08677188", "patentAbstract": "An error in a web page displayed on a device is detected. The error is assigned to a bucket to indicate a type of the error, and a record describing the current state of the device is generated. Both an indication of the bucket and the record describing the current state of the device are then sent to a server. At the server, error information including error records and bucket identifiers are received from multiple devices. Each error record describes a current state of one of the multiple devices at a time when an error in a web page displayed on the one device was detected. Each bucket identifier corresponds to one of the error records and describes a type of the error associated with that error record. The error records are grouped into multiple baskets based at least in part on the current state information in the error records.", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8677188.PN.&OS=PN/8677188", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000000"], "appNum": "13294898"}, {"grantDate": "15 January 2013", "inventors": "Benedek, Joseph E.; Franco, Roberto A.; Guo, Quji; Hally, J. Craig; Holmes, Reid T.; Pamucci, Roman; Praitis, Edward J.; Sager, Christopher T.; Wentz, Brian D.", "patentNumber": "8356211", "ipcClassList": "G06F0110000000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8356211.pdf", "title": "Detecting browser failure", "order": "6", "pocClassList": "714038110, 717170000", "pocClasses": ["714038110", "717170000"], "filingDate": "03 February 2012", "id": "08356211", "patentAbstract": "Embodiments are configured to improve the stability of a Web browser by identifying plug-in modules that cause failures. Data in memory at the time of a failure is analyzed, and a failure signature is generated. The failure signature is compared to a database of known failure signatures so that the source of the failure may be identified. If a plug-in module to a Web browser is identified as the source of a failure, options are presented to the user who may update the plug-in module with code that does not produce a failure or disable the plug-in module altogether.", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8356211.PN.&OS=PN/8356211", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000000"], "appNum": "13365990"}, {"grantDate": "14 February 2012", "inventors": "Lesea, Austin H.", "patentNumber": "8117497", "ipcClassList": "G06F0110000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8117497.pdf", "title": "METHOD AND APPARATUS FOR ERROR UPSET DETECTION AND CORRECTION", "order": "7", "pocClassList": "714030000, 714006100, 714006120, 714006200, 714034000, 714038130", "pocClasses": ["714030000", "714006100", "714006120", "714006200", "714034000", "714038130"], "filingDate": "17 November 2008", "id": "08117497", "patentAbstract": "A method and apparatus for the detection and correction of soft errors existing within an integrated circuit (IC). Run-time check stops are utilized in conjunction with processor-based, hardware mechanisms to detect and correct soft errors. At run-time, each check stop facilitates a snap shot of the hardware and/or software state of the IC to be stored into hardware and/or software based memory. Should a soft error be detected, execution is halted and the executable state of the IC that conforms to a previous check-stop location may be re-established after the soft error(s) are optionally corrected. In alternate embodiments, hardware based mechanisms may be exclusively utilized to both detect and correct the soft errors. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8117497.PN.&OS=PN/8117497", "assignees": ["XILINX INC"], "ipcClasses": ["G06F0110000"], "appNum": "12247916"}, {"grantDate": "07 February 2012", "inventors": "Benedek, Joseph E.; Franco, Roberto A.; Guo, Quji; Hally, J. Craig; Holmes, Reid T.; Pamucci, Roman; Praitis, Edward J.; Sager, Christopher T.; Wentz, Brian D.", "patentNumber": "8112673", "ipcClassList": "G06F0110000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8112673.pdf", "title": "SYSTEM AND METHOD OF PREVENTING A WEB BROWSER PLUG IN MODULE FROM GENERATING A FAILURE", "order": "8", "pocClassList": "714038110, 717170000", "pocClasses": ["714038110", "717170000"], "filingDate": "04 June 2008", "id": "08112673", "patentAbstract": "The present invention improves the stability of a Web browser by identifying plug-in modules that cause failures. Data in memory at the time of a failure is analyzed, and a failure signature is generated. The failure signature is compared to a database of known failure signatures so that the source of the failure may be identified. If a plug-in module to a Web browser is identified as the source of a failure, options are presented to the user who may update the plug-in module with code that does not produce a failure or disable the plug-in module altogether. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8112673.PN.&OS=PN/8112673", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000"], "appNum": "12133337"}, {"grantDate": "24 January 2012", "inventors": "Erlingsson, Ulfar; Abadi, Martin; Vrable, Michael", "patentNumber": "8104021", "ipcClassList": "G06F0094500", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US8104021.pdf", "title": "VERIFIABLE INTEGRITY GUARANTEES FOR MACHINE CODE PROGRAMS", "order": "9", "pocClassList": "717126000", "pocClasses": ["717126000"], "filingDate": "09 June 2006", "id": "08104021", "patentAbstract": "A verifier performs static checks of machine code to ensure that the code will execute safely. After verification is performed, the code is executed. The code modules generated by the rewriter and verified by the verifier prevent runtime code modifications so that properties established by the verifier cannot be invalidated during execution. Guards ensure that control flows only as expected. Stack data that must be shared within a code module, and which may therefore be corrupted during execution, is placed on a separate data stack. Other stack data remains on the regular execution stack, called the control stack. Multiple memory accesses can be checked by a single memory-range guard, optimized for fast access to the most-frequently used memory. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=8104021.PN.&OS=PN/8104021", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0094500"], "appNum": "11450493"}, {"grantDate": "24 August 2010", "inventors": "Bohizic, Theodore J.; Decker, Mark H.; Gyuris, Viktor S.", "patentNumber": "7783867", "ipcClassList": "G06F0090000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US7783867.pdf", "title": "CONTROLLING INSTRUCTION EXECUTION IN A PROCESSING ENVIRONMENT", "order": "10", "pocClassList": "712234000, 712229000, 712244000", "pocClasses": ["712234000", "712229000", "712244000"], "filingDate": "01 February 2007", "id": "07783867", "patentAbstract": "Instruction execution is controlled by a single test that determines whether processing should continue in mainline processing or fall through to a test set. The single test compares a dynamically set variable to an instruction counter. If the test is met, mainline processing continues. Otherwise, processing falls through to a test set. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7783867.PN.&OS=PN/7783867", "assignees": ["INTERNATIONAL BUSINESS MACHINES CORP"], "ipcClasses": ["G06F0090000"], "appNum": "11670163"}, {"grantDate": "18 August 2009", "inventors": "Abadi, Martin; Budiu, Mihai-Dan; Erlingsson, Ulfar; Ligatti, Jay A.", "patentNumber": "7577992", "ipcClassList": "G06F0212200, G06F0094400, G06F0113000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US7577992.pdf", "title": "SOFTWARE SECURITY BASED ON CONTROL FLOW INTEGRITY", "order": "11", "pocClassList": "726022000", "pocClasses": ["726022000"], "filingDate": "14 January 2005", "id": "07577992", "patentAbstract": "Software control flow integrity is provided by embedding identifying bit patterns at computed control flow instruction sources and destinations. The sources and destinations of computed control flow instructions are determined with reference to a control flow graph. The identifying bit patterns are compared during software execution, and a match between a source and a respective destination ensures control flow consistent with the control flow graph. Security measures are implemented when the comparison results in a mismatch, indicating that control flow has deviated from the anticipated course. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7577992.PN.&OS=PN/7577992", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0212200", "G06F0094400", "G06F0113000"], "appNum": "11036121"}, {"grantDate": "08 July 2008", "inventors": "Benedek, Joseph E; Franco, Roberto A; Guo, Quji; Hally, J Craig; Holmes, Reid T; Pamucci, Roman; Praitis, Edward J; Sager, Christopher T; Wentz, Brian D", "patentNumber": "7398433", "ipcClassList": "G06F0110000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US7398433.pdf", "title": "SYSTEM AND METHOD OF PREVENTING A WEB BROWSER PLUG IN MODULE FROM GENERATING A FAILURE", "order": "12", "pocClassList": "714057000, 714038110, 714038140, 714E11026", "pocClasses": ["714057000", "714038110", "714038140", "714E11026"], "filingDate": "31 March 2004", "id": "07398433", "patentAbstract": "The present invention improves the stability of a Web browser by identifying plug-in modules that cause failures. Data in memory at the time of a failure is analyzed and a failure signature is generated. The failure signature is compared to a database of known failure signatures so that the source of the failure may be identified. If a plug-in module to a Web browser is identified as the source of a failure, options are presented to the user who may update the plug-in module with code that does not produce a failure or disable the plug-in module altogether. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7398433.PN.&OS=PN/7398433", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000"], "appNum": "10814591"}, {"grantDate": "26 February 2008", "inventors": "Abadi, Martin; Erlingsson, Ulfar; Ligatti, Jay A.; Budiu, Mihai-Dan", "patentNumber": "7337291", "ipcClassList": "G06F0121400, G06F0130000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US7337291.pdf", "title": "SOFTWARE MEMORY ACCESS CONTROL", "order": "13", "pocClassList": "711163000, 711100000, 711154000, 711E12093", "pocClasses": ["711163000", "711100000", "711154000", "711E12093"], "filingDate": "14 January 2005", "id": "07337291", "patentAbstract": "Software memory access control is provided by associating instruction areas with memory areas such that instruction areas are not permitted to access memory areas with which they are not associated. Checks may be inserted in the instruction areas to ensure that data provided by a memory group is provided by an associated memory area. Additionally, control flow integrity for the instruction areas may be provided by embedding identifying bit patterns within computed control flow instructions contained in the instruction groups. In this way, control flow of the instruction areas may be provided, thus preventing diversion of control flow and minimizing required checks. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7337291.PN.&OS=PN/7337291", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0121400", "G06F0130000"], "appNum": "11036801"}, {"grantDate": "22 January 2008", "inventors": "Guo, Quji; Franco, Roberto A; Praitis, Edward J; Huang, Li-Hsin; Xu, Jingyang; Wentz, Brian D; Jiggins, Julian; Panchapagesan, Venkatavaradhan", "patentNumber": "7321988", "ipcClassList": "G06F0110000", "pdfLink": "http://patentimages.storage.googleapis.com/pdfs/US7321988.pdf", "title": "IDENTIFYING A CODE LIBRARY FROM THE SUBSET OF BASE POINTERS THAT CAUSED A FAILURE GENERATING INSTRUCTION TO BE EXECUTED", "order": "14", "pocClassList": "714038110, 714E11207, 717124000", "pocClasses": ["714038110", "714E11207", "717124000"], "filingDate": "30 June 2004", "id": "07321988", "patentAbstract": "The present invention is generally directed to improving the stability of computing devices by identifying plug-in modules and other programs that cause failures. More specifically, the present invention provides a method that traces program execution from an instruction that ultimately generated a failure to a code library that caused the failure generating instruction to be executed. The method traces execution of the computing device by obtaining the contents of memory at the time of the failure and traversing the stack data structure that stores data items necessary to execute function calls. </p>", "patentLink": "http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7321988.PN.&OS=PN/7321988", "assignees": ["MICROSOFT CORP"], "ipcClasses": ["G06F0110000"], "appNum": "10880819"}], "formulaStrippedArticleTitle": "Control-flow checking by software signatures", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Evaluation and analysis of an on-line error detection monitoring technique", "displayText": "Marija Punt, Milo Tomasevic, Jovan Djordjevic, \"Evaluation and analysis of an on-line error detection monitoring technique\", <em>Computers & Electrical Engineering</em>, vol. 39, pp. 261, 2013, ISSN 00457906.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.compeleceng.2012.11.011"}}, {"title": "Transient detection in COTS processors using software approach", "displayText": "Amir Rajabzadeh, Seyed Ghassem Miremadi, \"Transient detection in COTS processors using software approach\", <em>Microelectronics Reliability</em>, vol. 46, pp. 124, 2006, ISSN 00262714.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.microrel.2004.10.013"}}, {"title": "Developing Inherently Resilient Software Against Soft-Errors Based on Algorithm Level Inherent Features", "displayText": "Bahman Arasteh, Seyed Ghassem Miremadi, Amir Masoud Rahmani, \"Developing Inherently Resilient Software Against Soft-Errors Based on Algorithm Level Inherent Features\", <em>Journal of Electronic Testing</em>, pp. , 2014, ISSN 0923-8174.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10836-014-5438-8"}}, {"title": "Processor Design for Soft Errors", "displayText": "Tuo Li, Jude Angelo Ambrose, Roshan Ragel, Sri Parameswaran, \"Processor Design for Soft Errors\", <em>ACM Computing Surveys</em>, vol. 49, pp. 1, 2016, ISSN 03600300.", "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/2996357"}}, {"title": "Global Optimization of Fixed-Priority Real-Time Systems by RTOS-Aware Control-Flow Analysis", "displayText": "Christian Dietrich, Martin Hoffmann, Daniel Lohmann, \"Global Optimization of Fixed-Priority Real-Time Systems by RTOS-Aware Control-Flow Analysis\", <em>ACM Transactions on Embedded Computing Systems</em>, vol. 16, pp. 1, 2017, ISSN 15399087.", "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "acmLink": "http://dx.doi.org/10.1145/2950053"}}, {"title": "Hardware and Software Transparency in the Protection of Programs Against SEUs and SETs", "displayText": "Eduardo Luis Rhod, Carlos Arthur Lang Lisb\u00f4a, Luigi Carro, Matteo Sonza Reorda, Massimo Violante, \"Hardware and Software Transparency in the Protection of Programs Against SEUs and SETs\", <em>Journal of Electronic Testing</em>, vol. 24, pp. 45, 2008, ISSN 0923-8174.", "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10836-007-5018-2"}}, {"title": "SEDSR: Soft Error Detection Using Software Redundancy", "displayText": "Seyyed Amir Asghari, Atena Abdi, Hassan Taheri, Hossein Pedram, Saadat Pourmozaffari, \"SEDSR: Soft Error Detection Using Software Redundancy\", <em>Journal of Software Engineering and Applications</em>, vol. 05, pp. 664, 2012, ISSN 1945-3116.", "order": "7", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.4236/jsea.2012.59078"}}, {"title": "Run\u2010time error detection of space\u2010robot based on adaptive redundancy", "displayText": "Xing Gao, Ming\u2010Hong Liao, Xiang\u2010Hu Wu, Chao\u2010Yong Li, \"Run\u2010time error detection of space\u2010robot based on adaptive redundancy\", <em>Aircraft Engineering and Aerospace Technology</em>, vol. 81, pp. 14, 2009, ISSN 0002-2667.", "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1108/00022660910926863"}}, {"title": "Plug-and-play design approach to smart harness for modular small satellites", "displayText": "M. Rizwan Mughal, Anwar Ali, Leonardo M. Reyneri, \"Plug-and-play design approach to smart harness for modular small satellites\", <em>Acta Astronautica</em>, vol. 94, pp. 754, 2014, ISSN 00945765.", "order": "9", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.actaastro.2013.09.015"}}, {"title": "DSP Soft Error Detection Based on Program Control Flow Integrity Checking", "displayText": "\u56fd\u660c \u5468, \"DSP Soft Error Detection Based on Program Control Flow Integrity Checking\", <em>Computer Science and Application</em>, vol. 05, pp. 133, 2015, ISSN 2161-8801.", "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.12677/CSA.2015.54017"}}, {"title": "Lecture Notes in Computer Science", "displayText": "S\u00e9bastien Varrette, Beno\u00eet Bertholon, Pascal Bouvry, <em>Lecture Notes in Computer Science</em>, vol. 7053, pp. 85, 2012, ISSN 0302-9743, ISBN 978-3-642-25260-0.", "order": "11", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-642-25261-7_7"}}, {"title": "On-line control flow error detection using relationship signatures among basic blocks", "displayText": "Aiguo Li, Bingrong Hong, \"On-line control flow error detection using relationship signatures among basic blocks\", <em>Computers & Electrical Engineering</em>, vol. 36, pp. 132, 2010, ISSN 00457906.", "order": "12", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.compeleceng.2008.08.010"}}, {"title": "Software control flow error detection and correlation with system performance deviation", "displayText": "Atef Shalan, Mohammad Zulkernine, \"Software control flow error detection and correlation with system performance deviation\", <em>Journal of Computer and System Sciences</em>, vol. 80, pp. 953, 2014, ISSN 00220000.", "order": "13", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jcss.2014.02.004"}}, {"title": "A dual process redundancy approach to transient fault tolerance for ccNUMA architecture", "displayText": "Xingjun Zhang, Endong Wang, Feilong Tang, Meishun Yang, Hengyi Wei, Xiaoshe Dong, \"A dual process redundancy approach to transient fault tolerance for ccNUMA architecture\", <em>Neurocomputing</em>, pp. , 2013, ISSN 09252312.", "order": "14", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.neucom.2013.01.043"}}, {"title": "Evaluating the Effectiveness of a Software-Based Technique Under SEEs Using FPGA-Based Fault Injection Approach", "displayText": "M. Portela-Garcia, A. Lindoso, L. Entrena, M. Garcia-Valderas, C. Lopez-Ongil, N. Marroni, B. Pianta, L. Bolzani Poehls, F. Vargas, \"Evaluating the Effectiveness of a Software-Based Technique Under SEEs Using FPGA-Based Fault Injection Approach\", <em>Journal of Electronic Testing</em>, pp. , 2012, ISSN 0923-8174.", "order": "15", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10836-012-5321-4"}}, {"title": "Bipartite graph-based control flow checking for COTS-based small satellites", "displayText": "Honghao Wang, Huiquan Wang, Zhonghe Jin, \"Bipartite graph-based control flow checking for COTS-based small satellites\", <em>Chinese Journal of Aeronautics</em>, vol. 28, pp. 883, 2015, ISSN 10009361.", "order": "16", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.cja.2015.04.010"}}, {"title": "A Method of Recovering DSP Soft Error Based on Integrity Check", "displayText": "\u56fd\u660c \u5468, \"A Method of Recovering DSP Soft Error Based on Integrity Check\", <em>Computer Science and Application</em>, vol. 05, pp. 179, 2015, ISSN 2161-8801.", "order": "17", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.12677/CSA.2015.55023"}}, {"title": "Selective SWIFT-R", "displayText": "Felipe Restrepo-Calle, Antonio Mart\u00ednez-\u00c1lvarez, Sergio Cuenca-Asensi, Antonio Jimeno-Morenilla, \"Selective SWIFT-R\", <em>Journal of Electronic Testing</em>, vol. 29, pp. 825, 2013, ISSN 0923-8174.", "order": "18", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10836-013-5416-6"}}, {"title": "Software implemented transient fault detection in space computer", "displayText": "Aiguo Li, Bingrong Hong, \"Software implemented transient fault detection in space computer\", <em>Aerospace Science and Technology</em>, vol. 11, pp. 245, 2007, ISSN 12709638.", "order": "19", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.ast.2006.06.006"}}, {"title": "Theoretical and Analytical Service-Focused Systems Design and Development", "displayText": "Domenico Cotroneo, Antonio Pecchia, Roberto Pietrantuono, Stefano Russo, pp. 362, 2012, ISBN 9781466617674.", "order": "20", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.4018/978-1-4666-1767-4.ch019"}}, {"title": "Fault tolerant embedded systems design by multi-objective optimization", "displayText": "Antonio Mart\u00ednez-\u00c1lvarez, Felipe Restrepo-Calle, Luis Alberto Vivas Tejuelo, Sergio Cuenca-Asensi, \"Fault tolerant embedded systems design by multi-objective optimization\", <em>Expert Systems with Applications</em>, vol. 40, pp. 6813, 2013, ISSN 09574174.", "order": "21", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.eswa.2013.06.060"}}, {"title": "Time-Constraint-Aware Optimization of Assertions in Embedded Software", "displayText": "Viacheslav Izosimov, Giuseppe Di Guglielmo, Michele Lora, Graziano Pravadelli, Franco Fummi, Zebo Peng, Masahiro Fujita, \"Time-Constraint-Aware Optimization of Assertions in Embedded Software\", <em>Journal of Electronic Testing</em>, vol. 28, pp. 469, 2012, ISSN 0923-8174.", "order": "22", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s10836-012-5316-1"}}, {"title": "An efficient control-flow checking technique for the detection of soft-errors in embedded software", "displayText": "Tahereh Boroomandnezhad, Mohammad Abdollahi Azgomi, \"An efficient control-flow checking technique for the detection of soft-errors in embedded software\", <em>Computers & Electrical Engineering</em>, pp. , 2013, ISSN 00457906.", "order": "23", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.compeleceng.2013.03.015"}}], "ieee": [{"title": "A Framework to Evaluate the Trade-Off among AVF, Performance and Area of Soft Error Tolerant Microprocessors", "displayText": "Rui Gong, Kui Dai, Zhiying Wang, \"A Framework to Evaluate the Trade-Off among AVF Performance and Area of Soft Error Tolerant Microprocessors\", <em>Defect and Fault Tolerance of VLSI Systems 2008. DFTVS '08. IEEE International Symposium on</em>, pp. 184-192, 2008, ISSN 1550-5774.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4641172", "pdfSize": "332KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4641172"}}, {"title": "A local checkpoint mechanism for on-board computing", "displayText": "Chengye Zhang, Shenglan Deng, Hong Ning, \"A local checkpoint mechanism for on-board computing\", <em>Information Science and Technology (ICIST) 2012 International Conference on</em>, pp. 520-526, 2012.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6221701", "pdfSize": "646KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6221701"}}, {"title": "Overview of software dependability computing techniques from instruction set architecture's viewpoint", "displayText": "Yu Wang, Liquan Xiao, Chao Peng, \"Overview of software dependability computing techniques from instruction set architecture's viewpoint\", <em>Advanced Information Technology Electronic and Automation Control Conference (IAEAC) 2015 IEEE</em>, pp. 119-125, 2015.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7428531", "pdfSize": "258KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7428531"}}, {"title": "The limitations of software signature and basic block sizing in soft error fault coverage", "displayText": "Jos&#x00E9; Rodrigo Azambuja, Fernando Sousa, Lucas Rosa, Fernanda Lima Kastensmidt, \"The limitations of software signature and basic block sizing in soft error fault coverage\", <em>Test Workshop (LATW) 2010 11th Latin American</em>, pp. 1-8, 2010.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5550346", "pdfSize": "310KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5550346"}}, {"title": "Compiler-aided methodology for low overhead on-line testing", "displayText": "Ghazaleh Nazarian, Robert M. Seepers, Christos Strydis, Georgi N. Gaydadjiev, \"Compiler-aided methodology for low overhead on-line testing\", <em>Embedded Computer Systems: Architectures Modeling and Simulation (SAMOS XIII) 2013 International Conference on</em>, pp. 219-226, 2013.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6621126", "pdfSize": "1077KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6621126"}}, {"title": "On-line detection of control-flow errors in SoCs by means of an infrastructure IP core", "displayText": "P. Bernardi, L. Bolzani, M. Rebaudengo, M.S. Reorda, F. Vargas, M. Violante, \"On-line detection of control-flow errors in SoCs by means of an infrastructure IP core\", <em>Dependable Systems and Networks 2005. DSN 2005. Proceedings. International Conference on</em>, pp. 50-58, 2005.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1467779", "pdfSize": "140KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1467779"}}, {"title": "Reconstructing control flow graph for control flow checking", "displayText": "Jianli Li, Qingping Tan, Jianjun Xu, \"Reconstructing control flow graph for control flow checking\", <em>Progress in Informatics and Computing (PIC) 2010 IEEE International Conference on</em>, vol. 1, pp. 527-531, 2010.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5687403", "pdfSize": "799KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5687403"}}, {"title": "A new hybrid fault detection technique for systems-on-a-chip", "displayText": "P. Bernardi, L.M.V. Bolzani, M. Rebaudengo, M.S. Reorda, F.L. Vargas, M. Violante, \"A new hybrid fault detection technique for systems-on-a-chip\", <em>Computers IEEE Transactions on</em>, vol. 55, pp. 185-198, 2006, ISSN 0018-9340.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1566579", "pdfSize": "1239KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1566579"}}, {"title": "Static Analysis of Register File Vulnerability", "displayText": "Jongeun Lee, Aviral Shrivastava, \"Static Analysis of Register File Vulnerability\", <em>Computer-Aided Design of Integrated Circuits and Systems IEEE Transactions on</em>, vol. 30, pp. 607-616, 2011, ISSN 0278-0070.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5737851", "pdfSize": "997KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5737851"}}, {"title": "A Low-Cost Fault Tolerance Technique in Multi-media Applications through Configurability", "displayText": "Lanfang Tan, Ying Tan, \"A Low-Cost Fault Tolerance Technique in Multi-media Applications through Configurability\", <em>Quality Software (QSIC) 2013 13th International Conference on</em>, pp. 299-304, 2013.", "order": "10", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6605943", "pdfSize": "190KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6605943"}}, {"title": "Soft Error Protection in Safety Critical Embedded Applications: An Overview", "displayText": "Jens Vankeirsbilck, Hans Hallez, Jeroen Boydens, \"Soft Error Protection in Safety Critical Embedded Applications: An Overview\", <em>P2P Parallel Grid Cloud and Internet Computing (3PGCIC) 2015 10th International Conference on</em>, pp. 605-610, 2015.", "order": "11", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7424636", "pdfSize": "159KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7424636"}}, {"title": "Improved software-based processor control-flow errors detection technique", "displayText": "O. Goloubeva, M. Rebaudengo, M.S. Reorda, M. Violante, \"Improved software-based processor control-flow errors detection technique\", <em>Reliability and Maintainability Symposium 2005. Proceedings. Annual</em>, pp. 583-589, 2005, ISSN 0149-144X.", "order": "12", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1408426", "pdfSize": "595KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1408426"}}, {"title": "Online Test of Control Flow Errors: A New Debug Interface-Based Approach", "displayText": "Boyang Du, Matteo Sonza Reorda, Luca Sterpone, Luis Parra, Marta Portela-Garc&#x00ED;a, Almudena Lindoso, Luis Entrena, \"Online Test of Control Flow Errors: A New Debug Interface-Based Approach\", <em>Computers IEEE Transactions on</em>, vol. 65, pp. 1846-1855, 2016, ISSN 0018-9340.", "order": "13", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7155525", "pdfSize": "612KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7155525"}}, {"title": "A Compiler-Microarchitecture Hybrid Approach to Soft Error Reduction for Register Files", "displayText": "Jongeun Lee, Aviral Shrivastava, \"A Compiler-Microarchitecture Hybrid Approach to Soft Error Reduction for Register Files\", <em>Computer-Aided Design of Integrated Circuits and Systems IEEE Transactions on</em>, vol. 29, pp. 1018-1027, 2010, ISSN 0278-0070.", "order": "14", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5499157", "pdfSize": "585KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5499157"}}, {"title": "Effective Post-Silicon Validation of System-on-Chips Using Quick Error Detection", "displayText": "David Lin, Ted Hong, Yanjing Li, Eswaran S, Sharad Kumar, Farzan Fallah, Nagib Hakim, Donald S. Gardner, Subhasish Mitra, \"Effective Post-Silicon Validation of System-on-Chips Using Quick Error Detection\", <em>Computer-Aided Design of Integrated Circuits and Systems IEEE Transactions on</em>, vol. 33, pp. 1573-1590, 2014, ISSN 0278-0070.", "order": "15", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6899784", "pdfSize": "3789KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6899784"}}, {"title": "ESoftCheck: Removal of Non-vital Checks for Fault Tolerance", "displayText": "Jing Yu, Maria Jesus Garzaran, Marc Snir, \"ESoftCheck: Removal of Non-vital Checks for Fault Tolerance\", <em>Code Generation and Optimization 2009. CGO 2009. International Symposium on</em>, pp. 35-46, 2009.", "order": "16", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4907649", "pdfSize": "288KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4907649"}}, {"title": "Hybrid Control-Flow Checking with On-Line Statistics", "displayText": "Dur&#x00ED;cek, Tibor Krajcovic, \"Hybrid Control-Flow Checking with On-Line Statistics\", <em>Engineering of Computer Based Systems (ECBS-EERC) 2015 4th Eastern European Regional Conference on the</em>, pp. 122-125, 2015.", "order": "17", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7275236", "pdfSize": "254KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7275236"}}, {"title": "The ARGOS project", "displayText": "\"The ARGOS project\", <em>Test Conference 2009. ITC 2009. International</em>, pp. 1-1, 2009, ISSN 1089-3539.", "order": "18", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5355813", "pdfSize": "242KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5355813"}}, {"title": "A Configurable Approach to Tolerate Soft Errors via Partial Software Protection", "displayText": "Lei Xiong, Qingping Tan, \"A Configurable Approach to Tolerate Soft Errors via Partial Software Protection\", <em>Parallel and Distributed Processing with Applications Workshops (ISPAW) 2011 Ninth IEEE International Symposium on</em>, pp. 260-265, 2011.", "order": "19", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5951985", "pdfSize": "395KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5951985"}}, {"title": "PROCOMON: An Automatically Generated Predictive Control Signal Monitor", "displayText": "Armin Krieg, Johannes Grinschgl, Norbert Druml, Christian Steger, Reinhold Weiss, Holger Bock, Josef Haid, \"PROCOMON: An Automatically Generated Predictive Control Signal Monitor\", <em>Digital System Design (DSD) 2012 15th Euromicro Conference on</em>, pp. 654-660, 2012.", "order": "20", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6386954", "pdfSize": "313KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6386954"}}, {"title": "Software-Based Control Flow Checking Against Transient Faults in Industrial Environments", "displayText": "Seyyed Amir Asghari, Hassan Taheri, Hossein Pedram, Okyay Kaynak, \"Software-Based Control Flow Checking Against Transient Faults in Industrial Environments\", <em>Industrial Informatics IEEE Transactions on</em>, vol. 10, pp. 481-490, 2014, ISSN 1551-3203.", "order": "21", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6469216", "pdfSize": "1696KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6469216"}}, {"title": "New Techniques for Improving the Performance of the Lockstep Architecture for SEEs Mitigation in FPGA Embedded Processors", "displayText": "F. Abate, L. Sterpone, C. A. Lisboa, L. Carro, M. Violante, \"New Techniques for Improving the Performance of the Lockstep Architecture for SEEs Mitigation in FPGA Embedded Processors\", <em>Nuclear Science IEEE Transactions on</em>, vol. 56, pp. 1992-2000, 2009, ISSN 0018-9499.", "order": "22", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5204519", "pdfSize": "170KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5204519"}}, {"title": "Detecting SEEs in Microprocessors Through a Non-Intrusive Hybrid Technique", "displayText": "Jos&#x00E9; Rodrigo Azambuja, &#x00C2;ngelo Lapolli, Lucas Rosa, Fernanda Lima Kastensmidt, \"Detecting SEEs in Microprocessors Through a Non-Intrusive Hybrid Technique\", <em>Nuclear Science IEEE Transactions on</em>, vol. 58, pp. 993-1000, 2011, ISSN 0018-9499.", "order": "23", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5720529", "pdfSize": "239KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5720529"}}, {"title": "A Novel Co-Design Approach for Soft Errors Mitigation in Embedded Systems", "displayText": "Sergio Cuenca-Asensi, Antonio Martinez-Alvarez, Felipe Restrepo-Calle, Francisco R. Palomo, Hip&#x00F3;lito Guzman-Miranda, Miguel A. Aguirre, \"A Novel Co-Design Approach for Soft Errors Mitigation in Embedded Systems\", <em>Nuclear Science IEEE Transactions on</em>, vol. 58, pp. 1059-1065, 2011, ISSN 0018-9499.", "order": "24", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5746555", "pdfSize": "1069KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5746555"}}, {"title": "S-SETA: Selective Software-Only Error-Detection Technique Using Assertions", "displayText": "Eduardo Chielle, Gennaro S. Rodrigues, Fernanda L. Kastensmidt, Sergio Cuenca-Asensi, Lucas A. Tambara, Paolo Rech, Heather Quinn, \"S-SETA: Selective Software-Only Error-Detection Technique Using Assertions\", <em>Nuclear Science IEEE Transactions on</em>, vol. 62, pp. 3088-3095, 2015, ISSN 0018-9499.", "order": "25", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7322301", "pdfSize": "965KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7322301"}}, {"title": "Full Fault Resilience and Relaxed Synchronization Requirements at the Cache-Memory Interface", "displayText": "Chengmo Yang, Alex Orailoglu, \"Full Fault Resilience and Relaxed Synchronization Requirements at the Cache-Memory Interface\", <em>Very Large Scale Integration (VLSI) Systems IEEE Transactions on</em>, vol. 19, pp. 1996-2009, 2011, ISSN 1063-8210.", "order": "26", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5593910", "pdfSize": "821KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5593910"}}, {"title": "Error detection by selective procedure call duplication for low energy consumption", "displayText": "N. Oh, E.J. McCluskey, \"Error detection by selective procedure call duplication for low energy consumption\", <em>Reliability IEEE Transactions on</em>, vol. 51, pp. 392-402, 2002, ISSN 0018-9529.", "order": "27", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1044337", "pdfSize": "685KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1044337"}}, {"title": "Low-Cost Control Flow Protection via Available Redundancies in the Microprocessor Pipeline", "displayText": "Mohammad Abdur Rouf, Soontae Kim, \"Low-Cost Control Flow Protection via Available Redundancies in the Microprocessor Pipeline\", <em>Very Large Scale Integration (VLSI) Systems IEEE Transactions on</em>, vol. 23, pp. 131-141, 2015, ISSN 1063-8210.", "order": "28", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6731594", "pdfSize": "2208KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6731594"}}, {"title": "IFRA: Post-silicon bug localization in processors", "displayText": "Sung-Boem Park, Subhasish Mitra, \"IFRA: Post-silicon bug localization in processors\", <em>High Level Design Validation and Test Workshop 2009. HLDVT 2009. IEEE International</em>, pp. 154-159, 2009, ISSN 1552-6674.", "order": "29", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5340160", "pdfSize": "1059KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5340160"}}, {"title": "Analyzing the effectiveness of fault hardening procedures", "displayText": "P. Gawkowski, J. Sosnowski, B. Radko, \"Analyzing the effectiveness of fault hardening procedures\", <em>On-Line Testing Symposium 2005. IOLTS 2005. 11th IEEE International</em>, pp. 14-19, 2005.", "order": "30", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1498123", "pdfSize": "141KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1498123"}}]}, "mlTime": "PT0.22967S", "title": "Control-flow checking by software signatures", "lastupdate": "2016-11-12T02:01:28", "ieeeCitationCount": "177", "nonIeeeCitationCount": "50"}, "references": [{"id": "ref1", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1676066", "pdfSize": "1275KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The use of watchdog processors in the implementation of Structural Integrity Checking (SIC) is described. A model for ideal SIC is given in terms of formal languages and automata. Techniques for use in implementing SIC are presented. The modification of a Pascal compiler into an SIC Pascal preprocessor is summarized.", "documentLink": "/document/1676066"}, "context": [{"sec": "", "part": "", "text": " This illegal branch indicates a CF error, which can be caused by transient or permanent faults in hardware such as the program counter, address circuits, or memory system [1]."}, {"sec": "sec1", "part": "1", "text": " CFCSS uses an assigned signature technique similar to SIC [1], but does not need to send check-labels to a watchdog processor because it checks the signatures using instructions."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Watchdog processor and structural integrity checking", "order": "1", "text": "D. J. Lu, \"Watchdog processor and structural integrity checking\", <em>IEEE Trans. Computers</em>, vol. C-31, pp. 681-685, July 1982."}, {"id": "ref2", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=243568", "pdfSize": "725KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Two software-based techniques for online detection of control flow errors were evaluated by fault injection. One technique, called block signature self-checking (BSSC), checks the control flow between program blocks. The other, called error capturing instructions (ECIs), inserts ECIs in the program area, the data area, and the unused area of the memory. To demonstrate these techniques, a program has been developed which modifies the executable code for the MC6809E 8-b microprocessor. The error d...", "documentLink": "/document/243568"}, "context": [{"sec": "sec1", "part": "1", "text": " Block Signature Self-Checking [2] is also an assigned signature technique that uses a subroutine to replace the watchdog processor."}], "title": "Two software techniques for on-line error detection", "order": "2", "text": "G. Miremadi, J. Karlsson, J. U. Gunneflo, J. Torin, \"Two software techniques for on-line error detection\", <em>Digest of Papers 22nd Ann. Int. Symp. Fault-Tolerant Computing</em>, pp. 328-335, 1992."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1702710", "pdfSize": "3399KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A control flow checking scheme capable of detecting control flow errors of programs resulting from software coding errors, hardware malfunctions, or memory mutilation during the execution of the program is presented. In this approach, the program is partitioned into loop-free intervals and a database containing the path information in each of the loop-free intervals is derived from the detailed design. The path in each loop-free interval actually traversed at run time is recorded and then checke...", "documentLink": "/document/1702710"}, "context": [{"sec": "", "part": "", "text": " A basic block terminates at either an instruction branching to another basic block or an instruction receiving transfer of CF from two or more places in the program [3]."}, {"sec": "", "part": "", "text": " If a program is represented by its \\$P = \\{V,\\,E\\}\\$, then \\${\\rm br}_{i,\\,j}\\$ (during the execution of \\$P\\$) is illegal if \\${\\rm br}_{i,\\,j}\\$ is not included in \\$E\\$ [3]."}, {"sec": "sec1", "part": "1", "text": " The CF checking scheme in [3] is a pure software method but it constructs a database containing information about concurrent CF checking, thus it might require appreciable memory overhead."}], "title": "An approach to concurrent control flow checking", "order": "3", "text": "S. S. Yau, F.-C. Chen, \"An approach to concurrent control flow checking\", <em>IEEE Trans. Software Eng.</em>, vol. SE-6, Mar. 1980."}, {"id": "ref4", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " The watchdog task in [4] also needs no extra hardware, but the operating system must support a multitasking environment."}, {"sec": "sec2", "part": "1", "text": "assertions [4], [19];."}, {"sec": "sec2", "part": "1", "text": "watchdog task [4];."}], "title": "The watchdog task: Concurrent error detection using assertions", "order": "4", "text": "A. Ersoz, D. M. Andrews, E. J. McCluskey, <em>The watchdog task: Concurrent error detection using assertions</em>, 1985, Center for Reliable Computing, Stanford Univ."}, {"id": "ref5", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Path Signature Analysis [5];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Techniques for concurrent testing of VLSI processor operation", "order": "5", "text": "M. Namjoo, \"Techniques for concurrent testing of VLSI processor operation\", <em>Digest of Papers IEEE Test Conf.</em>, pp. 461-468, 1982."}, {"id": "ref6", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Signatured Instruction Streams (SIS) [6];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "On-line self-monitoring using signatured instruction streams", "order": "6", "text": "J. P. Shen, M. A. Schuette, \"On-line self-monitoring using signatured instruction streams\", <em>Int. Test Conf. Proc.</em>, pp. 275-282, 1982."}, {"id": "ref7", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=532620", "pdfSize": "630KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/532620"}, "context": [{"sec": "sec1", "part": "1", "text": "Asynchronous SIS [7];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Processor monitoring using asynchronous signatured instruction streams", "order": "7", "text": "J. B. Eifert, J. P. Shen, \"Processor monitoring using asynchronous signatured instruction streams\", <em>Digest of Papers 14th Ann. Int. Conf. Fault-Tolerant Computing</em>, pp. 394-399, 1984."}, {"id": "ref8", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-7091-9123-1_17"}, "context": [{"sec": "sec1", "part": "1", "text": "Continuous Signature Monitoring (CSM) [8], [9];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Concurrent error detection using signature monitoring and encryption: Low-cost concurrent-detection of processor control errors", "order": "8", "text": "A. Avizienis, J. C. Laprie, \"Concurrent error detection using signature monitoring and encryption: Low-cost concurrent-detection of processor control errors\" in Dependable Computing for Critical Applications, vol. 4, pp. 365-384, 1989, Springer-Verlag."}, {"id": "ref9", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=55193", "pdfSize": "1493KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A low-cost approach to concurrent detection of processor control errors is presented that uses a simple hardware monitor and signatures embedded into the executing program. Existing signature-monitoring techniques detect a large portion of processor control errors at a fraction of the cost of duplication. Analytical methods developed in this study show that the new approach, continuous signature monitoring (CSM), makes major advances beyond existing techniques. CSM reduces the fraction of undete...", "documentLink": "/document/55193"}, "context": [{"sec": "sec1", "part": "1", "text": "Continuous Signature Monitoring (CSM) [8], [9];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Continuous signature monitoring: Low-cost concurrent-detection of processor control errors", "order": "9", "text": "K. Wilken, J. P. Shen, \"Continuous signature monitoring: Low-cost concurrent-detection of processor control errors\", <em>IEEE Trans. Computer-Aided Design</em>, vol. 9, pp. 629-641, June 1990."}, {"id": "ref10", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=54849", "pdfSize": "706KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A control-flow checking method using extended-precision checksums and watchdog assists is proposed. Control-flow checking based on extended-precision checksums is shown to have low error detection latency compared to previously proposed methods. Analytical measures are derived to demonstrate the effectiveness of using extended-precision checksums for control flow checking. It is shown that the error detection latency in the extended-precision-checksum-based control-flow checking remains relative...", "documentLink": "/document/54849"}, "context": [{"sec": "sec1", "part": "1", "text": "extended-precision checksum method [10];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}], "title": "Control-flow checking using watchdog assists and extended-precision checksums", "order": "10", "text": "N. R. Saxena, E. J. McCluskey, \"Control-flow checking using watchdog assists and extended-precision checksums\", <em>IEEE Trans. Computers</em>, vol. 39, pp. 554-559, Apr. 1990."}, {"id": "ref11", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-7091-9198-9_19"}, "context": [{"sec": "sec1", "part": "1", "text": "On-line Signature Learning and Checking (OSLC) [11];."}, {"sec": "sec2", "part": "1", "text": " Structural Integrity Checking (SIC) [1] uses an assigned signature method while Path Signature Analysis (PSA) [5], Signatured Instruction Streams (SIS) [6], Asynchronous SIS (ASIS) [7], Continuous Signature Monitoring (CSM) [8], [9], extended-precision checksum method [10], and On-line Signature Learning and Checking (OSLC) [11] all use derived signatures."}, {"sec": "sec2", "part": "1", "text": "Block Signature Self-Checking (BSSC) [11];."}, {"sec": "sec2", "part": "1", "text": "Error Capturing Instructions (ECI) [11];."}], "title": "On-line signature learning and checking", "order": "11", "text": "J. F. Schlichting, R. D. Schlichting, \"On-line signature learning and checking\" in Dependable Computing for Critical Applications 2, pp. 395-420, 1992, Springer-Verlag."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=466976", "pdfSize": "929KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Proposes a control flow checking method that assigns unique initial signatures to each basic block in a program by using the block's start address. Using this strategy, implicit signature checking points are obtained at the beginning of each basic block, which results in a short error detection latency (2-5 instructions). Justifying signatures are embedded at each branch instruction, and a watchdog timer is used to detect the absence of a signature checking point. The method does not require the...", "documentLink": "/document/466976"}, "context": [{"sec": "sec1", "part": "1", "text": "Implicit Signature Checking (ISC) [12]."}], "title": "Implicit signature checking", "order": "12", "text": "J. Ohlsson, M. Rimen, \"Implicit signature checking\", <em>Digest of Papers 25th Int. Symp. Fault-Tolerant Computing</em>, pp. 218-227, 1995."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=523459", "pdfSize": "498KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/523459"}, "context": [{"sec": "sec1", "part": "1", "text": " Although they have similar function, the GSR differs from the reserved-register in [13]; the reserved-register stores the program or procedure name whereas the GSR stores the signature of the current node."}], "title": "Concurrent control flow checking in sequential and parallel program", "order": "13", "text": "C. H. Tung, C. W. McCarron, \"Concurrent control flow checking in sequential and parallel program\" in 24th Asilomar Conf. Signals Systems and Computers, vol. 2, pp. 851-855, 1990, Maple."}, {"id": "ref14", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/3-540-61772-8_30"}, "context": [{"sec": "sec1", "part": "1", "text": " In addition, CFCSS differs from VASC [14] in the way it embeds and checks for the signatures."}, {"sec": "sec2", "part": "1", "text": "An assigned signature monitoring technique, Versatile Assign Signature Checking (VASC), has been proposed and evaluated in [14], in which the comparison of the ratio between CF errors and data errors in RISC and CISC processors are reported."}], "title": "Fault injection evaluation of assigned signatures in RISC processors", "order": "14", "text": "P. Furtado, H. Madeira, \"Fault injection evaluation of assigned signatures in RISC processors\", <em>Proc. 2nd Euro. Dependable Computing Conf.</em>, pp. 55-72, 1996."}, {"id": "ref15", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "The motivation of CFCSS came from a real space experiment, the Stanford ARGOS (Advanced Research and Global Observation Satellite) project [15]."}], "title": "Fault-tolerant systems in a space environment: The CRC ARGOS project", "order": "15", "text": "P. P. Shirvani, E. J. McCluskey, <em>Fault-tolerant systems in a space environment: The CRC ARGOS project</em>, 1998, Center for Reliable Computing, Stanford Univ."}, {"id": "ref16", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " The USA (Unconventional Stellar Aspect) experiment [16] is one of the experiments that the ARGOS satellite carries, and includes a computing test-bed that has two processor boards."}], "title": "The USA experiment on the ARGOS satellite: A low cost instrument for timing x-ray binaries", "order": "16", "text": "K. S. Wood, \"The USA experiment on the ARGOS satellite: A low cost instrument for timing x-ray binaries\", <em>EUV X-Ray and Gamma-Ray Instrumentation for Astronomy V SPIE Proc.</em>, vol. 2280, pp. 19-30, 1994."}, {"id": "ref17", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": " A watchdog processor is proposed for this purpose in [17], [18]."}], "title": "Watchdog processors and VLSI", "order": "17", "text": "D. J. Lu, \"Watchdog processors and VLSI\", <em>Proc. Nat. Electron. Conf.</em>, vol. 34, pp. 240-245, 1980."}, {"id": "ref18", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=2145", "pdfSize": "1523KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Concurrent system-level error detection techniques using a watchdog processor are surveyed. A watchdog processor is a small and simple coprocessor that detects errors by monitoring the behavior of a system. Like replication, it does not depend on any fault model for error detection. However, it requires less hardware than replication. It is shown that a large number of errors can be detected by monitoring the control flow and memory-access behavior. Two techniques for control-flow checking are d...", "documentLink": "/document/2145"}, "context": [{"sec": "sec2", "part": "1", "text": " A watchdog processor is proposed for this purpose in [17], [18]."}], "title": "Watchdog processor: Error coverage and overhead", "order": "18", "text": "A. Mahmood, E. J. McCluskey, \"Watchdog processor: Error coverage and overhead\", <em>Digest 15th Ann. Int'l. Symp. Fault-Tolerant Computing (FTCS-15)</em>, pp. 214-219, 1985."}, {"id": "ref19", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": "assertions [4], [19];."}], "title": "Using executable assertions for testing and fault tolerance", "order": "19", "text": "D. Andrews, \"Using executable assertions for testing and fault tolerance\", <em>9th Fault-Tolerance Computing Symp.</em>, pp. 20-22, 1979."}, {"id": "ref20", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": "timers to check the behavior of the program [20];."}], "title": "Time behavior monitoring as an error detection mechanism", "order": "20", "text": "J. F. Schlichting, R. D. Schlichting, \"Time behavior monitoring as an error detection mechanism\" in Dependable Computing for Critical Applications 2, pp. 395-420, 1993, Springer-Verlag."}, {"id": "ref21", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=262118", "pdfSize": "1322KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Computer architectures are using increased degrees of instruction-level machine parallelism to achieve higher performance, e.g., superpipelined, superscalar and very long instruction word (VLIW) processors. Full utilization of such machine parallelism is difficult to achieve and sustain, resulting in the occurrence of idle resources at run time. This work explores the use of such idle resources for concurrent error detection in processors employing instruction-level machine parallelism. The Mult...", "documentLink": "/document/262118"}, "context": [{"sec": "sec2", "part": "1", "text": "Available Resource-driven Control-flow monitoring (ARC) [21];."}], "title": "Exploiting instruction-level parallelism for integrated control-flow monitoring", "order": "21", "text": "M. A. Shuette, J. P. Shen, \"Exploiting instruction-level parallelism for integrated control-flow monitoring\", <em>IEEE Trans. Computers</em>, vol. 43, pp. 129-140, Feb. 1994."}, {"id": "ref22", "refType": "biblio", "context": [{"sec": "sec2", "part": "1", "text": "temporal redundancy methods [22]."}], "title": "Effectiveness of temporal redundancy of parallel computational processes", "order": "22", "text": "V. V. Ignatushchenko, \"Effectiveness of temporal redundancy of parallel computational processes\", <em>Automation and Remote Control</em>, vol. 55, no. 6, pp. 900-911, June 1994."}, {"id": "ref23", "refType": "biblio", "context": [{"sec": "sec5", "part": "1", "text": " If the average size of one basic block is seven to eight instructions [23], then the code size overhead is about 25% to 43%."}], "title": "Computer Architecture: A Quantitative Approach", "order": "23", "text": "J. L. Hennessy, D. A. Patterson, Computer Architecture: A Quantitative Approach, 1996."}], "arnumber": "994926"}