{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/1179798/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "Experimental evaluation of error-detection mechanisms", "doi": "10.1109/TR.2002.805785", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "1179798", "endPage": "57", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/26500/1179798", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "26500", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "53", "standardTitle": "Experimental evaluation of error-detection mechanisms", "publicationDate": "March 2003", "pdfPath": "/iel5/24/26500/01179798.pdf", "mlTime": "PT0.092906S", "publicationNumber": "24", "copyrightYear": "2003", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Cristian Constantinescu holds a Ph.D. in Electrical and Computer Engineering from Polytechnic University of Bucharest, Romania. He is an Architect with Enterprise Architecture Lab, Intel Corp. Dr. Constantinescu was a Research Associate at the University of Illinois Urbana-Champaign and Duke University, and was an Associate Professor and Senior Researcher with Polytechnic Institute of Bucharest, Romania. His work includes research and development in fault-tolerant computing, validation of highly reliable systems, and reliability modeling."]}, "affiliation": "Intel Corp., Hillsboro, OR, USA", "name": "C. Constantinescu"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-08-04T10:57:38", "abstract": "Effective error-detection is paramount for building highly dependable computing systems. A new methodology, based on physical and simulated fault injection, has been developed for assessing the effectiveness of error-detection mechanisms. This approach has 2 steps: (1) transient faults are physically injected at the IC pin level of a prototype, in order to derive the error-detection coverage. Experiments are carried out in a 3-dimensional space of events. Fault location, time of occurrence, and duration of the injected fault are the dimensions of this space. (2) Simulated fault-injection is performed to assess the effectiveness of new error-detection mechanisms, designed to improve the detection coverage. Complex circuitry, based on checking for protocol violations, is considered. A temporal model of the protocol checker is used, and transient faults are injected in signal traces captured from the prototype system. These traces are used as inputs of the simulation engine. s-confidence intervals of the error-detection coverage are derived, both for the initial design and the new detection mechanism. Physical fault-injection, carried out on a prototype server, proved that several signals were sensitive to transient faults and error-detection coverage was unacceptably low. Simulated fault injection shows that an error-detection mechanism, based on checking for protocol violations, can appreciably increase the detection coverage, especially for transient faults longer that 200 nanoseconds. Additional research is required for improving the error-detection of shorter transients. Fault injection experiments also show that error-detection coverage is a function of fault duration: the shorter the transient fault, the lower the coverage. As a consequence, injecting faults that have a unique, predefined duration, as it was frequently done in the past, does not provide accurate information on the effectiveness of the error-detection mechanisms. Injecting only permanent faults leads to unrealistically high estimates of the coverage. These experiments prove that combined physical and simulated fault injection, performed in a 3-dimensional space of events, is a superior approach, which allows the designers to accurately assess the efficacy of various candidate error-detection mechanisms without building expensive test circuits.", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "1179798", "xplore-issue": "26500", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=26500", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=Experimental+evaluation+of+error-detection+mechanisms&isbn=&publicationDate=March+2003&author=C.+Constantinescu&ContentID=10.1109/TR.2002.805785&orderBeanReset=true&startPage=53&endPage=57&volumeNum=52&issueNum=1", "citationCount": "10", "keywords": [{"kwd": ["Circuit faults", "Prototypes", "Circuit simulation", "Protocols", "Fault detection", "Circuit testing", "Computational modeling", "Fault location", "Electrical fault detection", "Engines"], "type": "IEEE Keywords"}, {"kwd": ["probability", "fault location", "error detection", "fault tolerant computing", "network servers"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["permanent faults", "error-detection mechanisms", "computing systems", "simulated fault injection", "transient faults", "IC pin", "error-detection coverage", "3-dimensional space of events", "fault location", "time of occurrence", "injected fault duration", "complex circuitry", "protocol violations", "signal traces", "simulation engine", "s-confidence intervals", "server", "error-detection", "shorter transients"], "type": "INSPEC: Non-Controlled Indexing"}], "issue": "1", "chronOrPublicationDate": "March 2003", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "Experimental evaluation of error-detection mechanisms", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "52", "accessionNumber": "7778225"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/26500/1179798", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "Experimental evaluation of error-detection mechanisms", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Important factors affecting fault detection coverage in probabilistic safety assessment of digital instrumentation and control systems", "displayText": "Man Cheol Kim, Seung Jun Lee, \"Important factors affecting fault detection coverage in probabilistic safety assessment of digital instrumentation and control systems\", <em>Journal of Nuclear Science and Technology</em>, vol. 51, pp. 809, 2014, ISSN 0022-3131.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/00223131.2014.904760"}}], "ieee": [{"title": "Dependable embedded processor core for higher reliability", "displayText": "Hiroyuki Kanbara, Ryota Kinjo, Yuki Toda, Hiroyuki Okuhata, Masanao Ise, \"Dependable embedded processor core for higher reliability\", <em>Consumer Electronics 2009. ISCE '09. IEEE 13th International Symposium on</em>, pp. 819-822, 2009.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5157061", "pdfSize": "2849KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5157061"}}, {"title": "A comparative study of the design of synchronous and asynchronous self-checking RISC processors", "displayText": "P.D. Hyde, G. Russell, \"A comparative study of the design of synchronous and asynchronous self-checking RISC processors\", <em>On-Line Testing Symposium 2004. IOLTS 2004. Proceedings. 10th IEEE International</em>, pp. 89-94, 2004.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1319664", "pdfSize": "676KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1319664"}}, {"title": "Trends and challenges in VLSI circuit reliability", "displayText": "C. Constantinescu, \"Trends and challenges in VLSI circuit reliability\", <em>Micro IEEE</em>, vol. 23, pp. 14-19, 2003, ISSN 0272-1732.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1225959", "pdfSize": "281KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1225959"}}, {"title": "Evaluating Coverage of Error Detection Logic for Soft Errors using Formal Methods", "displayText": "U. Krautz, M. Pflanz, C. Jacobi, H.W. Tast, K. Weber, H.T. Vierhaus, \"Evaluating Coverage of Error Detection Logic for Soft Errors using Formal Methods\", <em>Design Automation and Test in Europe 2006. DATE '06. Proceedings</em>, vol. 1, pp. 1-6, 2006.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1656872", "pdfSize": "124KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1656872"}}, {"title": "Validation of hardware error recovery mechanisms for the SPARC64 V microprocessor", "displayText": "Hisashige Ando, Ryuji Kan, Yoshiharu Tosaka, Keiji Takahisa, Kichiji Hatanaka, \"Validation of hardware error recovery mechanisms for the SPARC64 V microprocessor\", <em>Dependable Systems and Networks With FTCS and DCC 2008. DSN 2008. IEEE International Conference on</em>, pp. 62-69, 2008.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4630071", "pdfSize": "2035KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4630071"}}, {"title": "ASSEC: an asynchronous self-checking RISC-based processor", "displayText": "P.D. Hyde, G. Russell, \"ASSEC: an asynchronous self-checking RISC-based processor\", <em>Digital System Design 2004. DSD 2004. Euromicro Symposium on</em>, pp. 104-111, 2004.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1333265", "pdfSize": "771KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1333265"}}, {"title": "Fault-Tolerant Verification Platform for Systems Modeled at High Level of Abstraction", "displayText": "Yung-Yuan Chen, Geng-Wei Wu, \"Fault-Tolerant Verification Platform for Systems Modeled at High Level of Abstraction\", <em>Systems Conference 2007 1st Annual IEEE</em>, pp. 1-7, 2007.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4258902", "pdfSize": "3173KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4258902"}}, {"title": "Dependability evaluation of a fault-tolerant processor by GSPN modeling", "displayText": "C. Constantinescu, \"Dependability evaluation of a fault-tolerant processor by GSPN modeling\", <em>Reliability IEEE Transactions on</em>, vol. 54, pp. 468-474, 2005, ISSN 0018-9529.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1505052", "pdfSize": "181KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1505052"}}, {"title": "Dependability benchmarking using environmental test tools", "displayText": "C. Constantinescu, \"Dependability benchmarking using environmental test tools\", <em>Reliability and Maintainability Symposium 2005. Proceedings. Annual</em>, pp. 567-571, 2005, ISSN 0149-144X.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1408423", "pdfSize": "542KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/1408423"}}]}, "mlTime": "PT0.07936S", "title": "Experimental evaluation of error-detection mechanisms", "lastupdate": "2016-08-04T10:57:38", "ieeeCitationCount": "9", "nonIeeeCitationCount": "1"}, "references": [{"id": "ref1", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=44380", "pdfSize": "2063KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors address the problem of validating the dependability of fault-tolerant computing systems, in particular, the validation of the fault-tolerance mechanisms. The proposed approach is based on the use of fault injection at the physical level on a hardware/software prototype of the system considered. The place of this approach in a validation-directed design process and with respect to related work on fault injection is clearly identified. The major requirements and problems related to the...", "documentLink": "/document/44380"}, "context": [{"sec": "sec1", "part": "1", "text": " The most frequently used approaches for performing physical FI are:\n\n\u2022injection at the IC pin level [1], [5], [18], [21],\n\u2022electromagnetic interference [18],\n\u2022heavy-ion radiation [17], [18]."}, {"sec": "sec1", "part": "1", "text": " Combined experiments, using both hardware, software, and simulated FI are reported in [1], [25], [30]."}, {"sec": "sec1", "part": "1", "text": "injection at the IC pin level [1], [5], [18], [21],."}], "title": "Fault injection for dependability validation: A methodology and some applications", "order": "1", "text": "J. Arlat, \"Fault injection for dependability validation: A methodology and some applications\", <em>IEEE Trans. Software Eng.</em>, vol. 16, no. 2, pp. 166-182, 1990."}, {"id": "ref2", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=54853", "pdfSize": "878KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The results of several experiments conducted using the fault-injection-based automated testing (FIAT) system are presented. FIAT is capable of emulating a variety of distributed system architectures, and it provides the capabilities to monitor system behavior and inject faults for the purpose of experimental characterization and validation of a system's dependability. The experiments consists of exhaustively injecting three separate fault types into various locations, encompassing both the code ...", "documentLink": "/document/54853"}, "context": [{"sec": "sec1", "part": "1", "text": " Results of software FI experiments are extensively discussed in [2], [4], [27]."}], "title": "Fault injection experiments using FIAT", "order": "2", "text": "J. Barton, E. Czeck, Z. Segall, D. Siewiorek, \"Fault injection experiments using FIAT\", <em>IEEE Trans. Comput.</em>, vol. 39, no. 4, pp. 575-582, 1990."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=666826", "pdfSize": "346KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "An important step in the development of dependable systems is the validation of their fault tolerance properties. Fault injection has been widely used for this purpose, however with the rapid increase in processor complexity, traditional techniques are also increasingly more difficult to apply. This paper presents a new software-implemented fault injection and monitoring environment, called Xception, which is targeted at modern and complex processors. Xception uses the advanced debugging and per...", "documentLink": "/document/666826"}, "context": [{"sec": "sec1", "part": "1", "text": " Several software tools, such as FIAT [26], EFA [8], DOCTOR [12], FERRARI [16], and Xception [3], are presented in the literature."}], "title": "Xception: A technique for the experimental evaluation of dependability in modern computers", "order": "3", "text": "J. Carreira, H. Madeira, J. G. Silva, \"Xception: A technique for the experimental evaluation of dependability in modern computers\", <em>IEEE Trans. Software Eng.</em>, vol. 24, pp. 125-136, Feb. 1998."}, {"id": "ref4", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=105592", "pdfSize": "659KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Fault injection is used to characterize large system failures. Thus, it overcomes limitations imposed by the lack of complete information in field failure data. The experiment is conducted on a commercial transaction processing system. The authors: (1) introduce the idea of failure acceleration to conduct such experiments; (2) estimate total loss of the primary service to occur in only 16% of the faults; (3) reveal errors termed potential hazards that do not affect short-term availability but ca...", "documentLink": "/document/105592"}, "context": [{"sec": "sec1", "part": "1", "text": " Results of software FI experiments are extensively discussed in [2], [4], [27]."}], "title": "Understanding large systems failures&#821A fault injection experiment", "order": "4", "text": "R. Chillarege, N. Bowen, \"Understanding large systems failures&#821A fault injection experiment\", <em>Proc. 19th FTCS Symp.</em>, pp. 356-363, 1989."}, {"id": "ref5", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=869320", "pdfSize": "299KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Intel Corporation developed the Teraflops supercomputer for the US Department of Energy (DOE) as part of the Accelerated Strategic Computing Initiative (ASCI). This is the most powerful computing machine available today, performing over two trillion floating point operations per second with the aid of more than 9,000 Intel processors. The Teraflops machine employs complex hardware and software fault/error handling mechanisms for complying with DOE's reliability requirements. This paper gives a b...", "documentLink": "/document/869320"}, "context": [{"sec": "sec1", "part": "1", "text": "injection at the IC pin level [1], [5], [18], [21],."}, {"sec": "sec1", "part": "1", "text": "1)\u2002Transient faults are physically injected in a prototype server, according to the technique in [5]."}], "title": "Teraflops supercomputer: Architecture and validations of the fault tolerance mechanisms", "order": "5", "text": "C. Constantinescu, \"Teraflops supercomputer: Architecture and validations of the fault tolerance mechanisms\", <em>IEEE Trans. Comput.</em>, vol. 49, no. 9, pp. 886-894, Sept. 2000."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=318463", "pdfSize": "464KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Dependability validation is a major step toward development of high-assurance computing systems. This paper addresses the problem of estimating the coverage probabilities by statistically processing the information collected through physical or simulated fault injection. 3-stage random sampling is employed to derive the means, variances and confidence intervals of the coverage probabilities. The statistical experiments are carried out in a 3D fault space that accounts for system inputs, fault in...", "documentLink": "/document/318463"}, "context": [{"sec": "sec4", "part": "1", "text": " The analysis of the coverage of error-detection/recovery [6], [7], is based on multi-stage, stratified and combined sampling techniques."}], "title": "Estimation of coverage probabilities for dependability validation of fault-tolerant computing systems", "order": "6", "text": "C. Constantinescu, \"Estimation of coverage probabilities for dependability validation of fault-tolerant computing systems\", <em>Proc. 9th Annu. Conf. Computer Assurance</em>, pp. 101-106, 1994."}, {"id": "ref7", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=475993", "pdfSize": "811KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Development of fault-tolerant computing systems requires accurate reliability modeling. Analytic, simulation, and hybrid models are commonly used for obtaining reliability measures. These measures are functions of component failure rates and fault-coverage (probabilities). Coverage provides information about the fault and error detection, isolation, and system recovery capabilities. This parameter can be derived by physical or simulated fault injection. Statistical inference has been used to ext...", "documentLink": "/document/475993"}, "context": [{"sec": "sec3", "part": "1", "text": " A 3-dimensional space of events, consisting of fault locations, time of occurrence, and duration of the faults is considered [7]."}, {"sec": "sec4", "part": "1", "text": " The analysis of the coverage of error-detection/recovery [6], [7], is based on multi-stage, stratified and combined sampling techniques."}], "title": "IEEE Trans. Rel.", "order": "7", "text": "C. Constantinescu, <em>IEEE Trans. Rel.</em>, vol. 44, no. 4, pp. 632-639, 1995."}, {"id": "ref8", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=494496", "pdfSize": "597KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Fault tolerance protocols can be checked for design faults by injecting operation fault cases. We present a scheme for generating these operation fault cases on the basis of a reachability analysis. Thereby, we aim at a low number of cases by choosing an appropriate model representing the essential properties of fault tolerance techniques in detail and abstracts from others. Timing and selection of redundant data are expressed accurately, whereas application functions, iterations and recursions ...", "documentLink": "/document/494496"}, "context": [{"sec": "sec1", "part": "1", "text": " Several software tools, such as FIAT [26], EFA [8], DOCTOR [12], FERRARI [16], and Xception [3], are presented in the literature."}], "title": "The EFA fault injector for fault tolerant distributed system testing", "order": "8", "text": "K. Echtle, M. Leu, \"The EFA fault injector for fault tolerant distributed system testing\", <em>Proc. Fault Tolerant Parallel and Distributed Systems Workshop</em>, pp. 28-35, 1992."}, {"id": "ref9", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=689479", "pdfSize": "54KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper compares two fault injection techniques: scan chain implemented fault injection (SCIFI), i.e. fault injection in a physical system using built in test logic, and fault injection in a VHDL software simulation model of a system. The fault injections were used to evaluate the error detection mechanisms included in the Thor RISC microprocessor, developed by Saab Ericsson Space AB. The Thor microprocessor uses several advanced error detection mechanisms including control flow checking, sta...", "documentLink": "/document/689479"}, "context": [{"sec": "sec1", "part": "1", "text": " Scan Chain Implemented FI (SCIFI) and VHDL simulated FI experiments are presented in [9]."}], "title": "A comparison of simulated based and scan chain implemented fault injection", "order": "9", "text": "P. Folkesson, S. Svensson, J. Karlsson, \"A comparison of simulated based and scan chain implemented fault injection\", <em>Proc. 28th FTCS Symp.</em>, pp. 284-293, 1998."}, {"id": "ref10", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=395832", "pdfSize": "958KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The design of complex systems in safety-critical applications requires an integrated design and assessment environment. The paper presents the ADEPT environment for designing dependable systems from concept to implementation. An application of ADEPT to modeling a distributed computer system used in real-time embedded train control applications is described. Results from a performance analysis of the distributed computer system model are illustrated. Dependability results are also presented for a...", "documentLink": "/document/395832"}, "context": [{"sec": "sec1", "part": "1", "text": " ADEPT [10], DEPEND [11], and MEFISTO [15] are among the most frequently used FI simulation tools."}], "title": "System-level modeling in the ADEPT environment of a distributed computer system for real-time applications", "order": "10", "text": "A. Ghosh, B. Johnson, \"System-level modeling in the ADEPT environment of a distributed computer system for real-time applications\", <em>Proc. IEEE Int. Computer Performance and Dependability Symp.</em>, pp. 194-203, 1995."}, {"id": "ref11", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=559803", "pdfSize": "397KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The paper presents the rationale for a functional simulation tool, called DEPEND, which provides an integrated design and fault injection environment for system level dependability analysis. The paper discusses the issues and problems of developing such a tool, and describes how DEPEND tackles them. Techniques developed to simulate realistic fault scenarios, reduce simulation time explosion, and handle the large fault model and component domain associated with system level analysis are presented...", "documentLink": "/document/559803"}, "context": [{"sec": "sec1", "part": "1", "text": " ADEPT [10], DEPEND [11], and MEFISTO [15] are among the most frequently used FI simulation tools."}], "title": "DEPEND: A simulation based environment for system level dependability analysis", "order": "11", "text": "K. Goswami, R. K. Iyer, L. Young, \"DEPEND: A simulation based environment for system level dependability analysis\", <em>IEEE Trans. Comput.</em>, vol. 46, no. 1, pp. 60-74, 1997."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=395831", "pdfSize": "931KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The paper presents an integrated software fault injection environment (DOCTOR) which is capable of (1) generating synthetic workloads under which system dependability is evaluated, (2) injecting various types of faults with different options, and (3) collecting performance and dependability data. A comprehensive graphical user interface is also provided. The software implemented fault-injection tools supports three types of faults: memory faults, CPU faults, and communication faults. Each inject...", "documentLink": "/document/395831"}, "context": [{"sec": "sec1", "part": "1", "text": " Several software tools, such as FIAT [26], EFA [8], DOCTOR [12], FERRARI [16], and Xception [3], are presented in the literature."}], "title": "DOCTOR: An integrated software fault injection environment for distributed real-time systems", "order": "12", "text": "S. Han, K. Shin, H. Rosenberg, \"DOCTOR: An integrated software fault injection environment for distributed real-time systems\", <em>Proc. IEEE Int. Computer Performance and Dependability Symp.</em>, pp. 204-213, 1995."}, {"id": "ref13", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=585157", "pdfSize": "1273KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Fault injection is important to evaluating the dependability of computer systems. Researchers and engineers have created many novel methods to inject faults, which can be implemented in both hardware and software. The contrast between the hardware and software methods lies mainly in the fault injection points they can access, the cost and the level of perturbation. Hardware methods can inject faults into chip pins and internal components, such as combinational circuits and registers that are not...", "documentLink": "/document/585157"}, "context": [{"sec": "sec1", "part": "1", "text": " A compendium of FI methods is given in [13]."}], "title": "Fault injection techniques and tools", "order": "13", "text": "M. C. Hsueh, T. K. Tsai, R. K. Iyer, \"Fault injection techniques and tools\", <em>IEEE Computer</em>, pp. 75-82, Apr. 1997."}, {"id": "ref14", "refType": "biblio", "context": [{"sec": "sec3", "part": "1", "text": "\nTransient faults are injected in both stages of the experiment, because they are the most common source of errors experienced by modern computers [14], [19], [28]."}], "title": "Experimental evaluation", "order": "14", "text": "R. K. Iyer, \"Experimental evaluation\", <em>Proc. 25th FTCS Symp.</em>, pp. 115-132, 1995."}, {"id": "ref15", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=315656", "pdfSize": "1078KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper focuses on the integration of the fault injection methodology within the design process of fault-tolerant systems. Due to its wide spectrum of application and hierarchical features, VHDL has been selected as the simulation language to support such an integration. Suitable techniques for injecting faults into VHDL models are identified and depicted. Then, the main features of the MEFISTO environment aimed at supporting these techniques are described. Finally, some preliminary results o...", "documentLink": "/document/315656"}, "context": [{"sec": "sec1", "part": "1", "text": " ADEPT [10], DEPEND [11], and MEFISTO [15] are among the most frequently used FI simulation tools."}], "title": "Fault injection into VHDL models: The MEFISTO tool", "order": "15", "text": "E. Jenn, \"Fault injection into VHDL models: The MEFISTO tool\", <em>Proc. 24th FTCS Symp.</em>, pp. 66-75, 1994."}, {"id": "ref16", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=243567", "pdfSize": "770KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The authors present FERRARI, a fault and error automatic real-time injector, which can evaluate complex systems by emulating most hardware faults in software. The current version of FERRARI runs on SPARC workstations, in an Xwindow environment. The motivation, methodology, design, implementation, and evaluation of FERRARI are presented. The techniques used to emulate permanent faults and transient errors in software are described in detail. Experimental results are presented for several error de...", "documentLink": "/document/243567"}, "context": [{"sec": "sec1", "part": "1", "text": " Several software tools, such as FIAT [26], EFA [8], DOCTOR [12], FERRARI [16], and Xception [3], are presented in the literature."}], "title": "FERRARI: A tool for the validation of system dependability properties", "order": "16", "text": "G. Kanawati, N. Kanawati, J. Abraham, \"FERRARI: A tool for the validation of system dependability properties\", <em>Proc. 22nd FTCS Symp.</em>, pp. 336-344, 1992."}, {"id": "ref17", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=259894", "pdfSize": "1694KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Fault injection is an effective method for studying the effects of faults in computer systems and for validating fault-handling mechanisms. The approach presented involves injecting transient faults into integrated circuits by using heavy-ion radiation from a Californium-252 source. The proliferation of safety-critical and fault-tolerant systems using VLSI technology makes such attempts to inject faults at internal locations in VLSI circuits increasingly important.", "documentLink": "/document/259894"}, "context": [{"sec": "sec1", "part": "1", "text": "heavy-ion radiation [17], [18]."}], "title": "Using heavy-ion radiation to validate fault handling mechanisms", "order": "17", "text": "J. Karlsson, \"Using heavy-ion radiation to validate fault handling mechanisms\", <em>IEEE Micro</em>, vol. 14, no. 1, pp. 8-32, 1994."}, {"id": "ref18", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "injection at the IC pin level [1], [5], [18], [21],."}, {"sec": "sec1", "part": "1", "text": "electromagnetic interference [18],."}, {"sec": "sec1", "part": "1", "text": "heavy-ion radiation [17], [18]."}], "title": "Application of three physical fault injection techniques to the experimental assessment of the MARS architecture", "order": "18", "text": "J. Karlsson, \"Application of three physical fault injection techniques to the experimental assessment of the MARS architecture\", <em>Proc. 5th DCCA Conf.</em>, pp. 150-161, 1995."}, {"id": "ref19", "refType": "biblio", "context": [{"sec": "sec3", "part": "1", "text": "\nTransient faults are injected in both stages of the experiment, because they are the most common source of errors experienced by modern computers [14], [19], [28]."}], "title": "Fault Tolerant and Fault Testable Hardware Design", "order": "19", "text": "P. K. Lala, Fault Tolerant and Fault Testable Hardware Design, 1985, Prentice Hall."}, {"id": "ref20", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-642-79789-7_1"}, "context": [{"sec": "fn2", "text": "Dependability subsumes reliability, availability, maintainability, safety, and security [20].", "type": "footnote"}], "title": "Dependability&#821Its attributes, impairments and means", "order": "20", "text": "B. Randell, J. C. Laprie, H. Kopetz, B. Littlewood, \"Dependability&#821Its attributes impairments and means\" in Predictably Dependable Computing Systems, pp. 1-28, 1995, Springer-Verlag."}, {"id": "ref21", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/3-540-58426-9_132"}, "context": [{"sec": "sec1", "part": "1", "text": "injection at the IC pin level [1], [5], [18], [21],."}], "title": "A general purpose pin-level fault injector", "order": "21", "text": "H. Madeira, M. Rela, F. Moreira, J. G. Silva, \"A general purpose pin-level fault injector\", <em>Proc. 1st European Dependable Computing Conf.</em>, pp. 199-216, 1994."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=364537", "pdfSize": "1342KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper addresses the problem of estimating the coverage of a fault tolerance mechanism through statistical professing of observations collected in fault injection experiments. A formal definition of coverage is given in terms of the fault and system activity sets that characterize the input space. Two categories of sampling techniques are considered for coverage estimation: sampling in the whole space and sampling in a space partitioned into classes. The estimators for each technique are com...", "documentLink": "/document/364537"}, "context": [{"sec": "sec4", "part": "1", "text": " Sampling in partitioned/nonpartitioned spaces, and stratified and 2-stage sampling are among the main techniques used for estimating coverage probabilities [22], [23]."}], "title": "Estimators for fault tolerance coverage evaluation", "order": "22", "text": "D. Powel, E. Martins, J. Arlat, Y. Crouzet, \"Estimators for fault tolerance coverage evaluation\", <em>IEEE Trans. Comput.</em>, vol. 44, pp. 261-274, Feb. 1995."}, {"id": "ref23", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/3-540-61772-8_29"}, "context": [{"sec": "sec4", "part": "1", "text": " Sampling in partitioned/nonpartitioned spaces, and stratified and 2-stage sampling are among the main techniques used for estimating coverage probabilities [22], [23]."}], "title": "On stratified sampling for high coverage estimators", "order": "23", "text": "D. Powel, M. Cukier, J. Arlat, \"On stratified sampling for high coverage estimators\", <em>Proc. 2nd European Dependable Computing Conf.</em>, pp. 37-54, 1996."}, {"id": "ref24", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=689466", "pdfSize": "80KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper describes the successful development and demonstration of a Laser Fault Injection (LFI) technique to inject soft, i.e., transient, faults into VLSI circuits in a precisely-controlled, non-destructive, non-intrusive manner for the purpose of validating fault tolerant design and performance. The technique described in this paper not only enables the validation of fault-tolerant VLSI designs, but it also offers the potential for performing automated testing of board-level and system-leve...", "documentLink": "/document/689466"}, "context": [{"sec": "sec1", "part": "1", "text": "\nLaser FI has also been gaining ground lately [24]."}], "title": "A technique for automated validation of fault tolerant designs using laser fault injection (LFI)", "order": "24", "text": "J. R. Samson, Jr., W. Moreno, F. Falquez, \"A technique for automated validation of fault tolerant designs using laser fault injection (LFI)\", <em>Proc. 28th FTCS Symp.</em>, pp. 162-167, 1998."}, {"id": "ref25", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=656094", "pdfSize": "394KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a dependability study of high-speed, switched Local Area Networks (LANs) using Myrinet as an example testbed (with theoretical speeds of 2.56 Gbps). The study uses results of two fault injection methods, simulated fault injection and software-implemented fault injection (SWIFI), to analyze the application-level impact of transient faults injected into the network interface hardware. These results include a number of errors, such as dropped or corrupt messages, host interface ...", "documentLink": "/document/656094"}, "context": [{"sec": "sec1", "part": "1", "text": " Combined experiments, using both hardware, software, and simulated FI are reported in [1], [25], [30]."}], "title": "Dependability analysis of a high-speed network using software-implemented fault injection and simulated fault injection", "order": "25", "text": "D. T. Scott, G. Ries, M. Hsueh, R. K. Iyer, \"Dependability analysis of a high-speed network using software-implemented fault injection and simulated fault injection\", <em>IEEE Trans. Comput.</em>, vol. 47, no. 1, pp. 108-119, Jan. 1998."}, {"id": "ref26", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5306", "pdfSize": "393KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "An automated real-time distributed accelerated fault injection environment (FIAT) is presented as an attempt to provide suitable tools for the validation process. The authors present the concepts and design, as well as the implementation and evaluation of the FIAT environment. As this system has been built, evaluated and is currently in use, an example of fault tolerant systems such as checkpointing and duplicate and match is used to show its usefulness.", "documentLink": "/document/5306"}, "context": [{"sec": "sec1", "part": "1", "text": " Several software tools, such as FIAT [26], EFA [8], DOCTOR [12], FERRARI [16], and Xception [3], are presented in the literature."}], "title": "FIAT: Fault injection based automated testing environment", "order": "26", "text": "Z. Segal, T. Lin, \"FIAT: Fault injection based automated testing environment\", <em>Proc. 18th FTCS Symp.</em>, pp. 102-107, 1988."}, {"id": "ref27", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=534627", "pdfSize": "1224KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In the research reported in this paper, transient faults were injected in the nodes and in the communication subsystem (by using software fault injection) of a commercial parallel machine running several real applications. The results showed that a significant percentage of faults caused the system to produce wrong results while the application seemed to terminate normally, thus demonstrating that fault tolerance techniques are required in parallel systems, not only to assure that long-running a...", "documentLink": "/document/534627"}, "context": [{"sec": "sec1", "part": "1", "text": " Results of software FI experiments are extensively discussed in [2], [4], [27]."}], "title": "Experimental assessment of parallel systems", "order": "27", "text": "J. G. Silva, \"Experimental assessment of parallel systems\", <em>Proc. 26th FTCS Symp.</em>, pp. 415-424, 1996."}, {"id": "ref28", "refType": "biblio", "context": [{"sec": "sec3", "part": "1", "text": "\nTransient faults are injected in both stages of the experiment, because they are the most common source of errors experienced by modern computers [14], [19], [28]."}], "title": "Reliable Computer Systems&#821Design and Evaluation", "order": "28", "text": "D. P. Siewiorek, R. S. Swarz, Reliable Computer Systems&#821Design and Evaluation, 1998, A. K. Peters Ltd."}, {"id": "ref29", "refType": "biblio", "context": [{"sec": "sec4", "part": "1", "text": " The statistic \\$S_n = \\sum_{i=1}^n X_i\\$ is binomially distributed [29], with Cdf \\$F_{S_n}(k) = B(k;\\,n,\\,c)\\$."}, {"sec": "sec4", "part": "1", "text": "When \\$c\\$ is anticipated to be low (\\$c < 0.1\\$) or high (\\$c > 0.9\\$), it is desirable to derive 1-sided CI, with the aid of the \\$\\chi^2\\$ distribution with \\$2(k + 1)\\$ degrees of freedom [29]."}], "title": "10", "order": "29", "text": "K. S. Trivedi, \"10\" in Probability and Statistics with Reliability Queuing and Computer Science Applications, 1982, Prentice-Hall."}, {"id": "ref30", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=58727", "pdfSize": "886KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The issues related to the experimental evaluation of an early conceptual prototype of the MAFT (multicomputer architecture for fault tolerance) architecture are discussed. A completely automated testing approach was designed to allow fault-injection experiments to be performed, including stuck-at and memory faults. Over 2000 injection tests were run and the system successfully tolerated all faults. Concurrent with the experimental evaluation, an analytic evaluation was carried out to determine i...", "documentLink": "/document/58727"}, "context": [{"sec": "sec1", "part": "1", "text": " Combined experiments, using both hardware, software, and simulated FI are reported in [1], [25], [30]."}], "title": "Evaluation and design of an ultra reliable distributed architecture for fault tolerance", "order": "30", "text": "C. J. Walter, \"Evaluation and design of an ultra reliable distributed architecture for fault tolerance\", <em>IEEE Trans. Rel.</em>, vol. 39, no. 4, pp. 492-499, 1990."}, {"id": "ref31", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "2)\u2002The protocol checker is simulated with the aid of a temporal language, called PROTO [31]."}, {"sec": "sec3b", "part": "1", "text": " PROTO, a temporal language which models the behavior of complex devices as a series of timed expressions, is used to describe the error-detection circuitry [31]."}], "title": "PROTO language", "order": "31", "text": "<em>PROTO language</em>, 1995, Intel Corp."}], "arnumber": "1179798"}