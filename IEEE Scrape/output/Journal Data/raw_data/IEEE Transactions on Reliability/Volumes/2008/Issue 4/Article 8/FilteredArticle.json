{"arnumber": "4668473", "details": {"title": "Comparison of Reliability and Testing Models", "volume": "57", "keywords": [{"type": "IEEE Keywords", "kwd": ["System testing", "Solid modeling", "Space shuttles", "Fault trees", "Software reliability", "Risk analysis", "Computer errors", "Predictive models", "Engines", "Failure analysis"]}, {"type": "INSPEC: Controlled Indexing", "kwd": ["software reliability", "binomial distribution", "fault trees", "program testing"]}, {"type": "INSPEC: Non-Controlled Indexing", "kwd": ["Schneidewind software reliability model", "testing models", "fault tree analysis", "geometric models;", "binomial statistical models", "reliability growth models", "Yamada S shape model", "Schneidewind single parameter model"]}, {"type": "Author Keywords ", "kwd": ["software testing", "Model comparison", "software reliability"]}], "issue": "4", "link": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "authors": [{"affiliation": "Naval Postgrad. Sch., Monterey, CA", "bio": {"p": ["Norman F. Schneidewind is Professor Emeritus of Information Sciences in the Department of Information Sciences and the Software Engineering Group at the Naval Postgraduate School. He is now doing research and publishing in software reliability and metrics with his consulting company Computer Research. Dr. Schneidewind is a Fellow of the IEEE, elected in 1992 for \u201ccontributions to software measurement models in reliability and metrics, and for leadership in advancing the field of software maintenance\u201d. In 2001, he received the IEEE \u201cReliability Engineer of the Year\u201d award from the IEEE Reliability Society. In 1993 and 1999, he received awards for Outstanding Research Achievement by the Naval Postgraduate School. Dr. Schneidewind was selected for an IEEE USA Congressional Fellowship for 2005, and worked with the Committee on Homeland Security and Government Affairs, United States Senate, focusing on homeland security and cyber security."]}, "name": "Norman Schneidewind"}], "publisher": "IEEE", "doi": "10.1109/TR.2008.2005859", "abstract": "We were curious about how well various reliability and testing models would compare with respect to prediction accuracy and testing effectiveness. Therefore, we conducted several experiments to evaluate these properties for the following models: fault tree analysis, geometric and binomial statistical models; and reliability growth models: Yamada S Shape Model, Schneidewind Single Parameter Model, and Schneidewind Software Reliability Model. We developed modified versions of the geometric and binomial models that comprise a new contribution to the body of software reliability research. The Yamada model provided the best prediction accuracy for one of the Shuttle's failure data sets. Future research would involve evaluating all models against multiple data sets."}, "references": [{"title": "An Overview of Quantitative Risk Assessment of Space Shuttle Propulsion Elements,", "context": [{"text": "Since the Space Shuttle Challenger accident in 1986, NASA has been incorporating Quantitative Risk Analysis (QRA) in decisions concerning the Space Shuttle, and other NASA projects [1].", "sec": "sec1a", "part": "1"}, {"text": " The first step in the MSFC technical approach is the identification of the most critical failure modes or events to be modeled (e.g., Shuttle main engines shut down prematurely, and external tank does not separate from vehicle) [1].", "sec": "sec3", "part": "1"}], "order": "1", "id": "ref1", "text": "F. M. Safie, <em>An Overview of Quantitative Risk Assessment of Space Shuttle Propulsion Elements</em>.", "refType": "biblio"}, {"title": "Use of probabilistic design\nmethods for NASA applications", "context": [{"text": " For example, an extensive study was conducted to determine whether to eliminate the preproof test x-ray inspections on the Space Shuttle external tank (ET) [2].", "sec": "sec1a", "part": "1"}], "order": "2", "id": "ref2", "text": "F. M. Safie, \"Use of probabilistic design\nmethods for NASA applications\", <em>ASME Symposium on Reliability Technology</em>, 1992.", "refType": "biblio"}, {"title": "A risk assessment methodology\nfor the space shuttle external tank welds", "context": [{"text": " In reliability prediction, similar probabilistic structural models have been used by MSFC to predict the reliability of newly developed hardware such as X-33, and X-34 engines [3].", "sec": "sec1a", "part": "1"}], "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a simulation model designed to evaluate the risk involved in deleting preproof test x-ray inspection of some welds on the Space Shuttle external tank (ET). The simulation model combines engineering and statistical models to evaluate the risk of a weld leak or burst during proof test and flight. Results of the model show that the risk due to the deletion of x-ray inspections is relatively high. This suggests that deleting the x-ray inspection would be a step in the wrong direc...", "documentLink": "/document/291113", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=291113", "pdfSize": "377KB"}, "id": "ref3", "text": "F. M. Safie, \"A risk assessment methodology\nfor the space shuttle external tank welds\", <em>Reliability and Maintainability Symposium</em>, 1994.", "refType": "biblio"}, {"title": "AIAA Recommended Practice for Software Reliability", "context": [{"text": " We included reliability growth models because they are models recommended in the AIAA Recommended Practice on Reliability [4].", "sec": "sec1c", "part": "1"}], "order": "4", "id": "ref4", "text": "AIAA Recommended Practice for Software Reliability, 1993, American Institute of Aeronautics and Astronautics.", "refType": "biblio"}, {"title": "Computing Systems Reliability: Models and Analysis", "context": [{"text": " [5], the assumption of independence among runs can be a problem in reliability growth models: A common assumption is the independence among successive software runs.", "sec": "sec2", "part": "1"}], "order": "5", "id": "ref5", "text": "M. Xie, Y. S. Dai, K. L. Poh, Computing Systems Reliability: Models and Analysis, April 2004, Springer Publishers (was Kluwer Academic Publishers).", "refType": "biblio"}, {"title": "Point Process Models with Application to Safety and Reliability", "context": [{"text": "According to [6], the following are the steps required for assuring safety and reliability in mission critical systems.", "sec": "sec3", "part": "1"}], "order": "6", "id": "ref6", "text": "W. A. Thompson, Point Process Models with Application to Safety and Reliability, 1998, Chapman and Hall.", "refType": "biblio"}, {"title": "Software Engineering for Safety: A Roadmap,", "context": [{"text": " Historically, the discontinuity between system and software safety requirements has been a problem [7].", "sec": "sec4", "part": "1"}], "order": "7", "links": {"acmLink": "http://dx.doi.org/10.1145/336512.336556", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref7", "text": "R. R. Lutz, <em>Software Engineering for Safety: A Roadmap</em>, 2000.", "refType": "biblio"}, {"title": "Experience with the application\nof HAZOP to computer-based systems", "context": [{"text": " McDermid [8] has criticized the typical safety case for a software-based system in this regard.", "sec": "sec4", "part": "1"}], "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper summarises the experience gained from application of Hazard and Operability Studies (HAZOP) and related techniques to four computer-based systems. Emphasis is placed on working practices and the integration of HAZOP-style analysis into a safety-oriented lifecycle. Two of the case studies are described in some detail. An industrial study is used to investigate working practices, highlighting a number of areas of concern with the traditional team approach. A second example is described ...", "documentLink": "/document/521885", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=521885", "pdfSize": "1203KB"}, "id": "ref8", "text": "J. A. McDermid, M. Nicholson, D. J. Pumfrey, P. Fenelon, \"Experience with the application\nof HAZOP to computer-based systems\", <em>Proc 10th Annual Conference on Computer Assurance</em>, pp. 37-48, 1995.", "refType": "biblio"}, {"title": "Software Glitches Leave Navy Smart Ship Dead in the Water,", "context": [{"text": " Second, corrective maintenance was not to fix the design, as would be expected; but to retrain the operators to bypass a bad data field, and change the value if such a problem occurs again! [9].", "sec": "sec4", "part": "1"}], "order": "9", "id": "ref9", "text": "G. Slabodkin, <em>Software Glitches Leave Navy Smart Ship Dead in the Water</em>, July 1998,  [online]  Available: http://www.gcn.com/archives-/gcn/1998/July13/cov2.htm.", "refType": "biblio"}, {"title": "A successful application of\nsoftware reliability engineering for the NASA space shuttle", "context": [{"text": " Thus the process is improved so that there is no repetition of the fault & failure [10].", "sec": "sec4", "part": "1"}], "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "The Space Shuttle avionics software represents a successful integration of many of the computer industry's most advanced software engineering practices and approaches. Beginning in the late 1970s this software development and maintenance project has evolved one of the world's most mature software processes applying the principles of the highest levels of the Carnegie Mellon University Software Engineering Institute's Capability Maturity Model, Trusted Software Methodology, and ISO 9001 standards...", "documentLink": "/document/637849", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=637849", "pdfSize": "926KB"}, "id": "ref10", "text": "T. Keller, N. F. Schneidewind, \"A successful application of\nsoftware reliability engineering for the NASA space shuttle\", <em>Software Reliability Engineering Case Studies International Symposium on Software Reliability Engineering</em>, pp. 71-82, 1997-November-4.", "refType": "biblio"}, {"title": "Evaluation of safety-critical\nsoftware", "context": [{"text": "Parnas, van Schouwen, & Kwan [11] point out that, in conventional engineering, every design is characterized by a tolerance, such that being within the specified tolerance is adequate.", "sec": "sec4a", "part": "1"}, {"text": " The limits to our ability to develop safe systems are thus related to what is, as far as we know, this innate characteristic of software [11].", "sec": "sec4a", "part": "1"}], "order": "11", "links": {"acmLink": "http://dx.doi.org/10.1145/78973.78974", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref11", "text": "D. L. Parnas, J. van Schouwen, S. P. Kwan, \"Evaluation of safety-critical\nsoftware\", <em>CACM</em>, vol. 33, no. 6, pp. 636-648, 1990.", "refType": "biblio"}, {"title": "A Software Reliability Model Based on a Geometric Sequence of Failure Rates", "context": [{"text": " The one in (1) was inspired by [12].", "sec": "sec5a", "part": "1"}], "order": "12", "links": {"crossRefLink": "http://dx.doi.org/10.1007/11767077_12", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref12", "text": "S. Wagner, H. Fischer, A Software Reliability Model Based on a Geometric Sequence of Failure Rates, Institut fur Informatik, Technische Universitat Munchen.", "refType": "biblio"}, {"title": "Specification and Evaluation of Safety Properties in a Component-based Software Engineering Process,", "context": [{"text": "Fault tree analysis is constructed according to the following principles [13], with the modification that we use failures instead of faults, because the former are pertinent to Shuttle analysis, and the data are available.", "sec": "sec6", "part": "1"}], "order": "13", "id": "ref13", "text": "L. Grunske, B. Kaiser, R. H. Reussner, <em>Specification and Evaluation of Safety Properties in a Component-based Software Engineering Process</em>, pp. 26, 2005,  [online]  Available: Springer.com.", "refType": "biblio"}, {"title": "Fault Tree Handbook", "context": [{"text": "FTA [14] is a graphical safety and reliability analysis technique, which has been used in various industry branches for over 40 years.", "sec": "sec6", "part": "1"}], "order": "14", "id": "ref14", "text": "W. E. Vesely, F. F. Goldberg, N. H. Roberts, D. F. Haasl, Fault Tree Handbook, 1996, U. S. Nuclear Regulatory Commission.", "refType": "biblio"}, {"title": "A new software reliability\nmodel", "context": [{"text": " One model is the SSPM [15].", "sec": "sec8a", "part": "1"}, {"text": "To predict reliability, first we have to predict the mean number of failures occurring on test i [15].", "sec": "sec8a", "part": "1"}, {"text": "Continuing the process of predicting reliability, we need the probability of \\${\\rm x}_{\\rm i}\\$ failures in test i, in (27) [15].", "sec": "sec8a", "part": "1"}, {"text": "Finally, using (27), reliability after n_{t} tests, based on \\${\\rm x}_{\\rm i}\\ {\\rm failures}=0\\$, is predicted in (28) [15].", "sec": "sec8a", "part": "1"}, {"text": " For example, SSRM has faired better in other experiments involving the use of NASA Goddard Space Flight Center Satellite Data with a sample size of 15 predictions [15].", "sec": "sec10", "part": "1"}], "order": "15", "id": "ref15", "text": "N. F. Schneidewind, \"A new software reliability\nmodel\", <em>The R & M Engineering Journal American Society for Quality</em>, vol. 26, no. 3, pp. 6-22, September 2006.", "refType": "biblio"}, {"title": "Software Reliability Modelling", "context": [{"text": "The YSSM [16] has the interesting characteristic of a failure rate that does not monotonically decrease with time, as is the case with most reliability growth models (e.g., SSPM).", "sec": "sec8b", "part": "1"}, {"text": "The mean number of failures during test i is [16]  where \\$a\\$ denotes the number of failures occurring during test \\$i\\$, and \\$b\\$ is the failure rate.", "sec": "sec8b", "part": "1"}, {"text": " The reason for this is that, unlike SSPM that assumes a monotonically decreasing failure rate, YSSM is based on the s-shaped failure rate that is characteristic of the Shuttle [16].", "sec": "sec9", "part": "1"}], "order": "16", "links": {"crossRefLink": "http://dx.doi.org/10.1142/1390", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "id": "ref16", "text": "M. Xie, Software Reliability Modelling, 1991, World Scientific.", "refType": "biblio"}, {"title": "Statistical Modeling and Estimation of Reliability Functions for Software (SMERFS) Users Guide", "context": [{"text": " Equation (29) is computed using the Statistical Modeling and Estimation of Reliability Functions for Systems (SMERFS) software reliability tool [17].", "sec": "sec8b", "part": "1"}, {"text": " Software reliability tools like SMERFS [17], and Computer Aided Software Reliability Estimation (CASRE) [20] allow you to assess whether the model fits the failure data.", "sec": "sec10", "part": "1"}], "order": "17", "id": "ref17", "text": "W. H. Farr, O. D. Smith, <em>Statistical Modeling and Estimation of Reliability Functions for Software (SMERFS) Users Guide</em>.", "refType": "biblio"}, {"title": "Reliability modeling for safety\ncritical software", "context": [{"text": "The SSRM has the unique characteristic of only using the amount of failure data that characterizes the current failure process, and discards old, irrelevant data [18].", "sec": "sec8c", "part": "1"}, {"text": " Instead of using failure data from all tests \\${\\rm i}=1,\\ldots,{\\rm n}_{\\rm t}\\$, to estimate the failure rate parameters \\$\\alpha\\$, and \\$\\beta\\$, SSRM uses only the data from \\${\\rm i}={\\rm s},\\ldots,{\\rm n}_{\\rm t}\\$, where s is determined from a mean square error criterion computed between predicted and empirical reliability values in the range \\${\\rm i}=1,\\ldots,{\\rm n}_{\\rm t}\\$ [18].", "sec": "sec8c", "part": "1"}], "order": "18", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software reliability predictions can increase trust in the reliability of safety critical software such as the NASA Space Shuttle Primary Avionics Software System (Shuttle flight software). This objective was achieved using a novel approach to integrate software-safety criteria, risk analysis, reliability prediction, and stopping rules for testing. This approach applies to other safety-critical software. The authors cover only the safety of the software in a safety-critical system. The hardware ...", "documentLink": "/document/589933", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=589933", "pdfSize": "904KB"}, "id": "ref18", "text": "N. F. Schneidewind, \"Reliability modeling for safety\ncritical software\", <em>IEEE Trans. Reliability</em>, vol. 46, no. 1, pp. 88-98, March 1997.", "refType": "biblio"}, {"title": "Software Metrics: A Rigorous & Practical Approach", "context": [{"text": " The use of this measure is consistent with the concept of validating a prediction system in a given environment: the process of establishing the accuracy of the prediction system by empirically comparing model performance with empirical data [19].\n\n1)In comparing the predicted and empirical reliabilities of the geometric model, in Fig.\u00a02, we see that the predictions grossly overstate the actual reliability, as evidenced by the large Mean Relative Error (MRE).", "sec": "sec9", "part": "1"}], "order": "19", "id": "ref19", "text": "N. F. Fenton, S. L. Pfleeger, Software Metrics: A Rigorous & Practical Approach, 1997, PWS Publishing Company.", "refType": "biblio"}, {"id": "ref20", "context": [{"text": " Software reliability tools like SMERFS [17], and Computer Aided Software Reliability Estimation (CASRE) [20] allow you to assess whether the model fits the failure data.", "sec": "sec10", "part": "1"}], "text": "", "order": "20", "refType": "biblio"}, {"title": "Modeling and analysis of correlated software\nfailures of multiple types", "context": [{"text": " We suggest that readers consult [21] for analysis of new software reliability models to obtain additional perspective on model capability.", "sec": "sec10", "part": "1"}], "order": "21", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Most software reliability models assume independence of successive software runs. It is a strict assumption, and usually not valid in reality. Goseva-Popstojanova & Trivedi (2000) presented an interesting study on failure correlation among successive software runs. In this paper, by extending their results, a software reliability model is developed based on a Markov renewal process for the modeling of the dependence among successive software runs, where more than one type of failure is allowed i...", "documentLink": "/document/1402688", "pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1402688", "pdfSize": "197KB"}, "id": "ref21", "text": "Y. S. Dai, M. Xie, K. L. Poh, \"Modeling and analysis of correlated software\nfailures of multiple types\", <em>IEEE Trans. Reliability</em>, vol. 54, no. 1, pp. 100-106, 2005.", "refType": "biblio"}], "citations": {"paperCitations": {"nonIeee": [{"title": "A novel general approach to evaluating the PCBA for components with different membership function", "links": {"crossRefLink": "http://dx.doi.org/10.1016/j.asoc.2009.02.002", "openUrlImgLoc": "/assets/img/btn.find-in-library.png"}, "displayText": "Kuei-Hu Chang, Ching-Hsue Cheng, \"A novel general approach to evaluating the PCBA for components with different membership function\", <em>Applied Soft Computing</em>, vol. 9, pp. 1044, 2009, ISSN 15684946.", "order": "1"}]}, "patentCitationCount": "0", "contentType": "periodicals", "isEarlyAccess": false, "lastupdate": "2016-11-15T04:49:40", "publisher": "IEEE", "title": "Comparison of Reliability and Testing Models", "nonIeeeCitationCount": "1", "publicationNumber": "24", "formulaStrippedArticleTitle": "Comparison of Reliability and Testing Models", "mediaPath": "/mediastore/IEEE/content/media/24/4682503/4668473", "mlTime": "PT0.065028S", "ieeeCitationCount": "0"}}