{"details": {"issn": [{"value": "0018-9529", "format": "Print ISSN"}, {"value": "1558-1721", "format": "Online ISSN"}], "htmlAbstractLink": "/document/1688081/", "pubLink": "/xpl/RecentIssue.jsp?punumber=24", "title": "A New Methodology for Predicting Software Reliability in the Random Field Environments", "doi": "10.1109/TR.2006.879611", "isSMPTE": false, "xplore-pub-id": "24", "articleNumber": "1688081", "endPage": "468", "isPromo": false, "mediaPath": "/mediastore/IEEE/content/media/24/35614/1688081", "isNotDynamicOrStatic": true, "isJournal": true, "ephemeraFlag": "false", "isNumber": "35614", "persistentLink": "http://ieeexplore.ieee.org/servlet/opac?punumber=24", "startPage": "458", "standardTitle": "A New Methodology for Predicting Software Reliability in the Random Field Environments", "publicationDate": "Sept. 2006", "pdfPath": "/iel5/24/35614/01688081.pdf", "mlTime": "PT0.117862S", "publicationNumber": "24", "copyrightYear": "2006", "isOpenAccess": false, "isCustomDenial": false, "conferenceDate": " ", "isBook": false, "contentType": "periodicals", "openAccessFlag": "no", "displayPublicationTitle": "IEEE Transactions on Reliability", "authors": [{"bio": {"p": ["Xiaolin Teng obtained his Ph.D. in Industrial Engineering from Rutgers University in 2001. He also holds M.S. degrees in Statistics, Computer Science, and Automation from Rutgers University, and Tsinghua University. He is/was a member of ASA, INFORMS, IEEE, and IIE. He currently works at Time Warner Inc. as a research manager."]}, "affiliation": "Dept. of Ind. & Syst. Eng., Rutgers Univ., Piscataway, NJ", "name": "X. Teng"}, {"bio": {"p": ["Hoang Pham is Professor and Director of the Undergraduate Program in the Department of Industrial and Systems Engineering at Rutgers University, Piscataway, NJ. Before joining Rutgers, he was a senior engineering specialist at the Boeing Company, Seattle; and the Idaho National Engineering Laboratory, Idaho Falls. His research interests include software reliability, system reliability modeling, maintenance, fault-tolerant computing, and biological systemability-risk assessment. He received the M.S. degree in statistics from the University of Illinois, Urbana-Champaign; and the M.S. & Ph.D. degrees in industrial engineering from the State University of New York at Buffalo.", "He is the author/editor of more than 15 books including Software Reliability, System Software Reliability, Handbook of Reliability Engineering, and Springer Handbook of Engineering Statistics. He is currently the editor of the Springer Series in Reliability Engineering; and has published more than 90 journal articles, and 30 book chapters. He is editor-in-chief of the International Journal of Reliability, Quality and Safety Engineering, associate editor of the IEEE Trans. on Systems, Man and Cybernetics, an editorial board member of several journals, and has been conference chair and program chair of over 25 international conferences and workshops in reliability. He is a fellow of the IEEE."]}, "name": "H. Pham"}], "isEphemera": false, "isEarlyAccess": false, "lastupdate": "2016-11-14T23:54:19", "abstract": "This paper presents a new methodology for predicting software reliability in the field environment. Our work differs from some existing models that assume a constant failure detection rate for software testing and field operation environments, as this new methodology considers the random environmental effects on software reliability. Assuming that all the random effects of the field environments can be captured by a unit-free environmental factor, eta, which is modeled as a random-distributed variable, we establish a generalized random field environment (RFE) software reliability model that covers both the testing phase and the operating phase in the software development cycle. Based on the generalized RFE model, two specific random field environmental reliability models are proposed for predicting software reliability in the field environment: the gamma-RFE model, and the beta-RFE model. A set of software failure data from a telecommunication software application is used to illustrate the proposed models, both of which provide very good fittings to the software failures in both testing and operation environments. This new methodology provides a viable way to model the user environments, and further makes adjustments to the reliability prediction for similar software products. Based on the generalized software reliability model, further work may include the development of software cost models and the optimum software release policies under random field environments", "subType": "IEEE IEEE Transaction", "sections": {"multimedia": "false", "abstract": "true", "footnotes": "true", "disclaimer": "false", "keywords": "true", "citedby": "true", "references": "true", "figures": "true", "authors": "true"}, "copyrightOwner": "IEEE", "isStandard": false, "articleId": "1688081", "xplore-issue": "35614", "publisher": "IEEE", "issueLink": "/xpl/tocresult.jsp?isnumber=35614", "isACM": false, "allowComments": false, "isStaticHtml": false, "rightsLink": "http://s100.copyright.com/AppDispatchServlet?publisherName=ieee&publication=0018-9529&title=A+New+Methodology+for+Predicting+Software+Reliability+in+the+Random+Field+Environments&isbn=&publicationDate=Sept.+2006&author=X.+Teng&ContentID=10.1109/TR.2006.879611&orderBeanReset=true&startPage=458&endPage=468&volumeNum=55&issueNum=3", "citationCount": "30", "keywords": [{"kwd": ["Software reliability", "Software testing", "Predictive models", "Environmental factors", "Programming", "Laplace equations", "Fault detection", "Maximum likelihood estimation", "Application software", "Cost function"], "type": "IEEE Keywords"}, {"kwd": ["system recovery", "failure analysis", "program testing", "software cost estimation", "software reliability"], "type": "INSPEC: Controlled Indexing"}, {"kwd": ["software release policies", "software reliability", "random field environments", "constant failure detection rate", "software testing", "software development cycle", "gamma-RFE model", "beta-RFE model", "telecommunication software application", "software failures", "software products", "software cost model"], "type": "INSPEC: Non-Controlled Indexing"}, {"kwd": ["software reliability", "Beta distribution", "gamma distribution", "Laplace transform", "non-homogeneous Poisson process", "random field environments"], "type": "Author Keywords "}], "issue": "3", "chronOrPublicationDate": "Sept. 2006", "isFreeDocument": false, "userInfo": {"subscribedContent": false, "fileCabinetUser": false, "showGet802Link": false, "member": false, "individual": false, "showPatentCitations": true, "showOpenUrlLink": false, "institute": false, "guest": false, "fileCabinetContent": false}, "formulaStrippedArticleTitle": "A New Methodology for Predicting Software Reliability in the Random Field Environments", "publicationTitle": "IEEE Transactions on Reliability", "isConference": false, "isDynamicHtml": false, "volume": "55", "accessionNumber": "9091689"}, "citations": {"mediaPath": "/mediastore/IEEE/content/media/24/35614/1688081", "publisher": "IEEE", "patentCitationCount": "0", "publicationNumber": "24", "contentType": "periodicals", "formulaStrippedArticleTitle": "A New Methodology for Predicting Software Reliability in the Random Field Environments", "isEarlyAccess": false, "paperCitations": {"nonIeee": [{"title": "Statistical Certification of Software Systems", "displayText": "Alessandro Di Bucchianico, Jan Friso Groote, Kees Van Hee, Ronald Kruidhof, \"Statistical Certification of Software Systems\", <em>Communications in Statistics - Simulation and Computation</em>, vol. 37, pp. 346, 2008, ISSN 0361-0918.", "order": "1", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/03610910701790517"}}, {"title": "Real-Time Systems Design and Analysis", "displayText": "pp. 267, 2011, ISBN 9781118136607.", "order": "2", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/9781118136607.ch6"}}, {"title": "A new software reliability model with Vtub-shaped fault-detection rate and the uncertainty of operating environments", "displayText": "Hoang Pham, \"A new software reliability model with Vtub-shaped fault-detection rate and the uncertainty of operating environments\", <em>Optimization</em>, vol. 63, pp. 1481, 2014, ISSN 0233-1934.", "order": "3", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/02331934.2013.854787"}}, {"title": "An imperfect-debugging fault-detection dependent-parameter software", "displayText": "Hoang Pham, \"An imperfect-debugging fault-detection dependent-parameter software\", <em>International Journal of Automation and Computing</em>, vol. 4, pp. 325, 2007, ISSN 17518520.", "order": "4", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s11633-007-0325-8"}}, {"title": "OPERATIONAL SOFTWARE PERFORMABILITY EVALUATION BASED ON MARKOVIAN RELIABILITY GROWTH MODEL WITH SYSTEMABILITY", "displayText": "KOICHI TOKUNO, TOSHINORI FUKUDA, SHIGERU YAMADA, \"OPERATIONAL SOFTWARE PERFORMABILITY EVALUATION BASED ON MARKOVIAN RELIABILITY GROWTH MODEL WITH SYSTEMABILITY\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 19, pp. 1240001, 2012, ISSN 0218-5393.", "order": "5", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539312400013"}}, {"title": "PREDICTING SOFTWARE RELIABILITY IN A FUZZY FIELD ENVIRONMENT", "displayText": "AMIR H. S. GARMABAKI, ALIREZA AHMADI, P. K. KAPUR, UDAY KUMAR, \"PREDICTING SOFTWARE RELIABILITY IN A FUZZY FIELD ENVIRONMENT\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 20, pp. 1340001, 2013, ISSN 0218-5393.", "order": "6", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539313400019"}}, {"title": "Markovian Modeling for Operational Software Reliability Evaluation with Systemability", "displayText": "Koichi TOKUNO, Shigeru YAMADA, \"Markovian Modeling for Operational Software Reliability Evaluation with Systemability\", <em>IEICE Transactions on Fundamentals of Electronics Communications and Computer Sciences</em>, vol. E95.A, pp. 1469, 2012, ISSN 0916-8508.", "order": "7", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1587/transfun.E95.A.1469"}}, {"title": "Encyclopedia of Statistics in Quality and Reliability", "displayText": "Min Xie, Bo Yang, pp. , 2008, ISBN 9780470018613.", "order": "8", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/9780470061572.eqr059"}}, {"title": "A three-parameter fault-detection software reliability model with the uncertainty of operating environments", "displayText": "Kwang Yoon Song, In Hong Chang, Hoang Pham, \"A three-parameter fault-detection software reliability model with the uncertainty of operating environments\", <em>Journal of Systems Science and Systems Engineering</em>, pp. , 2016, ISSN 1004-3756.", "order": "9", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s11518-016-5322-4"}}, {"title": "Degradation modeling for real-time estimation of residual lifetimes in dynamic environments", "displayText": "Linkan Bian, Nagi Gebraeel, Jeffrey P. Kharoufeh, \"Degradation modeling for real-time estimation of residual lifetimes in dynamic environments\", <em>IIE Transactions</em>, pp. 1, 2014, ISSN 0740-817X.", "order": "10", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/0740817X.2014.955153"}}, {"title": "A generalized fault-detection software reliability model subject to random operating environments", "displayText": "Hoang Pham, \"A generalized fault-detection software reliability model subject to random operating environments\", <em>Vietnam Journal of Computer Science</em>, pp. , 2016, ISSN 2196-8888.", "order": "11", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s40595-016-0065-1"}}, {"title": "Communications in Computer and Information Science", "displayText": "Koichi Tokuno, Shigeru Yamada, <em>Communications in Computer and Information Science</em>, vol. 257, pp. 514, 2011, ISSN 1865-0929, ISBN 978-3-642-27206-6.", "order": "12", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/978-3-642-27207-3_56"}}, {"title": "Process Improvement and CMMI\u00ae for Systems and Software", "displayText": "pp. 191, 2010, ISBN 978-1-4200-6050-8.", "order": "13", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1201/9781420060515-c6"}}, {"title": "A testing-coverage software reliability model with the uncertainty of operating environments", "displayText": "In Hong Chang, Hoang Pham, Seung Woo Lee, Kwang Yoon Song, \"A testing-coverage software reliability model with the uncertainty of operating environments\", <em>International Journal of Systems Science: Operations & Logistics</em>, vol. 1, pp. 220, 2014, ISSN 2330-2674.", "order": "14", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1080/23302674.2014.970244"}}, {"title": "A comparison analysis of environmental factors affecting software reliability", "displayText": "Mengmeng Zhu, Xuemei Zhang, Hoang Pham, \"A comparison analysis of environmental factors affecting software reliability\", <em>Journal of Systems and Software</em>, pp. , 2015, ISSN 01641212.", "order": "15", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2015.04.083"}}, {"title": "Loglog fault-detection rate and testing coverage software reliability models subject to random environments", "displayText": "Hoang Pham, \"Loglog fault-detection rate and testing coverage software reliability models subject to random environments\", <em>Vietnam Journal of Computer Science</em>, vol. 1, pp. 39, 2014, ISSN 2196-8888.", "order": "16", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1007/s40595-013-0003-4"}}, {"title": "Enhancing software reliability estimates using modified adaptive testing", "displayText": "Hai Hu, Chang-Hai Jiang, Kai-Yuan Cai, W. Eric Wong, Aditya P. Mathur, \"Enhancing software reliability estimates using modified adaptive testing\", <em>Information and Software Technology</em>, vol. 55, pp. 288, 2013, ISSN 09505849.", "order": "17", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.infsof.2012.08.012"}}, {"title": "A New Software Reliability Model Considering Warps Between Different Software Failure Processes : A New Software Reliability Model Considering Warps Between Different Software Failure Processes", "displayText": "Jun-Gang LOU, Jian-Hui JIANG, Ang JIN, \"A New Software Reliability Model Considering Warps Between Different Software Failure Processes : A New Software Reliability Model Considering Warps Between Different Software Failure Processes\", <em>Chinese Journal of Computers</em>, vol. 33, pp. 1263, 2010, ISSN 02544164.", "order": "18", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.3724/SP.J.1016.2010.01263"}}, {"title": "Multi-Attribute Utility Theory for Estimation of Optimal Release Time and Change-Point", "displayText": "Yuka Minamino, Shinji Inoue, Shigeru Yamada, \"Multi-Attribute Utility Theory for Estimation of Optimal Release Time and Change-Point\", <em>International Journal of Reliability Quality and Safety Engineering</em>, vol. 22, pp. 1550019, 2015, ISSN 0218-5393.", "order": "19", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1142/S0218539315500199"}}], "ieee": [{"title": "Considering Testing-Coverage and Fault Removal Efficiency Subject to the Random Field Environments with Imperfect Debugging in Software Reliability Assessment", "displayText": "Qiuying Li, Chengyong Mao, \"Considering Testing-Coverage and Fault Removal Efficiency Subject to the Random Field Environments with Imperfect Debugging in Software Reliability Assessment\", <em>Software Reliability Engineering Workshops (ISSREW) 2016 IEEE International Symposium on</em>, pp. 257-263, 2016.", "order": "1", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7789409", "pdfSize": "156KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7789409"}}, {"title": "A Cost Analysis of Systems Subject to Random Field Environments and Reliability", "displayText": "Fabio Sgarbossa, Hoang Pham, \"A Cost Analysis of Systems Subject to Random Field Environments and Reliability\", <em>Systems Man and Cybernetics Part C: Applications and Reviews IEEE Transactions on</em>, vol. 40, pp. 429-437, 2010, ISSN 1094-6977.", "order": "2", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5437299", "pdfSize": "259KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5437299"}}, {"title": "Modeling and Analysis of Software Fault Detection and Correction Process by Considering Time Dependency", "displayText": "Y. P. Wu, Q. P. Hu, M. Xie, S. H. Ng, \"Modeling and Analysis of Software Fault Detection and Correction Process by Considering Time Dependency\", <em>Reliability IEEE Transactions on</em>, vol. 56, pp. 629-642, 2007, ISSN 0018-9529.", "order": "3", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4378411", "pdfSize": "697KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4378411"}}, {"title": "On the Trend of Remaining Software Defect Estimation", "displayText": "Cheng-Gang Bai, Kai-Yuan Cai, Qing-Pei Hu, Szu-Hui Ng, \"On the Trend of Remaining Software Defect Estimation\", <em>Systems Man and Cybernetics Part A: Systems and Humans IEEE Transactions on</em>, vol. 38, pp. 1129-1142, 2008, ISSN 1083-4427.", "order": "4", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4604821", "pdfSize": "1318KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4604821"}}, {"title": "A new method for estimation of software system reliability in neural networks", "displayText": "Denghua Mei, \"A new method for estimation of software system reliability in neural networks\", <em>Electro/Information Technology 2007 IEEE International Conference on</em>, pp. 188-191, 2007.", "order": "5", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4374450", "pdfSize": "508KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4374450"}}, {"title": "A Testing-Coverage Software Reliability Growth Model Considering the Randomness of the Field Environment", "displayText": "Chengyong Mao, Qiuying Li, \"A Testing-Coverage Software Reliability Growth Model Considering the Randomness of the Field Environment\", <em>Software Quality Reliability and Security Companion (QRS-C) 2016 IEEE International Conference on</em>, pp. 402-403, 2016.", "order": "6", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=7573777", "pdfSize": "167KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/7573777"}}, {"title": "The Application of Theory and Method of Time Series in the Modeling of Software Reliability", "displayText": "Chen Zhongmin, Wu Yeqing, \"The Application of Theory and Method of Time Series in the Modeling of Software Reliability\", <em>Information Technology and Computer Science (ITCS) 2010 Second International Conference on</em>, pp. 340-343, 2010.", "order": "7", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5557116", "pdfSize": "254KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/5557116"}}, {"title": "Quasi-Renewal Time-Delay Fault-Removal Consideration in Software Reliability Modeling", "displayText": "Seheon Hwang, Hoang Pham, \"Quasi-Renewal Time-Delay Fault-Removal Consideration in Software Reliability Modeling\", <em>Systems Man and Cybernetics Part A: Systems and Humans IEEE Transactions on</em>, vol. 39, pp. 200-209, 2009, ISSN 1083-4427.", "order": "8", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4694128", "pdfSize": "251KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4694128"}}, {"title": "Prognostic Degradation Models for Computing and Updating Residual Life Distributions in a Time-Varying Environment", "displayText": "Nagi Gebraeel, Jing Pan, \"Prognostic Degradation Models for Computing and Updating Residual Life Distributions in a Time-Varying Environment\", <em>Reliability IEEE Transactions on</em>, vol. 57, pp. 539-550, 2008, ISSN 0018-9529.", "order": "9", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=4601500", "pdfSize": "874KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/4601500"}}, {"title": "An imperfect-debugging model with learning-factor based fault-detection rate", "displayText": "Javaid Iqbal, S.M.K. Quadri, N. Ahmad, \"An imperfect-debugging model with learning-factor based fault-detection rate\", <em>Computing for Sustainable Global Development (INDIACom) 2014 International Conference on</em>, pp. 383-387, 2014.", "order": "10", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6828164", "pdfSize": "161KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6828164"}}, {"title": "Research on reliable test tool for GNSS Simulation Platform", "displayText": "Xiao Ping, \"Research on reliable test tool for GNSS Simulation Platform\", <em>Communications Circuits and Systems (ICCCAS) 2013 International Conference on</em>, vol. 2, pp. 127-129, 2013.", "order": "11", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=6765301", "pdfSize": "154KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "documentLink": "/document/6765301"}}]}, "mlTime": "PT0.163366S", "title": "A New Methodology for Predicting Software Reliability in the Random Field Environments", "lastupdate": "2016-11-14T23:54:19", "ieeeCitationCount": "11", "nonIeeeCitationCount": "19"}, "references": [{"id": "ref1", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": " In this study, we use the proportional hazards representation first proposed by Cox [1], and instead of relating the operating environment to the failure intensity \\$\\lambda\\$, we assume that the effect of the operating environment is to multiply the unit failure detection rate \\$b(t)\\$ achieved in the testing environment."}], "title": "Regression models and life tables (with discussion)", "order": "1", "text": "D. R. Cox, \"Regression models and life tables (with discussion)\", <em>Journal of the Royal Statistical Society Series B</em>, vol. 34, pp. 133-144, 1972."}, {"id": "ref2", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5220566", "pdfSize": "918KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper presents a stochastic model for the software failure phenomenon based on a nonhomogeneous Poisson process (NHPP). The failure process is analyzed to develop a suitable meanvalue function for the NHPP; expressions are given for several performance measures. Actual software failure data are analyzed and compared with a previous analysis.", "documentLink": "/document/5220566"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}], "title": "Time-dependent error-detection rate model\nfor software and other performance measures", "order": "2", "text": "A. L. Goel, K. Okumoto, \"Time-dependent error-detection rate model\nfor software and other performance measures\", <em>IEEE Transactions on Reliability</em>, vol. 28, pp. 206-211, 1979."}, {"id": "ref3", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=885862", "pdfSize": "781KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "We first describe how several existing software reliability growth models based on nonhomogeneous Poisson processes (NHPPs) can be derived based on a unified theory for NHPP models. Under this general framework, we can verify existing NHPP models and derive new NHPP models. The approach covers a number of known models under different conditions. Based on these approaches, we show a method of estimating and computing software reliability growth during the operational phase. We can use this method...", "documentLink": "/document/885862"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[3][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Huang, [3] proposed a method of predicting the fault detection rate to reflect changes in the user's operational environments."}], "title": "Quantitative\nsoftware reliability modeling from testing to operation", "order": "3", "text": "C.-Y. Huang, S.-Y. Kuo, M. R. Lyu, J.-H. Lo, \"Quantitative\nsoftware reliability modeling from testing to operation\", <em>Proceedings of the International Symposium on Software Reliability Engineering</em>, pp. 72-82, 2000, IEEE."}, {"id": "ref4", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5390352", "pdfSize": "1535KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper discusses improvements to conventional software reliability analysis models by making the assumptions on which they are based more realistic. In an actual project environment, sometimes no more information is available than reliability data obtained from a test report. The models described here are designed to resolve the problems caused by this constraint on the availability of reliability data. By utilizing the technical knowledge about a program, a test, and test data, we can selec...", "documentLink": "/document/5390352"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[4][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec3a", "part": "1", "text": "The error detection rate function in this model, \\$b(t)\\$, is a non-decreasing function with an inflexion S-shaped curve, which captures the learning process of the software developers [4]. where \\$b\\$is the asymptotic unit software failure detection rate, and\\$c\\$is the parameter defining the shape of the learn curve."}], "title": "Software reliability analysis models", "order": "4", "text": "M. Ohba, \"Software reliability analysis models\", <em>IBM Journal of Research Development</em>, vol. 28, pp. 428-443, 1984."}, {"id": "ref5", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=743412", "pdfSize": "64KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, a cost model with warranty cost, time to remove each error detected in the software system, and risk cost due to software failure is developed. A software reliability model based on non-homogeneous Poisson process is used. The optimal release policies to minimize the expected total software cost are discussed. A software tool is also developed using Excel and Visual Basic to facilitate the task of determining the optimal software release time. Numerical examples are provided to il...", "documentLink": "/document/743412"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[5][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Among these software reliability models, NHPP-based models have been successfully applied to model the software failure processes, and predict the software failures; and are useful to determine when to stop testing, and release the software [5]."}], "title": "A software cost model with warranty and risk costs", "order": "5", "text": "H. Pham, X. Zhang, \"A software cost model with warranty and risk costs\", <em>IEEE Transactions on Computers</em>, vol. 48, no. 1, pp. 71-75, January 1999."}, {"id": "ref6", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=784276", "pdfSize": "619KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "A general software reliability model based on the nonhomogeneous Poisson process (NHPP) is used to derive a model that integrates imperfect debugging with the learning phenomenon. Learning occurs if testing appears to improve dynamically in efficiency as one progresses through a testing phase. Learning usually manifests itself as a changing fault-detection rate. Published models and empirical data suggest that efficiency growth due to learning can follow many growth-curves, from linear to that d...", "documentLink": "/document/784276"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[6][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Most existing NHPP software reliability models have been carried out through the fault intensity rate function within a controlled operating environment [6]."}], "title": "A general imperfect debugging NHPP model with S-shaped fault\ndetection rate", "order": "6", "text": "H. Pham, L. Normann, X. Zhang, \"A general imperfect debugging NHPP model with S-shaped fault\ndetection rate\", <em>IEEE Transactions on Reliability</em>, vol. 48, no. 2, pp. 169-175, June 1999."}, {"id": "ref7", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[7][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec2", "part": "1", "text": " Fig. 1 shows the last two phases of the software life cycle: in-house testing, and field operation [7]."}], "title": "Software Reliability", "order": "7", "text": "H. Pham, Software Reliability, 2000, Springer-Verlag."}, {"id": "ref8", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=5221735", "pdfSize": "807KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "This paper investigates a stochastic model for a software error detection process in which the growth curve of the number of detected software errors for the observed data is S-shaped. The software error detection model is a nonhomogeneous Poisson process where the mean-value function has an S-shaped growth curve. The model is applied to actual software error data. Statistical inference on the unknown parameters is discussed. The model fits the observed data better than other models.", "documentLink": "/document/5221735"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[8][9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}], "title": "S-shaped reliability growth modeling for software error\ndetection", "order": "8", "text": "S. Yamada, M. Ohba, S. Osaki, \"S-shaped reliability growth modeling for software error\ndetection\", <em>IEEE Transactions on Reliability</em>, pp. 475-484, 1984."}, {"id": "ref9", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/S0951-8320(00)00069-7"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": "Yang & Xie [9] mentioned that operational reliability, and testing reliability are often different from each other."}, {"sec": "sec1", "part": "1", "text": " Reference [9], however, assumed the operational failure rate is still close to the testing failure rate; the difference between them is that operational failure rate decreases with time, while testing failure rate keeps constant."}], "title": "A\nstudy of operational and testing reliability in software reliability analysis", "order": "9", "text": "B. Yang, M. Xie, \"A\nstudy of operational and testing reliability in software reliability analysis\", <em>Reliability Engineering and System Safety</em>, vol. 70, pp. 323-329, 2000."}, {"id": "ref10", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/1520-6750(199108)38:4&lt;567::AID-NAV3220380409&gt;3.0.CO;2-0"}, "context": [{"sec": "sec3a", "part": "1", "text": "The Gamma distribution has sufficient flexibility, and has desirable qualities with respect to computations [10]."}], "title": "Dependent in target element detections induced by the environment", "order": "10", "text": "M. A. Youngren, \"Dependent in target element detections induced by the environment\", <em>Naval Research Logistics</em>, vol. 38, pp. 567-577, 1991."}, {"id": "ref11", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1002/asmb.453"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Zhang, [11] proposed a methodology which modifies the software reliability model in the operation environment by introducing a calibration factor, and Jeske, [16] recently extended an empirical calibration factor for adjusting the failure rate estimate obtained from a test dataset."}, {"sec": "sec1", "part": "1", "text": " Because the calibration factor studied in [11], [16] is calculated from the averaged failure intensity during the testing and operation phases, it does not utilize most of the software failure information in the operation phase."}, {"sec": "sec4", "part": "1", "text": "We consider a telecommunication software system that supports voice, and data communication [11]."}, {"sec": "sec4a", "part": "1", "text": "Tables II, and III show a set of failure data from this system during software testing [11], and field operation, respectively."}], "title": "Calibrating software reliability\nmodels when the test environment does not match the user environment", "order": "11", "text": "X. Zhang, D. Jeske, H. Pham, \"Calibrating software reliability\nmodels when the test environment does not match the user environment\", <em>Applied Stochastic Models in Business and Industry</em>, vol. 18, pp. 87-99, 2002."}, {"id": "ref12", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1206460", "pdfSize": "654KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software reliability growth models (SRGMs) have been developed to estimate software reliability measures such as the number of remaining faults, software failure rate, and software reliability. Issues such as imperfect debugging and the learning phenomenon of developers have been considered in these models. However, most SRGMs assume that faults detected during tests will eventually be removed. Consideration of fault removal efficiency in the existing models is limited. In practice, fault remova...", "documentLink": "/document/1206460"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[12][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1a", "part": "1", "text": "Zhang, [12] recently proposed a generalized NHPP model with the following assumptions:\n1)\nSoftware can fail during execution, caused by faults in the software.\n\n2)\nThe software-failure detection rate at any time is proportional to the number of remaining faults in the software at that time.\n\n3)\nWhen a software failure occurs, a debugging effort removes the faults immediately with probability \\$p\\$; \\$p\\gg 1-p\\$.\n\n4)\nFor each debugging effort, whether the fault is successfully removed or not, some new faults may be introduced into the software system with probability \\$q\\$, \\$q\\ll p\\$.\n\n5)\nThe environment affects the unit failure detection rate, \\$b(t)\\$, by multiplying a factor \\$\\eta\\$, where \\$\\eta\\$ is a time-independent, unit-free random variable22Note that assumption 5 and \\$\\eta\\$ are not considered in [12]."}, {"sec": "fn2", "text": "Note that assumption 5 and \\$\\eta\\$ are not considered in [12].", "type": "footnote"}, {"sec": "sec1a", "part": "1", "text": "If the marginal conditions are given as \\$m(0)=0\\$, and \\$a(0)=a\\$, then for a specific environmental factor \\$\\eta\\$, the solutions to (1), and (2) are given respectively as [12] ."}], "title": "Considering\nfault removal efficiency in software reliability assessment", "order": "12", "text": "X. Zhang, X. Teng, H. Pham, \"Considering\nfault removal efficiency in software reliability assessment\", <em>IEEE Transactions on Systems Man and CyberneticsPart A</em>, vol. 33, no. 1, pp. 114-120, 2003."}, {"id": "ref13", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[13][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Musa [13] introduced a test compression factor, defined as the ratio of the failure rate during testing to the failure rate during field use, which, however, is primarily an abstract concept, and not an estimable quantity."}], "title": "Software Reliability, Measurement, Prediction and Applications", "order": "13", "text": "J. D. Musa, A. Iannino, K. Okumoto, Software Reliability Measurement Prediction and Applications, 1987, McGraw Hill."}, {"id": "ref14", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=989472", "pdfSize": "548KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In general, software reliability models have focused on modeling and predicting failure occurrence and have not given equal priority to modeling the fault correction process. However, there is a need for fault correction prediction, because there are important applications that fault correction modeling and prediction support. These are the following: predicting whether reliability goals have been achieved, developing stopping rules for testing, formulating test strategies, and rationally alloca...", "documentLink": "/document/989472"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[14][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Schneidewind [14], [15] proposed an approach to relate fault correction to failure prediction by introducing a time delay between failure detection and fault correction time, where the rate of fault correction was proportional to the rate of failure detection."}], "title": "Modeling the fault correction process", "order": "14", "text": "N. F. Schneidewind, \"Modeling the fault correction process\", <em>Proceedings of 12th IEEE International Symposium on Software Reliability Engineering</em>, pp. 185-190, 2001-Nov."}, {"id": "ref15", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1167772", "pdfSize": "225KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In general, software reliability models have focused an modeling and predicting failure occurrence and have not given equal priority to modeling the fault correction process. However, there is a need for fault correction prediction, because there are important applications that fault correction modeling and prediction support. These are the following: predicting whether reliability goals have been achieved, developing stopping rules for testing, formulating test strategies, and rationally alloca...", "documentLink": "/document/1167772"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[15][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Schneidewind [14], [15] proposed an approach to relate fault correction to failure prediction by introducing a time delay between failure detection and fault correction time, where the rate of fault correction was proportional to the rate of failure detection."}], "title": "An integrated failure detection\nand fault correction model", "order": "15", "text": "N. F. Schneidewind, \"An integrated failure detection\nand fault correction model\", <em>Proceedings of 18th IEEE International Conference on Software Maintenance</em>, pp. 238-241, 2002-October."}, {"id": "ref16", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1402689", "pdfSize": "254KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Software test environments are often different from field environments. Using test data exclusively to estimate a field failure rate will not usually give a very accurate estimate. In this paper, we extend an empirical calibration methodology for adjusting the failure rate estimate obtained from analysing test data. In addition to scaling the estimated failure rate of a fault, we propose scaling the estimated number of residual faults as well. We also derive likelihood ratio tests to formally de...", "documentLink": "/document/1402689"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[16][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec1", "part": "1", "text": " Zhang, [11] proposed a methodology which modifies the software reliability model in the operation environment by introducing a calibration factor, and Jeske, [16] recently extended an empirical calibration factor for adjusting the failure rate estimate obtained from a test dataset."}, {"sec": "sec1", "part": "1", "text": " Because the calibration factor studied in [11], [16] is calculated from the averaged failure intensity during the testing and operation phases, it does not utilize most of the software failure information in the operation phase."}], "title": "Adjusting software failure rates that are estimated from\ntest data", "order": "16", "text": "D. R. Jeske, X. M. Zhang, L. Pham, \"Adjusting software failure rates that are estimated from\ntest data\", <em>IEEE Transactions on Reliability</em>, vol. 54, no. 1, pp. 107-114, 2005."}, {"id": "ref17", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.ejor.2004.04.034"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[17][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": "Based on the generalized software reliability model, further work may include the development of software cost models (see recent studies by Tamura & Yamada [17], Huang & Lyu [18], and Pham [19]), correlated software failures (see Dai [20]), and/or operational profiles (see Bai [21]) under the subject of random field environments."}], "title": "A flexible stochastic differential equation model in distributed\ndevelopment environment", "order": "17", "text": "Y. Tamura, S. Yamada, \"A flexible stochastic differential equation model in distributed\ndevelopment environment\", <em>European Journal of Operational Research</em>, vol. 168, no. 1, pp. 143-152, 2006."}, {"id": "ref18", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1546566", "pdfSize": "602KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "We consider two kinds of software testing-resource allocation problems. The first problem is to minimize the number of remaining faults given a fixed amount of testing-effort, and a reliability objective. The second problem is to minimize the amount of testing-effort given the number of remaining faults, and a reliability objective. We have proposed several strategies for module testing to help software project managers solve these problems, and make the best decisions. We provide several system...", "documentLink": "/document/1546566"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[18][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": "Based on the generalized software reliability model, further work may include the development of software cost models (see recent studies by Tamura & Yamada [17], Huang & Lyu [18], and Pham [19]), correlated software failures (see Dai [20]), and/or operational profiles (see Bai [21]) under the subject of random field environments."}], "title": "Optimal testing resource allocation and\nsensitivity analysis in software development", "order": "18", "text": "C. Y. Huang, M. R. Lyu, \"Optimal testing resource allocation and\nsensitivity analysis in software development\", <em>IEEE Transactions on Reliability</em>, vol. 54, no. 4, pp. 592-603, 2005."}, {"id": "ref19", "refType": "biblio", "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[19][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": "Based on the generalized software reliability model, further work may include the development of software cost models (see recent studies by Tamura & Yamada [17], Huang & Lyu [18], and Pham [19]), correlated software failures (see Dai [20]), and/or operational profiles (see Bai [21]) under the subject of random field environments."}], "title": "System Software Reliability", "order": "19", "text": "H. Pham, System Software Reliability, 2006, Springer."}, {"id": "ref20", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1402688", "pdfSize": "197KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "Most software reliability models assume independence of successive software runs. It is a strict assumption, and usually not valid in reality. Goseva-Popstojanova & Trivedi (2000) presented an interesting study on failure correlation among successive software runs. In this paper, by extending their results, a software reliability model is developed based on a Markov renewal process for the modeling of the dependence among successive software runs, where more than one type of failure is allowed i...", "documentLink": "/document/1402688"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[20][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": "Based on the generalized software reliability model, further work may include the development of software cost models (see recent studies by Tamura & Yamada [17], Huang & Lyu [18], and Pham [19]), correlated software failures (see Dai [20]), and/or operational profiles (see Bai [21]) under the subject of random field environments."}], "title": "Modeling and analysis of correlated software failures of\nmultiple types", "order": "20", "text": "Y. S. Dai, M. Xie, K. L. Poh, \"Modeling and analysis of correlated software failures of\nmultiple types\", <em>IEEE Transactions on Reliability</em>, vol. 54, no. 1, pp. 100-106, 2005."}, {"id": "ref21", "refType": "biblio", "links": {"openUrlImgLoc": "/assets/img/btn.find-in-library.png", "crossRefLink": "http://dx.doi.org/10.1016/j.jss.2004.11.034"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[21][22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": "Based on the generalized software reliability model, further work may include the development of software cost models (see recent studies by Tamura & Yamada [17], Huang & Lyu [18], and Pham [19]), correlated software failures (see Dai [20]), and/or operational profiles (see Bai [21]) under the subject of random field environments."}], "title": "Bayesian network based software reliability prediction with\nan operational profile", "order": "21", "text": "C. G. Bai, \"Bayesian network based software reliability prediction with\nan operational profile\", <em>Journal of Systems and Software</em>, vol. 77, no. 2, pp. 103-112, 2005."}, {"id": "ref22", "refType": "biblio", "links": {"pdfLink": "/stamp/stamp.jsp?tp=&arnumber=1261844", "pdfSize": "543KB", "openUrlImgLoc": "/assets/img/btn.find-in-library.png", "abstract": "In this paper, we present a software gain model under random field environment with consideration of not only time to remove faults during in-house testing, cost of removing faults during beta testing, risk cost due to software failure, but also the benefits from reliable executions of the software during the beta testing and field operation. To our knowledge, this is the first study that incorporates the random field environmental factor into the cost model. We also provide an optimal release p...", "documentLink": "/document/1261844"}, "context": [{"sec": "sec1", "part": "1", "text": "Many software reliability models [2]\u2013[9], [11]\u2013[22] have been proposed to help software developers and managers analyse the software development process to estimate the development cost, and assess the level of software reliability."}, {"sec": "sec5", "part": "1", "text": " A simple cost model for quantifying the gain with consideration of random field environments has been studied by the authors [22] as a preliminary study in this direction."}], "title": "A software cost model for quantifying the gain with considerations\nof random field environments", "order": "22", "text": "X. Teng, H. Pham, \"A software cost model for quantifying the gain with considerations\nof random field environments\", <em>IEEE Transactions on Computers</em>, vol. 53, no. 3, pp. 380-384, 2004."}], "arnumber": "1688081"}